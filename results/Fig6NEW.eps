%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: Fig6NEW.pdf
%%Creator: (Adobe Acrobat 15.23.0)
%%For: christineackerley
%%CreationDate: 2017-02-22, 2:26 PM
%%BoundingBox: 0 0 197 540
%%HiResBoundingBox: 0 0 197 540
%%CropBox: 0 0 197 540
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 552 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 84.159810, 2016/09/10-02:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2017-02-22T21:38:32Z"
   xmp:ModifyDate="2017-02-22T21:38:32Z"
   pdf:Producer="Mac OS X 10.11.6 Quartz PDFContext"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -540 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 540 li
197 540 li
197 0 li
cp
clp
197 540 mo
0 540 li
0 0 li
197 0 li
197 540 li
false sop
0 0 0 0 cmyk
f
gsave
0 0 mo
178.985 0 li
178.985 540 li
0 540 li
0 0 li
clp
gsave
0 540 mo
178.985 540 li
178.985 0 li
0 0 li
0 540 li
clp
/1 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
%ADOBeginSubsetFont: IAAAAA+Helvetica Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /IAAAAA+Helvetica def/FontInfo 6 dict dup begin/ItalicAngle 0 def/BaseFontName (Helvetica) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 65 /A putdup 66 /B putdup 67 /C putdef/FontBBox {-951 -481 1446 1122} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings5 dict dup begin/space <1C60D8A8C9B854D00D> |-/A <1C60D8A8C9B64EDFF4A769B0E349B0B8A8759517834132408F730D5925332B160EAFC678A283B12B9F41A37E5CF702EF2D2E718583BF> |-/B <1C60D8A8C9B64EDFF4E8F029E491459914546F05F980240E216037EFFB56810F73C7B1AD75758AC950CDF0AE7CA5E10B4B98E91DD14CBA33340505432C4EBD036ED5D8912D20451B0A88BD5908DF5F74741DA09743ACC2D69ECC46C5DD005482FE9F42B63F3612F31E021BB829EB7CDDF491856FAD0A1D6B2854CE32CAE2827DAD35AA4DEB8EA2DDAB1E824241122D8E6929DF014B94E2393EF8A13B> |-/C <1C60D8A8C9B6079F6D8209747A86332E73924F1B07F271169856A53C915771D7C530ADE68D8CA49F0A6B3478F9E8176949771F40D91B68E1A88C72CE81CC0A91B3CFB642960E7EB2127A1637D49961A11F5DD40622F39379CDAB7E5B349DF832E4955008C5E3208AB258B012A237635179513D820ACF76E0A17ED392C351599687E8E7D0> |-/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GEFRQA+Helvetica /IAAAAA+Helvetica findfont ct_VMDictPut/GEFRQA+Helvetica*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /B /C 188{/.notdef}rp]GEFRQA+Helvetica nfGEFRQA+Helvetica*1 [8.378 0 0 -8.378 0 0 ]msf5.72865 12.377 mo(A)sh3.57047 190.6 mo(B)sh3.57047 369.585 mo(C)shGEFRQA+Helvetica*1 [6.85472 0 0 -6.85472 0 0 ]msf143.937 18.2381 mo( )sh.695 .672 .637 .738 cmyk
%ADOBeginSubsetFont: IAAAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginGEFRQA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/hyphen <1C60D8A8C9B81F2C797F8B2BDB0639171EDAAB309BF7> |-/d <1C60D8A8C9B7EF322B197A4CECAEBFA93CFC6ACCC571419BFA5461EED77BFB3D8FE900AE7AE7F3558D5F515A8BFDAAA816E55EE92701787F654353E7BD1A4CD427A1C3D52C079A2D5373BCA2D0E81E97334505A34C6046F7856771303B422A1AED127DFB82533DF581F3B1C10CE7C6EB68EFDC809921DBBDF534E7567CC2D2750B89DE10766FCFB923BB97A09A4C79BB9A> |-/e <1C60D8A8C9B7EF322BB83B593C4F5531F1493EEBEAC6F4C92C25FF10F1FB8EC7E530E4B1F1C9E51F31B44D59539AB4135F310FAB43C5A16AA1F4EA07D67BBB916AB355913EB7D45F3AC7C9CF1FD32728FCA1A2D5BBD257CEF831AE751904AD7F4FBE21E10F3A844E74CF6B850E894017941E45AE6BCDA168BF4979345C67DB13F0C5FE9888EB731B0A06A8D5D1475F60C11332FBE633540E50C86671A26FD83CD870BB68F7A9> |-/i <1C60D8A8C9B88C084EE8A68C7FA2A58C433876A9B19799899FEF7A13> |-/l <1C60D8A8C9B88C084B857C39B4185359B4FDA8> |-/p <1C60D8A8C9B7EF322BA467487181334E955BE246DF5D0EF3A11E2BDC8B674F6546E88A741A6A22FD8101960B985F64CBBE95E02BBF21B77F9A8334BFBA9533492E7CA0F0DECFBF12D8467325B4174F987BBF353C73C5D70057F40D42361649961064C7B7F613D284310CB0B59908DA85F34298558C6B0DF453AED21873A379BC9BBE582E1040BDEC2230FBB52642> |-/t <1C60D8A8C9B854D0DE8EB299D76AFE3A3E7733E2D967660702D2EB06537F4BAA1F2129056DC9771C91484E3F22B637802F61054AB3D0E9902E08C4E6B9ADDC0E2F51D38CAD652B2A777D9304919B1B524DD7CC56553E03BE971752FD0161CF> |-/w <1C60D8A8C9B6079F005DC3C75B1A77147C8375CCDFD0A24C766DB69E35DE36706983CA4785D8107CB89C2D97982F5548429FD5F71FC913D3> |-/y <1C60D8A8C9B7A73DB9AA12572CE44B37D0759EC5FA4258DA87660F3841304B61A1A911D1876BE6D5484230C2A9DECADC4A3BB259186F9713382F53071656420086C18502612AEB2A0E39781AC31868BC5BE3AB2872591151CD2F994021F04AB4E3C05AD2A97CE0F737B6F0C53FBA3CB18D70D123> |-systemdict /gcheck known {setglobal} if end {end} ifendGEFRQA+Helvetica /Encoding getdup 45 /hyphen putdup 100 /d putdup 101 /e putdup 105 /i putdup 108 /l putdup 112 /p putdup 116 /t putdup 119 /w putdup 121 /y putpop%ADOEndSubsetFont
/GEFRQA+Helvetica*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen 19{/.notdef}rp /A /B /C 32{/.notdef}rp /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l 3{/.notdef}rp /p 3{/.notdef}rp /t 2{/.notdef}rp /w /.notdef /y 134{/.notdef}rp]GEFRQA+Helvetica nfGEFRQA+Helvetica*1 [6.85472 0 0 -6.85472 0 0 ]msf97.7047 21.8382 mo(wild-type)[4.94979 1.52244 1.52244 3.8119 2.28326 1.9063 3.42805 3.81191 0 ]xsh%ADOBeginSubsetFont: JAAAAA+Helvetica-Oblique Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /JAAAAA+Helvetica-Oblique def/FontInfo 6 dict dup begin/ItalicAngle 0 def/BaseFontName (Helvetica-Oblique) def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 40 /parenleft putdup 41 /parenright putdup 45 /hyphen putdup 49 /one putdup 50 /two putdup 99 /c putdup 107 /k putdup 109 /m putdup 111 /o putdup 121 /y putdef/FontBBox {-933 -481 1571 1138} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings11 dict dup begin/parenleft <1C60D8A8C9B81F2C35A9290311C270F97455194FC171631F389448EC93A402F49F41A10E91BA5FD23A60984A7DBE6A079F2E0AAC2E95AE7578302A8CFA097FD465A9422775837B5AA31AD1AEB21D38127F41CBA5CB17E2> |-/parenright <1C60D8A8C9B81F2C7218D00D6FCD7E388F09AE45024E7A961703099F07E4C1D7890D5DFC3BDA3E98EFCED9D4C1F85F76F14AB59E5A142B3669469C7D1F22D97DD036FE27C04ECAC44C13CCD59726D97255E28568489D> |-/hyphen <1C60D8A8C9B81F2C2B5440400295FA9064E3856015C093> |-/one <1C60D8A8C9B7EF322471B11E67459D0CD2510FB4E6D821AAEBE1FC6746C329003CA358E4C39A4439E8DDD3EE2E> |-/two <1C60D8A8C9B7EF322D450DE2F753349C8A432CA60A32275AE552F4405F0896271686E38A0B4CB3A10FF63FE01DE75CC72612E6AF21DBAFF121F596E18822C7049322B0D83F6397618697F59746D7104D1E49902716E6AEB6B1D9A3C940FBE94495F55D0CB7D0369E4E9E5FC00B9193974335CEEF3556BFA7025CA86DAD1C4B41CFBD2E057D3D132CFC4F1122A3265F> |-/c <1C60D8A8C9B7A73DB62D9B1CD0EA010C38C91C89D6815547259BC7C5D05C24EBE61C7F77881C1E4D7338185204142465CFE9C19983562A7250368B77C3051DCEDF954E21D907FED076418A5C5818AE3A7512E994887D9CF9DDB0B5B0593B0281AE26A806A00BEB8CA4704C3A6C8C047BDC235EFACDDE8393ED09DF162B3813DED0563F> |-/k <1C60D8A8C9B7A73D847F857A58220FEAF15F4C152113A1597F28547CE5A36F2B4E2937EB5A4391AF06BA4F201A91FC101969A6A081> |-/m <1C60D8A8C9B6B41C87955CDC075AFC5C5F57FEEEF466637068C56B9B9EFAC4487EBEA947D19F49550F968F49AAF97044F3160E5A91C1911B9BF3B936B5F64359825F4DFF271F647DC2ED6F6D0EF1A0B82A41D3BD6E13D101ED2E6DAD558FFC7BD53FE1638A5EAC52B9D5A6911B4D6C4CA88B8F6BA4242A3178E2D13632BFDDABDCA561844E13ACFC0797CD1CEA319C3DF6BAA724B47FC6B2C9CDD0> |-/o <1C60D8A8C9B7EF3224466A62573A43A10A0F69E099BA2B2602A9B7108DE99E61490B14371080ACD4C12C166D4B7F51A4A87CDAAD7D93FC74C55B0431FCEC0ADAD58FB8F8A4A5DD05443AACCEACEE59D0EFFB9A763BB38F15E2237D8258C54D57F5EB81C2B2F3A008AC2AD0AF49069F7303BCAC0A0AED6184709299964F41CC8FA0413E2266> |-/y <1C60D8A8C9B7A73DB9861AEAF31674E752CE6135BC6B1D5531AAD5288DF3BC779638468C6B3FDD3DDAB236FB820B2BC1F4AB191A439EBA441529CA7E275D568059BEBD3345462109D12A615265CD42139EEBC73AB74868F8DE95F0DD5C1240BDBD8EF439D823EA72D7FC3C50C6AEE46A3245BC> |-/.notdef <1C60D8A8C9B66F631635D26BA635582B3FDE9B3DD75794781396E648A7CA97DB1343CA> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GEFRQB+Helvetica-Oblique /JAAAAA+Helvetica-Oblique findfont ct_VMDictPut/GEFRQB+Helvetica-Oblique*1 [40{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 3{/.notdef}rp /one /two 48{/.notdef}rp /c 7{/.notdef}rp /k /.notdef /m /.notdef /o 9{/.notdef}rp /y 134{/.notdef}rp]GEFRQB+Helvetica-Oblique nfGEFRQB+Helvetica-Oblique*1 [6.85472 0 0 -6.85472 0 0 ]msf97.7047 33.008 mo(cmk-1\(oy21\))[3.42805 5.71062 3.42805 2.28326 3.81191 2.28326 3.81191 3.42805 3.81191 3.8119 0 ]xsh.761636 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
63.6918 30.5363 mo
94.6021 30.5363 li
.892 .556 0 0 cmyk
@
80.6207 30.5865 mo
80.6207 31.4273 79.939 32.1098 79.0974 32.1098 cv
78.2566 32.1098 77.5742 31.4273 77.5742 30.5865 cv
77.5742 29.7464 78.2566 29.0633 79.0974 29.0633 cv
79.939 29.0633 80.6207 29.7464 80.6207 30.5865 cv
f
.695 .672 .637 .738 cmyk
%ADOBeginSubsetFont: JAAAAA+Helvetica-Oblique AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginGEFRQB+Helvetica-Oblique dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7EF3239E3F4C6964A49999C92D8446354A3643141A54D312DC4D98FC4786876EFE9BA65800AE232E3162709BF66536A8468521B7F0FCC9ECF11BCB6C659C4FB3AAD317A691744539E23F4796BB33DDF04780424E99A320DD05279A65D407BB9EE0160669791989823BA1C10C9C78CA9A66A937D5FE5145B963AAD99317F9F12F9F6D8DA406DF98C84EF46B8388F568DB0488804722F0770A2AF72722FB7FEC81D191FF8229760EB740586E80C9A7F90870F2CB6564E447361108D3D2D7FE5264C40AD518B8FA59A5F59B2D553D12570F7EC43> |-/four <1C60D8A8C9B7EF322B26FF621126AF4A3CFED3F9529A1C8C7B0991717CF2EC4CC268E764104C515A35ADEE39A72CAB70CC8D6A5D035D28229A516FCDB1> |-/g <1C60D8A8C9B7EF322BEB1AB15A81225A663DA46EF1D2567EC24DA512383F1CB2D54F66D78FDA7D37D5E1FB1398CD25D5F5DBFD134564ABC74B2C4D721C645CE0C61589D9FE8B5912A9CF1081F5B0E8F3E49026EAE99F5ADFC9DB6E6924BB7AD641A347D6F3354229A4159E82F13DE09503FBC578E110855E958DE31BD59CCF0FA0E417676267AF5AA65E40C03E44F43DF785229016A46EBF514FA8EF61E9CB36C2BA765080B8DB3B18AD100E852D9B3EDA6B684B5A2B7938A1B45BE389BE0090939797B3F12029> |-/t <1C60D8A8C9B854D0F466C9B078C420BB17D4FCFE61BBA93567EF97A20D8C93FD069C274C4FA15213AC5433646C8E62C97B61CBE191DE0A9E2169165CA8B8FFE74BB0545D27FA56F9C902842DFB070A38F960A9945AD9F602A6487D33B924D4AD335B9A065D41> |-systemdict /gcheck known {setglobal} if end {end} ifendGEFRQB+Helvetica-Oblique /Encoding getdup 51 /three putdup 52 /four putdup 103 /g putdup 116 /t putpop%ADOEndSubsetFont
/GEFRQB+Helvetica-Oblique*1 [40{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 3{/.notdef}rp /one /two /three /four 46{/.notdef}rp /c 3{/.notdef}rp /g 3{/.notdef}rp /k /.notdef /m /.notdef /o 4{/.notdef}rp /t 4{/.notdef}rp /y 134{/.notdef}rp]GEFRQB+Helvetica-Oblique nfGEFRQB+Helvetica-Oblique*1 [6.85472 0 0 -6.85472 0 0 ]msf97.705 43.6697 mo(ogt-1\(ok431\))[3.8119 3.81191 1.9063 2.28326 3.81191 2.28326 3.8119 3.42805 3.8119 3.8119 3.81192 0 ]xsh63.6918 41.1992 mo
94.6021 41.1992 li
0 .988 1 0 cmyk
@
80.6207 41.2495 mo
80.6207 42.0903 79.939 42.7727 79.0974 42.7727 cv
78.2566 42.7727 77.5742 42.0903 77.5742 41.2495 cv
77.5742 40.4094 78.2566 39.7262 79.0974 39.7262 cv
79.939 39.7262 80.6207 40.4094 80.6207 41.2495 cv
f
.695 .672 .637 .738 cmyk
%ADOBeginSubsetFont: JAAAAA+Helvetica-Oblique AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginGEFRQB+Helvetica-Oblique dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B854D00D> |-/semicolon <1C60D8A8C9B854D0D995E69605BE063B608890AE1CBE792A46376BE35B8FA2CEDB00D42639C0B30892A4155A84F85ABC75DE1FD3300F4324BF3AAD314F288D0DE320540FEB0BD1DBE902A3AA8D0240> |-systemdict /gcheck known {setglobal} if end {end} ifendGEFRQB+Helvetica-Oblique /Encoding getdup 32 /space putdup 59 /semicolon putpop%ADOEndSubsetFont
/GEFRQB+Helvetica-Oblique*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 3{/.notdef}rp /one /two /three /four 6{/.notdef}rp /semicolon 39{/.notdef}rp /c 3{/.notdef}rp /g 3{/.notdef}rp /k /.notdef /m /.notdef /o 4{/.notdef}rp /t 4{/.notdef}rp /y 134{/.notdef}rp]GEFRQB+Helvetica-Oblique nfGEFRQB+Helvetica-Oblique*1 [6.85472 0 0 -6.85472 0 0 ]msf97.705 54.3326 mo(cmk-1\(oy21\); ogt-1\(ok431\))[3.42805 5.71062 3.42805 2.28326 3.81191 2.28326 3.81191 3.42805 3.8119 3.81192 2.28325 1.9063 1.90631 3.8119 3.8119 1.90631 2.28325 3.81192 2.28326 3.8119 3.42805 3.8119 3.81192 3.8119 0 ]xsh63.6918 51.8614 mo
94.6021 51.8614 li
.836 .211 1 .082 cmyk
@
80.6207 51.9124 mo
80.6207 52.7524 79.939 53.4356 79.0974 53.4356 cv
78.2566 53.4356 77.5742 52.7524 77.5742 51.9124 cv
77.5742 51.0715 78.2566 50.3891 79.0974 50.3891 cv
79.939 50.3891 80.6207 51.0715 80.6207 51.9124 cv
f
63.6918 19.3646 mo
94.6021 19.3646 li
.746 .676 .668 .898 cmyk
@
80.6207 19.3455 mo
80.6207 20.1857 79.939 20.8688 79.0974 20.8688 cv
78.2566 20.8688 77.5742 20.1857 77.5742 19.3455 cv
77.5742 18.5032 78.2566 17.8223 79.0974 17.8223 cv
79.939 17.8223 80.6207 18.5032 80.6207 19.3455 cv
f
.695 .672 .637 .738 cmyk
%ADOBeginSubsetFont: IAAAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginGEFRQA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/zero <1C60D8A8C9B7EF322BB70D1045F9F84CF5A9E636DA48B0B84345CFB17CDCD64AA529BD23C358113A6F12A7F927F67801E7716DEDB8FBB50D28956279879C3943A67386E5304D963AB3E064E7022317006AA79A8777799C5D39502A7CB330EAEEC28837821C5437B109C741C1D7BCD8EEC785ED017624EE945A52A677F5B0E3B0C4781A3901> |-/six <1C60D8A8C9B7EF322BACEC3D6ABEF2D493EDC493AA22ED42125C47DF2396DE843240A24151C3116F0DCEE068EC75B404A70B0E3A92C2307D093030C4F08B5CC0A75F4F4D7C70C5CD3B07E718D5DA84710CE02FF093BE8B5ED477F329DF9AC8554D46651B2A99890C549B5152AB0899BB31DC610CEE59FE1F4C3BE037BFF7F7AE7EDC6D596E9E9398287209A7C703150F7EA84F1C65DCD68CCC47A3B7F9EF77F610D53784F89B61AB4160F9D214F618A6C0032B66C3DB575FE49E073B7AB1C1C6CA> |-/I <1C60D8A8C9B854D0EE4B20327A907C36187261> |-/S <1C60D8A8C9B64EDFB8831DC7D3DA5352C683CFE7ADDB1F2F7D19136185D1F816C3BE09EC1E84619F52030DEE9359B5F11BDC142E51FA821DBBAA94D355CDB3194A176F4CAFE2F8762140A61B8DB4801B25EC39CF8CD3F7F21C11EB8BF2FEAA7BF71364CB0E29D9153C5428F8E2556CFDCDFCF7C63E7AA008F518E6EAA3DEB5EC8960FB0234452B3B55FF1BB7B980C85D0DFF1CA34BE144E02D5E8A581ACC1C4C80D7396F6E85C6E2CC3BAA0E140AF4F656AC7D073077DF7B4E8B5856F92B> |-/s <1C60D8A8C9B7A73DE557A2AA450BB57EE39D611FDE79056DA153DEDE8E0D2C9D756143DA5E614060C362E0813E35369DA2F002330267D2CFA81D3D9AA172C91A8B8E19BB92CE3CFBA62200E9E8175CCCB3A5FA559ECF71DD7F2B47B117C69AC3637EDAE62020C9DAFDDB718C27C76EF62794CF8B187D103B05AC07655F04A6D9D5181CB287F032D98B2512B2A9B281D13745308AC05B350DA95BA0BE14F12630B5B2A718215DC0DE5A544FA267BEF8FD5CF5292808F195D31A5EEC3ADC63> |-systemdict /gcheck known {setglobal} if end {end} ifendGEFRQA+Helvetica /Encoding getdup 48 /zero putdup 54 /six putdup 73 /I putdup 83 /S putdup 115 /s putpop%ADOEndSubsetFont
/GEFRQA+Helvetica*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero 5{/.notdef}rp /six 10{/.notdef}rp /A /B /C 5{/.notdef}rp /I 9{/.notdef}rp /S 16{/.notdef}rp /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l 3{/.notdef}rp /p 2{/.notdef}rp /s /t 2{/.notdef}rp /w /.notdef /y 134{/.notdef}rp]GEFRQA+Helvetica nfGEFRQA+Helvetica*1 [6.85472 0 0 -6.85472 0 0 ]msf86.5347 6.35077 mo(60s )sh99.4888 6.35077 mo(ISI)sh.807334 lw
1 ml
32.8547 463.461 mo
34.9797 463.461 li
33.921 456.742 mo
33.921 463.461 li
32.8547 456.742 mo
34.9797 456.742 li
.746 .676 .668 .898 cmyk
@
32.8547 451.716 mo
34.9797 451.716 li
33.921 444.023 mo
33.921 451.716 li
32.8547 444.023 mo
34.9797 444.023 li
.883 .77 0 0 cmyk
@
32.8547 426.528 mo
34.9797 426.528 li
33.921 413.329 mo
33.921 426.528 li
32.8547 413.329 mo
34.9797 413.329 li
0 .988 1 0 cmyk
@
32.8547 401.722 mo
34.9797 401.722 li
33.921 384.334 mo
33.921 401.722 li
32.8547 384.334 mo
34.9797 384.334 li
.836 .211 1 .082 cmyk
@
37.1122 471.922 mo
39.238 471.922 li
38.1709 464.961 mo
38.1709 471.922 li
37.1122 464.961 mo
39.238 464.961 li
.746 .676 .668 .898 cmyk
@
37.1122 455.928 mo
39.238 455.928 li
38.1709 447.534 mo
38.1709 455.928 li
37.1122 447.534 mo
39.238 447.534 li
.883 .77 0 0 cmyk
@
37.1122 446.087 mo
39.238 446.087 li
38.1709 431.761 mo
38.1709 446.087 li
37.1122 431.761 mo
39.238 431.761 li
0 .988 1 0 cmyk
@
37.1122 411.532 mo
39.238 411.532 li
38.1709 395.804 mo
38.1709 411.532 li
37.1122 395.804 mo
39.238 395.804 li
.836 .211 1 .082 cmyk
@
41.3622 469.782 mo
43.4947 469.782 li
42.4285 463.414 mo
42.4285 469.782 li
41.3622 463.414 mo
43.4947 463.414 li
.746 .676 .668 .898 cmyk
@
41.3622 458.959 mo
43.4947 458.959 li
42.4285 451.297 mo
42.4285 458.959 li
41.3622 451.297 mo
43.4947 451.297 li
.883 .77 0 0 cmyk
@
41.3622 447.687 mo
43.4947 447.687 li
42.4285 436.849 mo
42.4285 447.687 li
41.3622 436.849 mo
43.4947 436.849 li
0 .988 1 0 cmyk
@
41.3622 413.733 mo
43.4947 413.733 li
42.4285 400.777 mo
42.4285 413.733 li
41.3622 400.777 mo
43.4947 400.777 li
.836 .211 1 .082 cmyk
@
45.619 469.904 mo
47.7523 469.904 li
46.686 462.866 mo
46.686 469.904 li
45.619 462.866 mo
47.7523 462.866 li
.746 .676 .668 .898 cmyk
@
45.619 462.013 mo
47.7523 462.013 li
46.686 453.803 mo
46.686 462.013 li
45.619 453.803 mo
47.7523 453.803 li
.883 .77 0 0 cmyk
@
45.619 459.21 mo
47.7523 459.21 li
46.686 448.319 mo
46.686 459.21 li
45.619 448.319 mo
47.7523 448.319 li
0 .988 1 0 cmyk
@
45.619 421.136 mo
47.7523 421.136 li
46.686 407.312 mo
46.686 421.136 li
45.619 407.312 mo
47.7523 407.312 li
.836 .211 1 .082 cmyk
@
49.8765 470.901 mo
52.0022 470.901 li
50.9436 464.488 mo
50.9436 470.901 li
49.8765 464.488 mo
52.0022 464.488 li
.746 .676 .668 .898 cmyk
@
49.8765 465.562 mo
52.0022 465.562 li
50.9436 457.717 mo
50.9436 465.562 li
49.8765 457.717 mo
52.0022 457.717 li
.883 .77 0 0 cmyk
@
49.8765 455.067 mo
52.0022 455.067 li
50.9436 444.183 mo
50.9436 455.067 li
49.8765 444.183 mo
52.0022 444.183 li
0 .988 1 0 cmyk
@
49.8765 430.306 mo
52.0022 430.306 li
50.9436 417.861 mo
50.9436 430.306 li
49.8765 417.861 mo
52.0022 417.861 li
.836 .211 1 .082 cmyk
@
54.1348 471.952 mo
56.2598 471.952 li
55.2011 464.717 mo
55.2011 471.952 li
54.1348 464.717 mo
56.2598 464.717 li
.746 .676 .668 .898 cmyk
@
54.1348 464.587 mo
56.2598 464.587 li
55.2011 457.375 mo
55.2011 464.587 li
54.1348 457.375 mo
56.2598 457.375 li
.883 .77 0 0 cmyk
@
54.1348 458.045 mo
56.2598 458.045 li
55.2011 447.481 mo
55.2011 458.045 li
54.1348 447.481 mo
56.2598 447.481 li
0 .988 1 0 cmyk
@
54.1348 433.063 mo
56.2598 433.063 li
55.2011 421.342 mo
55.2011 433.063 li
54.1348 421.342 mo
56.2598 421.342 li
.836 .211 1 .082 cmyk
@
58.3924 472.121 mo
60.5173 472.121 li
59.451 463.842 mo
59.451 472.121 li
58.3924 463.842 mo
60.5173 463.842 li
.746 .676 .668 .898 cmyk
@
58.3924 464.435 mo
60.5173 464.435 li
59.451 456.514 mo
59.451 464.435 li
58.3924 456.514 mo
60.5173 456.514 li
.883 .77 0 0 cmyk
@
58.3924 456.278 mo
60.5173 456.278 li
59.451 446.003 mo
59.451 456.278 li
58.3924 446.003 mo
60.5173 446.003 li
0 .988 1 0 cmyk
@
58.3924 442.401 mo
60.5173 442.401 li
59.451 430.603 mo
59.451 442.401 li
58.3924 430.603 mo
60.5173 430.603 li
.836 .211 1 .082 cmyk
@
62.6423 475.266 mo
64.7749 475.266 li
63.7078 466.926 mo
63.7078 475.266 li
62.6423 466.926 mo
64.7749 466.926 li
.746 .676 .668 .898 cmyk
@
62.6423 468.068 mo
64.7749 468.068 li
63.7078 460.307 mo
63.7078 468.068 li
62.6423 460.307 mo
64.7749 460.307 li
.883 .77 0 0 cmyk
@
62.6423 459.5 mo
64.7749 459.5 li
63.7078 448.205 mo
63.7078 459.5 li
62.6423 448.205 mo
64.7749 448.205 li
0 .988 1 0 cmyk
@
62.6423 433.794 mo
64.7749 433.794 li
63.7078 422.446 mo
63.7078 433.794 li
62.6423 422.446 mo
64.7749 422.446 li
.836 .211 1 .082 cmyk
@
66.8998 474.176 mo
69.0324 474.176 li
67.9654 464.108 mo
67.9654 474.176 li
66.8998 464.108 mo
69.0324 464.108 li
.746 .676 .668 .898 cmyk
@
66.8998 471.42 mo
69.0324 471.42 li
67.9654 462.41 mo
67.9654 471.42 li
66.8998 462.41 mo
69.0324 462.41 li
.883 .77 0 0 cmyk
@
66.8998 456.643 mo
69.0324 456.643 li
67.9654 444.427 mo
67.9654 456.643 li
66.8998 444.427 mo
69.0324 444.427 li
0 .988 1 0 cmyk
@
66.8998 446.087 mo
69.0324 446.087 li
67.9654 434.861 mo
67.9654 446.087 li
66.8998 434.861 mo
69.0324 434.861 li
.836 .211 1 .082 cmyk
@
71.1581 475.806 mo
73.2823 475.806 li
72.2237 467.245 mo
72.2237 475.806 li
71.1581 467.245 mo
73.2823 467.245 li
.746 .676 .668 .898 cmyk
@
71.1581 470.833 mo
73.2823 470.833 li
72.2237 462.942 mo
72.2237 470.833 li
71.1581 462.942 mo
73.2823 462.942 li
.883 .77 0 0 cmyk
@
71.1581 459.766 mo
73.2823 459.766 li
72.2237 447.214 mo
72.2237 459.766 li
71.1581 447.214 mo
73.2823 447.214 li
0 .988 1 0 cmyk
@
71.1581 445.173 mo
73.2823 445.173 li
72.2237 433.794 mo
72.2237 445.173 li
71.1581 433.794 mo
73.2823 433.794 li
.836 .211 1 .082 cmyk
@
75.4157 473.156 mo
77.5399 473.156 li
76.4812 462.196 mo
76.4812 473.156 li
75.4157 462.196 mo
77.5399 462.196 li
.746 .676 .668 .898 cmyk
@
75.4157 469.516 mo
77.5399 469.516 li
76.4812 461.069 mo
76.4812 469.516 li
75.4157 461.069 mo
77.5399 461.069 li
.883 .77 0 0 cmyk
@
75.4157 460.954 mo
77.5399 460.954 li
76.4812 444 mo
76.4812 460.954 li
75.4157 444 mo
77.5399 444 li
0 .988 1 0 cmyk
@
75.4157 448.022 mo
77.5399 448.022 li
76.4812 436.102 mo
76.4812 448.022 li
75.4157 436.102 mo
77.5399 436.102 li
.836 .211 1 .082 cmyk
@
79.6725 478.419 mo
81.7967 478.419 li
80.7311 467.809 mo
80.7311 478.419 li
79.6725 467.809 mo
81.7967 467.809 li
.746 .676 .668 .898 cmyk
@
79.6725 472.585 mo
81.7967 472.585 li
80.7311 463.795 mo
80.7311 472.585 li
79.6725 463.795 mo
81.7967 463.795 li
.883 .77 0 0 cmyk
@
79.6725 466.058 mo
81.7967 466.058 li
80.7311 452.683 mo
80.7311 466.058 li
79.6725 452.683 mo
81.7967 452.683 li
0 .988 1 0 cmyk
@
79.6725 451.617 mo
81.7967 451.617 li
80.7311 440.733 mo
80.7311 451.617 li
79.6725 440.733 mo
81.7967 440.733 li
.836 .211 1 .082 cmyk
@
83.9232 477.276 mo
86.0542 477.276 li
84.9887 465.684 mo
84.9887 477.276 li
83.9232 465.684 mo
86.0542 465.684 li
.746 .676 .668 .898 cmyk
@
83.9232 470.223 mo
86.0542 470.223 li
84.9887 462.349 mo
84.9887 470.223 li
83.9232 462.349 mo
86.0542 462.349 li
.883 .77 0 0 cmyk
@
83.9232 459.629 mo
86.0542 459.629 li
84.9887 443.909 mo
84.9887 459.629 li
83.9232 443.909 mo
86.0542 443.909 li
0 .988 1 0 cmyk
@
83.9232 450.665 mo
86.0542 450.665 li
84.9887 438.951 mo
84.9887 450.665 li
83.9232 438.951 mo
86.0542 438.951 li
.836 .211 1 .082 cmyk
@
88.1799 480.01 mo
90.3125 480.01 li
89.247 468.914 mo
89.247 480.01 li
88.1799 468.914 mo
90.3125 468.914 li
.746 .676 .668 .898 cmyk
@
88.1799 468.952 mo
90.3125 468.952 li
89.247 460.528 mo
89.247 468.952 li
88.1799 460.528 mo
90.3125 460.528 li
.883 .77 0 0 cmyk
@
88.1799 468.823 mo
90.3125 468.823 li
89.247 455.889 mo
89.247 468.823 li
88.1799 455.889 mo
90.3125 455.889 li
0 .988 1 0 cmyk
@
88.1799 450.04 mo
90.3125 450.04 li
89.247 438.364 mo
89.247 450.04 li
88.1799 438.364 mo
90.3125 438.364 li
.836 .211 1 .082 cmyk
@
92.4375 480.788 mo
94.5624 480.788 li
93.5045 469.096 mo
93.5045 480.788 li
92.4375 469.096 mo
94.5624 469.096 li
.746 .676 .668 .898 cmyk
@
92.4375 472.828 mo
94.5624 472.828 li
93.5045 463.887 mo
93.5045 472.828 li
92.4375 463.887 mo
94.5624 463.887 li
.883 .77 0 0 cmyk
@
92.4375 462.927 mo
94.5624 462.927 li
93.5045 448.722 mo
93.5045 462.927 li
92.4375 448.722 mo
94.5624 448.722 li
0 .988 1 0 cmyk
@
92.4375 446.369 mo
94.5624 446.369 li
93.5045 435.919 mo
93.5045 446.369 li
92.4375 435.919 mo
94.5624 435.919 li
.836 .211 1 .082 cmyk
@
96.695 481.305 mo
98.82 481.305 li
97.7613 469.348 mo
97.7613 481.305 li
96.695 469.348 mo
98.82 469.348 li
.746 .676 .668 .898 cmyk
@
96.695 478.678 mo
98.82 478.678 li
97.7613 469.317 mo
97.7613 478.678 li
96.695 469.317 mo
98.82 469.317 li
.883 .77 0 0 cmyk
@
96.695 473.575 mo
98.82 473.575 li
97.7613 460.772 mo
97.7613 473.575 li
96.695 460.772 mo
98.82 460.772 li
0 .988 1 0 cmyk
@
96.695 450.451 mo
98.82 450.451 li
97.7613 437.763 mo
97.7613 450.451 li
96.695 437.763 mo
98.82 437.763 li
.836 .211 1 .082 cmyk
@
100.953 482.174 mo
103.078 482.174 li
102.012 470.353 mo
102.012 482.174 li
100.953 470.353 mo
103.078 470.353 li
.746 .676 .668 .898 cmyk
@
100.953 471.556 mo
103.078 471.556 li
102.012 461.975 mo
102.012 471.556 li
100.953 461.975 mo
103.078 461.975 li
.883 .77 0 0 cmyk
@
100.953 470.734 mo
103.078 470.734 li
102.012 456.126 mo
102.012 470.734 li
100.953 456.126 mo
103.078 456.126 li
0 .988 1 0 cmyk
@
100.953 449.621 mo
103.078 449.621 li
102.012 438.136 mo
102.012 449.621 li
100.953 438.136 mo
103.078 438.136 li
.836 .211 1 .082 cmyk
@
105.202 482.158 mo
107.336 482.158 li
106.269 466.552 mo
106.269 482.158 li
105.202 466.552 mo
107.336 466.552 li
.746 .676 .668 .898 cmyk
@
105.202 474.291 mo
107.336 474.291 li
106.269 464.45 mo
106.269 474.291 li
105.202 464.45 mo
107.336 464.45 li
.883 .77 0 0 cmyk
@
105.202 469.607 mo
107.336 469.607 li
106.269 452.851 mo
106.269 469.607 li
105.202 452.851 mo
107.336 452.851 li
0 .988 1 0 cmyk
@
105.202 449.027 mo
107.336 449.027 li
106.269 437.054 mo
106.269 449.027 li
105.202 437.054 mo
107.336 437.054 li
.836 .211 1 .082 cmyk
@
109.46 482.692 mo
111.593 482.692 li
110.526 468.67 mo
110.526 482.692 li
109.46 468.67 mo
111.593 468.67 li
.746 .676 .668 .898 cmyk
@
109.46 473.872 mo
111.593 473.872 li
110.526 463.331 mo
110.526 473.872 li
109.46 463.331 mo
111.593 463.331 li
.883 .77 0 0 cmyk
@
109.46 472.364 mo
111.593 472.364 li
110.526 456.118 mo
110.526 472.364 li
109.46 456.118 mo
111.593 456.118 li
0 .988 1 0 cmyk
@
109.46 449.659 mo
111.593 449.659 li
110.526 437.549 mo
110.526 449.659 li
109.46 437.549 mo
111.593 437.549 li
.836 .211 1 .082 cmyk
@
113.718 481.876 mo
115.843 481.876 li
114.784 467.344 mo
114.784 481.876 li
113.718 467.344 mo
115.843 467.344 li
.746 .676 .668 .898 cmyk
@
113.718 475.761 mo
115.843 475.761 li
114.784 465.311 mo
114.784 475.761 li
113.718 465.311 mo
115.843 465.311 li
.883 .77 0 0 cmyk
@
113.718 466.058 mo
115.843 466.058 li
114.784 450.733 mo
114.784 466.058 li
113.718 450.733 mo
115.843 450.733 li
0 .988 1 0 cmyk
@
113.718 452.142 mo
115.843 452.142 li
114.784 440.169 mo
114.784 452.142 li
113.718 440.169 mo
115.843 440.169 li
.836 .211 1 .082 cmyk
@
117.974 490.552 mo
120.101 490.552 li
119.041 477.573 mo
119.041 490.552 li
117.974 477.573 mo
120.101 477.573 li
.746 .676 .668 .898 cmyk
@
117.974 482.563 mo
120.101 482.563 li
119.041 471.968 mo
119.041 482.563 li
117.974 471.968 mo
120.101 471.968 li
.883 .77 0 0 cmyk
@
117.974 464.115 mo
120.101 464.115 li
119.041 445.234 mo
119.041 464.115 li
117.974 445.234 mo
120.101 445.234 li
0 .988 1 0 cmyk
@
117.974 446.636 mo
120.101 446.636 li
119.041 435.066 mo
119.041 446.636 li
117.974 435.066 mo
120.101 435.066 li
.836 .211 1 .082 cmyk
@
122.232 491.9 mo
124.358 491.9 li
123.291 480.407 mo
123.291 491.9 li
122.232 480.407 mo
124.358 480.407 li
.746 .676 .668 .898 cmyk
@
122.232 480.635 mo
124.358 480.635 li
123.291 470.574 mo
123.291 480.635 li
122.232 470.574 mo
124.358 470.574 li
.883 .77 0 0 cmyk
@
122.232 475.89 mo
124.358 475.89 li
123.291 462.394 mo
123.291 475.89 li
122.232 462.394 mo
124.358 462.394 li
0 .988 1 0 cmyk
@
122.232 454.526 mo
124.358 454.526 li
123.291 442.081 mo
123.291 454.526 li
122.232 442.081 mo
124.358 442.081 li
.836 .211 1 .082 cmyk
@
126.482 489.302 mo
128.615 489.302 li
127.549 476.157 mo
127.549 489.302 li
126.482 476.157 mo
128.615 476.157 li
.746 .676 .668 .898 cmyk
@
126.482 476.286 mo
128.615 476.286 li
127.549 465.463 mo
127.549 476.286 li
126.482 465.463 mo
128.615 465.463 li
.883 .77 0 0 cmyk
@
126.482 476.895 mo
128.615 476.895 li
127.549 462.401 mo
127.549 476.895 li
126.482 462.401 mo
128.615 462.401 li
0 .988 1 0 cmyk
@
126.482 452.173 mo
128.615 452.173 li
127.549 438.951 mo
127.549 452.173 li
126.482 438.951 mo
128.615 438.951 li
.836 .211 1 .082 cmyk
@
130.74 491.465 mo
132.873 491.465 li
131.806 478.137 mo
131.806 491.465 li
130.74 478.137 mo
132.873 478.137 li
.746 .676 .668 .898 cmyk
@
130.74 478.51 mo
132.873 478.51 li
131.806 467.871 mo
131.806 478.51 li
130.74 467.871 mo
132.873 467.871 li
.883 .77 0 0 cmyk
@
130.74 469.523 mo
132.873 469.523 li
131.806 453.01 mo
131.806 469.523 li
130.74 453.01 mo
132.873 453.01 li
0 .988 1 0 cmyk
@
130.74 454.984 mo
132.873 454.984 li
131.806 441.7 mo
131.806 454.984 li
130.74 441.7 mo
132.873 441.7 li
.836 .211 1 .082 cmyk
@
134.998 491.945 mo
137.123 491.945 li
136.063 481.832 mo
136.063 491.945 li
134.998 481.832 mo
137.123 481.832 li
.746 .676 .668 .898 cmyk
@
134.998 474.679 mo
137.123 474.679 li
136.063 463.453 mo
136.063 474.679 li
134.998 463.453 mo
137.123 463.453 li
.883 .77 0 0 cmyk
@
134.998 471.907 mo
137.123 471.907 li
136.063 457.169 mo
136.063 471.907 li
134.998 457.169 mo
137.123 457.169 li
0 .988 1 0 cmyk
@
134.998 451.419 mo
137.123 451.419 li
136.063 438.593 mo
136.063 451.419 li
134.998 438.593 mo
137.123 438.593 li
.836 .211 1 .082 cmyk
@
139.255 488.214 mo
141.38 488.214 li
140.321 474.511 mo
140.321 488.214 li
139.255 474.511 mo
141.38 474.511 li
.746 .676 .668 .898 cmyk
@
139.255 475.403 mo
141.38 475.403 li
140.321 464.032 mo
140.321 475.403 li
139.255 464.032 mo
141.38 464.032 li
.883 .77 0 0 cmyk
@
139.255 474.321 mo
141.38 474.321 li
140.321 460.132 mo
140.321 474.321 li
139.255 460.132 mo
141.38 460.132 li
0 .988 1 0 cmyk
@
139.255 449.469 mo
141.38 449.469 li
140.321 436.719 mo
140.321 449.469 li
139.255 436.719 mo
141.38 436.719 li
.836 .211 1 .082 cmyk
@
143.514 492.09 mo
145.638 492.09 li
144.571 475.715 mo
144.571 492.09 li
143.514 475.715 mo
145.638 475.715 li
.746 .676 .668 .898 cmyk
@
143.514 476.888 mo
145.638 476.888 li
144.571 466.568 mo
144.571 476.888 li
143.514 466.568 mo
145.638 466.568 li
.883 .77 0 0 cmyk
@
143.514 475.334 mo
145.638 475.334 li
144.571 457.321 mo
144.571 475.334 li
143.514 457.321 mo
145.638 457.321 li
0 .988 1 0 cmyk
@
143.514 450.299 mo
145.638 450.299 li
144.571 436.346 mo
144.571 450.299 li
143.514 436.346 mo
145.638 436.346 li
.836 .211 1 .082 cmyk
@
147.763 493.469 mo
149.896 493.469 li
148.828 477.361 mo
148.828 493.469 li
147.763 477.361 mo
149.896 477.361 li
.746 .676 .668 .898 cmyk
@
147.763 479.157 mo
149.896 479.157 li
148.828 468.282 mo
148.828 479.157 li
147.763 468.282 mo
149.896 468.282 li
.883 .77 0 0 cmyk
@
147.763 469.508 mo
149.896 469.508 li
148.828 451.548 mo
148.828 469.508 li
147.763 451.548 mo
149.896 451.548 li
0 .988 1 0 cmyk
@
147.763 458.891 mo
149.896 458.891 li
148.828 445.44 mo
148.828 458.891 li
147.763 445.44 mo
149.896 445.44 li
.836 .211 1 .082 cmyk
@
152.021 487.102 mo
154.153 487.102 li
153.087 471.511 mo
153.087 487.102 li
152.021 471.511 mo
154.153 471.511 li
.746 .676 .668 .898 cmyk
@
152.021 482.889 mo
154.153 482.889 li
153.087 471.541 mo
153.087 482.889 li
152.021 471.541 mo
154.153 471.541 li
.883 .77 0 0 cmyk
@
152.021 472.432 mo
154.153 472.432 li
153.087 455.006 mo
153.087 472.432 li
152.021 455.006 mo
154.153 455.006 li
0 .988 1 0 cmyk
@
152.021 460.962 mo
154.153 460.962 li
153.087 447.1 mo
153.087 460.962 li
152.021 447.1 mo
154.153 447.1 li
.836 .211 1 .082 cmyk
@
156.279 488.792 mo
158.404 488.792 li
157.345 471.58 mo
157.345 488.792 li
156.279 471.58 mo
158.404 471.58 li
.746 .676 .668 .898 cmyk
@
156.279 473.727 mo
158.404 473.727 li
157.345 461.64 mo
157.345 473.727 li
156.279 461.64 mo
158.404 461.64 li
.883 .77 0 0 cmyk
@
156.279 472.874 mo
158.404 472.874 li
157.345 455.562 mo
157.345 472.874 li
156.279 455.562 mo
158.404 455.562 li
0 .988 1 0 cmyk
@
156.279 459.53 mo
158.404 459.53 li
157.345 445.866 mo
157.345 459.53 li
156.279 445.866 mo
158.404 445.866 li
.836 .211 1 .082 cmyk
@
33.921 460.101 mo
38.1709 468.442 li
42.4285 466.599 li
46.686 466.385 li
50.9436 467.695 li
55.2011 468.335 li
59.451 467.977 li
63.7078 471.099 li
67.9654 469.142 li
72.2237 471.526 li
76.4812 467.68 li
80.7311 473.11 li
84.9887 471.48 li
89.247 474.458 li
93.5045 474.938 li
97.7613 475.327 li
102.012 476.263 li
106.269 474.352 li
110.526 475.678 li
114.784 474.611 li
119.041 484.062 li
123.291 486.157 li
127.549 482.73 li
131.806 484.801 li
136.063 486.888 li
140.322 481.359 li
144.571 483.902 li
148.828 485.419 li
153.087 479.302 li
157.345 480.186 li
.746 .676 .668 .898 cmyk
@
33.921 447.869 mo
38.1709 451.731 li
42.4285 455.128 li
46.686 457.908 li
50.9436 461.64 li
55.2011 460.977 li
59.451 460.475 li
63.7078 464.191 li
67.9654 466.919 li
72.2237 466.888 li
76.4812 465.296 li
80.7311 468.19 li
84.9887 466.286 li
89.247 464.74 li
93.5045 468.357 li
97.7613 474.001 li
102.012 466.766 li
106.269 469.37 li
110.526 468.602 li
114.784 470.536 li
119.041 477.269 li
123.291 475.601 li
127.549 470.871 li
131.806 473.186 li
136.063 469.066 li
140.322 469.721 li
144.571 471.724 li
148.828 473.719 li
153.087 477.215 li
157.345 467.687 li
.883 .77 0 0 cmyk
@
33.921 419.925 mo
38.1709 438.928 li
42.4285 442.271 li
46.686 453.765 li
50.9436 449.629 li
55.2011 452.759 li
59.451 451.144 li
63.7078 453.848 li
67.9654 450.535 li
72.2237 453.49 li
76.4812 452.477 li
80.7311 459.37 li
84.9887 451.769 li
89.247 462.356 li
93.5045 455.821 li
97.7613 467.17 li
102.012 463.43 li
106.269 461.229 li
110.526 464.245 li
114.784 458.395 li
119.041 454.671 li
123.291 469.142 li
127.549 469.652 li
131.806 461.267 li
136.063 464.534 li
140.322 467.23 li
144.571 466.324 li
148.828 460.528 li
153.087 463.719 li
157.345 464.214 li
0 .988 1 0 cmyk
@
33.921 393.032 mo
38.1709 403.664 li
42.4285 407.259 li
46.686 414.228 li
50.9436 424.084 li
55.2011 427.206 li
59.451 436.506 li
63.7078 428.12 li
67.9654 440.474 li
72.2237 439.484 li
76.4812 442.058 li
80.7311 446.171 li
84.9887 444.808 li
89.247 444.198 li
93.5045 441.144 li
97.7613 444.107 li
102.012 443.878 li
106.269 443.041 li
110.526 443.604 li
114.784 446.156 li
119.041 440.855 li
123.291 448.304 li
127.549 445.562 li
131.806 448.342 li
136.063 445.006 li
140.322 443.094 li
144.571 443.322 li
148.828 452.165 li
153.087 454.032 li
157.345 452.698 li
.836 .211 1 .082 cmyk
@
35.0406 460.117 mo
35.0406 459.52 34.5562 459.035 33.9591 459.035 cv
33.3619 459.035 32.8775 459.52 32.8775 460.117 cv
32.8775 460.714 33.3619 461.198 33.9591 461.198 cv
34.5562 461.198 35.0406 460.714 35.0406 460.117 cv
.746 .676 .668 .898 cmyk
f
.571227 lw
1 lc
10 ml
35.0406 460.117 mo
35.0406 459.52 34.5562 459.035 33.9591 459.035 cv
33.3619 459.035 32.8775 459.52 32.8775 460.117 cv
32.8775 460.714 33.3619 461.198 33.9591 461.198 cv
34.5562 461.198 35.0406 460.714 35.0406 460.117 cv
@
39.2448 468.434 mo
39.2448 467.837 38.7604 467.352 38.1633 467.352 cv
37.5662 467.352 37.0818 467.837 37.0818 468.434 cv
37.0818 469.031 37.5662 469.516 38.1633 469.516 cv
38.7604 469.516 39.2448 469.031 39.2448 468.434 cv
f
39.2448 468.434 mo
39.2448 467.837 38.7604 467.352 38.1633 467.352 cv
37.5662 467.352 37.0818 467.837 37.0818 468.434 cv
37.0818 469.031 37.5662 469.516 38.1633 469.516 cv
38.7604 469.516 39.2448 469.031 39.2448 468.434 cv
@
43.4491 466.606 mo
43.4491 466.009 42.9639 465.524 42.3675 465.524 cv
41.7712 465.524 41.286 466.009 41.286 466.606 cv
41.286 467.203 41.7712 467.687 42.3675 467.687 cv
42.9639 467.687 43.4491 467.203 43.4491 466.606 cv
f
43.4491 466.606 mo
43.4491 466.009 42.9639 465.524 42.3675 465.524 cv
41.7712 465.524 41.286 466.009 41.286 466.606 cv
41.286 467.203 41.7712 467.687 42.3675 467.687 cv
42.9639 467.687 43.4491 467.203 43.4491 466.606 cv
@
47.8361 466.423 mo
47.8361 465.826 47.3517 465.341 46.7546 465.341 cv
46.1574 465.341 45.673 465.826 45.673 466.423 cv
45.673 467.02 46.1574 467.504 46.7546 467.504 cv
47.3517 467.504 47.8361 467.02 47.8361 466.423 cv
f
47.8361 466.423 mo
47.8361 465.826 47.3517 465.341 46.7546 465.341 cv
46.1574 465.341 45.673 465.826 45.673 466.423 cv
45.673 467.02 46.1574 467.504 46.7546 467.504 cv
47.3517 467.504 47.8361 467.02 47.8361 466.423 cv
@
52.0403 467.702 mo
52.0403 467.106 51.5559 466.621 50.9588 466.621 cv
50.3617 466.621 49.8765 467.106 49.8765 467.702 cv
49.8765 468.3 50.3617 468.784 50.9588 468.784 cv
51.5559 468.784 52.0403 468.3 52.0403 467.702 cv
f
52.0403 467.702 mo
52.0403 467.106 51.5559 466.621 50.9588 466.621 cv
50.3617 466.621 49.8765 467.106 49.8765 467.702 cv
49.8765 468.3 50.3617 468.784 50.9588 468.784 cv
51.5559 468.784 52.0403 468.3 52.0403 467.702 cv
@
56.2453 468.343 mo
56.2453 467.745 55.7602 467.261 55.1638 467.261 cv
54.5659 467.261 54.0815 467.745 54.0815 468.343 cv
54.0815 468.939 54.5659 469.424 55.1638 469.424 cv
55.7602 469.424 56.2453 468.939 56.2453 468.343 cv
f
56.2453 468.343 mo
56.2453 467.745 55.7601 467.261 55.1638 467.261 cv
54.5659 467.261 54.0815 467.745 54.0815 468.343 cv
54.0815 468.939 54.5659 469.424 55.1638 469.424 cv
55.7601 469.424 56.2453 468.939 56.2453 468.343 cv
@
60.5394 467.977 mo
60.5394 467.38 60.0565 466.895 59.4579 466.895 cv
58.8615 466.895 58.3764 467.38 58.3764 467.977 cv
58.3764 468.574 58.8615 469.058 59.4579 469.058 cv
60.0565 469.058 60.5394 468.574 60.5394 467.977 cv
f
60.5394 467.977 mo
60.5394 467.38 60.0565 466.895 59.4579 466.895 cv
58.8615 466.895 58.3764 467.38 58.3764 467.977 cv
58.3764 468.574 58.8615 469.058 59.4579 469.058 cv
60.0565 469.058 60.5394 468.574 60.5394 467.977 cv
@
64.8358 471.084 mo
64.8358 470.487 64.3506 470.003 63.7543 470.003 cv
63.1579 470.003 62.6728 470.487 62.6728 471.084 cv
62.6728 471.681 63.1579 472.166 63.7543 472.166 cv
64.3506 472.166 64.8358 471.681 64.8358 471.084 cv
f
64.8358 471.084 mo
64.8358 470.487 64.3506 470.003 63.7543 470.003 cv
63.1579 470.003 62.6727 470.487 62.6727 471.084 cv
62.6727 471.681 63.1579 472.166 63.7543 472.166 cv
64.3506 472.166 64.8358 471.681 64.8358 471.084 cv
@
69.0393 469.165 mo
69.0393 468.568 68.5556 468.083 67.9585 468.083 cv
67.3614 468.083 66.877 468.568 66.877 469.165 cv
66.877 469.762 67.3614 470.247 67.9585 470.247 cv
68.5556 470.247 69.0393 469.762 69.0393 469.165 cv
f
69.0393 469.165 mo
69.0393 468.568 68.5556 468.083 67.9585 468.083 cv
67.3614 468.083 66.877 468.568 66.877 469.165 cv
66.877 469.762 67.3614 470.247 67.9585 470.247 cv
68.5556 470.247 69.0393 469.762 69.0393 469.165 cv
@
73.2443 471.541 mo
73.2443 470.945 72.7599 470.46 72.1627 470.46 cv
71.5656 470.46 71.0812 470.945 71.0812 471.541 cv
71.0812 472.138 71.5656 472.623 72.1627 472.623 cv
72.7599 472.623 73.2443 472.138 73.2443 471.541 cv
f
73.2443 471.541 mo
73.2443 470.945 72.7599 470.46 72.1627 470.46 cv
71.5656 470.46 71.0812 470.945 71.0812 471.541 cv
71.0812 472.138 71.5656 472.623 72.1627 472.623 cv
72.7599 472.623 73.2443 472.138 73.2443 471.541 cv
@
77.632 467.702 mo
77.632 467.106 77.1469 466.621 76.5498 466.621 cv
75.9526 466.621 75.4682 467.106 75.4682 467.702 cv
75.4682 468.3 75.9526 468.784 76.5498 468.784 cv
77.1469 468.784 77.632 468.3 77.632 467.702 cv
f
77.632 467.702 mo
77.632 467.106 77.1469 466.621 76.5498 466.621 cv
75.9526 466.621 75.4682 467.106 75.4682 467.702 cv
75.4682 468.3 75.9526 468.784 76.5498 468.784 cv
77.1469 468.784 77.632 468.3 77.632 467.702 cv
@
81.8355 473.095 mo
81.8355 472.498 81.3511 472.013 80.754 472.013 cv
80.1569 472.013 79.6725 472.498 79.6725 473.095 cv
79.6725 473.692 80.1569 474.176 80.754 474.176 cv
81.3511 474.176 81.8355 473.692 81.8355 473.095 cv
f
81.8355 473.095 mo
81.8355 472.498 81.3511 472.013 80.754 472.013 cv
80.1569 472.013 79.6725 472.498 79.6725 473.095 cv
79.6725 473.692 80.1569 474.176 80.754 474.176 cv
81.3511 474.176 81.8355 473.692 81.8355 473.095 cv
@
86.0397 471.541 mo
86.0397 470.945 85.5554 470.46 84.9582 470.46 cv
84.3619 470.46 83.8767 470.945 83.8767 471.541 cv
83.8767 472.138 84.3619 472.623 84.9582 472.623 cv
85.5554 472.623 86.0397 472.138 86.0397 471.541 cv
f
86.0397 471.541 mo
86.0397 470.945 85.5553 470.46 84.9582 470.46 cv
84.3619 470.46 83.8767 470.945 83.8767 471.541 cv
83.8767 472.138 84.3619 472.623 84.9582 472.623 cv
85.5553 472.623 86.0397 472.138 86.0397 471.541 cv
@
90.3354 474.467 mo
90.3354 473.869 89.851 473.384 89.2546 473.384 cv
88.6567 473.384 88.1731 473.869 88.1731 474.467 cv
88.1731 475.063 88.6567 475.548 89.2546 475.548 cv
89.851 475.548 90.3354 475.063 90.3354 474.467 cv
f
90.3354 474.467 mo
90.3354 473.869 89.851 473.384 89.2546 473.384 cv
88.6567 473.384 88.1731 473.869 88.1731 474.467 cv
88.1731 475.063 88.6567 475.548 89.2546 475.548 cv
89.851 475.548 90.3354 475.063 90.3354 474.467 cv
@
94.631 474.923 mo
94.631 474.326 94.1466 473.841 93.5495 473.841 cv
92.9524 473.841 92.468 474.326 92.468 474.923 cv
92.468 475.52 92.9524 476.004 93.5495 476.004 cv
94.1466 476.004 94.631 475.52 94.631 474.923 cv
f
94.631 474.923 mo
94.631 474.326 94.1466 473.841 93.5495 473.841 cv
92.9523 473.841 92.4679 474.326 92.4679 474.923 cv
92.4679 475.52 92.9523 476.004 93.5495 476.004 cv
94.1466 476.004 94.631 475.52 94.631 474.923 cv
@
98.836 475.38 mo
98.836 474.783 98.3509 474.298 97.7545 474.298 cv
97.1566 474.298 96.673 474.783 96.673 475.38 cv
96.673 475.977 97.1566 476.461 97.7545 476.461 cv
98.3509 476.461 98.836 475.977 98.836 475.38 cv
f
98.836 475.38 mo
98.836 474.783 98.3508 474.298 97.7545 474.298 cv
97.1566 474.298 96.6729 474.783 96.6729 475.38 cv
96.6729 475.977 97.1566 476.461 97.7545 476.461 cv
98.3508 476.461 98.836 475.977 98.836 475.38 cv
@
103.039 476.294 mo
103.039 475.697 102.554 475.212 101.958 475.212 cv
101.361 475.212 100.876 475.697 100.876 476.294 cv
100.876 476.891 101.361 477.375 101.958 477.375 cv
102.554 477.375 103.039 476.891 103.039 476.294 cv
f
103.039 476.294 mo
103.039 475.697 102.554 475.212 101.958 475.212 cv
101.361 475.212 100.876 475.697 100.876 476.294 cv
100.876 476.891 101.361 477.375 101.958 477.375 cv
102.554 477.375 103.039 476.891 103.039 476.294 cv
@
107.336 474.283 mo
107.336 473.686 106.851 473.202 106.254 473.202 cv
105.657 473.202 105.172 473.686 105.172 474.283 cv
105.172 474.88 105.657 475.365 106.254 475.365 cv
106.851 475.365 107.336 474.88 107.336 474.283 cv
f
107.336 474.283 mo
107.336 473.686 106.851 473.202 106.254 473.202 cv
105.656 473.202 105.172 473.686 105.172 474.283 cv
105.172 474.88 105.656 475.365 106.254 475.365 cv
106.851 475.365 107.336 474.88 107.336 474.283 cv
@
111.63 475.745 mo
111.63 475.148 111.146 474.664 110.548 474.664 cv
109.952 474.664 109.468 475.148 109.468 475.745 cv
109.468 476.342 109.952 476.827 110.548 476.827 cv
111.146 476.827 111.63 476.342 111.63 475.745 cv
f
111.63 475.745 mo
111.63 475.148 111.146 474.664 110.548 474.664 cv
109.952 474.664 109.468 475.148 109.468 475.745 cv
109.468 476.342 109.952 476.827 110.548 476.827 cv
111.146 476.827 111.63 476.342 111.63 475.745 cv
@
115.835 474.649 mo
115.835 474.052 115.351 473.567 114.753 473.567 cv
114.156 473.567 113.672 474.052 113.672 474.649 cv
113.672 475.246 114.156 475.73 114.753 475.73 cv
115.351 475.73 115.835 475.246 115.835 474.649 cv
f
115.835 474.649 mo
115.835 474.052 115.351 473.567 114.753 473.567 cv
114.156 473.567 113.672 474.052 113.672 474.649 cv
113.672 475.246 114.156 475.73 114.753 475.73 cv
115.351 475.73 115.835 475.246 115.835 474.649 cv
@
120.131 484.062 mo
120.131 483.465 119.646 482.981 119.049 482.981 cv
118.452 482.981 117.967 483.465 117.967 484.062 cv
117.967 484.66 118.452 485.144 119.049 485.144 cv
119.646 485.144 120.131 484.66 120.131 484.062 cv
f
120.131 484.062 mo
120.131 483.465 119.646 482.981 119.049 482.981 cv
118.452 482.981 117.968 483.465 117.968 484.062 cv
117.968 484.66 118.452 485.144 119.049 485.144 cv
119.646 485.144 120.131 484.66 120.131 484.062 cv
@
124.426 486.164 mo
124.426 485.568 123.941 485.083 123.345 485.083 cv
122.748 485.083 122.263 485.568 122.263 486.164 cv
122.263 486.762 122.748 487.246 123.345 487.246 cv
123.941 487.246 124.426 486.762 124.426 486.164 cv
f
124.426 486.164 mo
124.426 485.568 123.941 485.083 123.345 485.083 cv
122.748 485.083 122.263 485.568 122.263 486.164 cv
122.263 486.762 122.748 487.246 123.345 487.246 cv
123.941 487.246 124.426 486.762 124.426 486.164 cv
@
128.63 482.692 mo
128.63 482.094 128.146 481.611 127.549 481.611 cv
126.953 481.611 126.467 482.094 126.467 482.692 cv
126.467 483.289 126.953 483.773 127.549 483.773 cv
128.146 483.773 128.63 483.289 128.63 482.692 cv
f
128.63 482.692 mo
128.63 482.094 128.146 481.611 127.549 481.611 cv
126.953 481.611 126.467 482.094 126.467 482.692 cv
126.467 483.289 126.953 483.773 127.549 483.773 cv
128.146 483.773 128.63 483.289 128.63 482.692 cv
@
132.835 484.794 mo
132.835 484.196 132.35 483.712 131.752 483.712 cv
131.156 483.712 130.671 484.196 130.671 484.794 cv
130.671 485.391 131.156 485.875 131.752 485.875 cv
132.35 485.875 132.835 485.391 132.835 484.794 cv
f
132.835 484.794 mo
132.835 484.196 132.35 483.712 131.752 483.712 cv
131.156 483.712 130.671 484.196 130.671 484.794 cv
130.671 485.391 131.156 485.875 131.752 485.875 cv
132.35 485.875 132.835 485.391 132.835 484.794 cv
@
137.13 486.896 mo
137.13 486.299 136.645 485.814 136.049 485.814 cv
135.452 485.814 134.967 486.299 134.967 486.896 cv
134.967 487.493 135.452 487.977 136.049 487.977 cv
136.645 487.977 137.13 487.493 137.13 486.896 cv
f
137.13 486.896 mo
137.13 486.299 136.645 485.814 136.049 485.814 cv
135.452 485.814 134.967 486.299 134.967 486.896 cv
134.967 487.493 135.452 487.977 136.049 487.977 cv
136.645 487.977 137.13 487.493 137.13 486.896 cv
@
141.427 481.412 mo
141.427 480.816 140.941 480.33 140.345 480.33 cv
139.747 480.33 139.264 480.816 139.264 481.412 cv
139.264 482.009 139.747 482.493 140.345 482.493 cv
140.941 482.493 141.427 482.009 141.427 481.412 cv
f
141.427 481.412 mo
141.427 480.816 140.942 480.33 140.345 480.33 cv
139.747 480.33 139.264 480.816 139.264 481.412 cv
139.264 482.009 139.747 482.493 140.345 482.493 cv
140.942 482.493 141.427 482.009 141.427 481.412 cv
@
145.63 483.971 mo
145.63 483.374 145.145 482.889 144.549 482.889 cv
143.952 482.889 143.467 483.374 143.467 483.971 cv
143.467 484.568 143.952 485.053 144.549 485.053 cv
145.145 485.053 145.63 484.568 145.63 483.971 cv
f
145.63 483.971 mo
145.63 483.374 145.145 482.889 144.549 482.889 cv
143.952 482.889 143.467 483.374 143.467 483.971 cv
143.467 484.568 143.952 485.053 144.549 485.053 cv
145.145 485.053 145.63 484.568 145.63 483.971 cv
@
149.835 485.433 mo
149.835 484.836 149.351 484.352 148.753 484.352 cv
148.156 484.352 147.671 484.836 147.671 485.433 cv
147.671 486.03 148.156 486.515 148.753 486.515 cv
149.351 486.515 149.835 486.03 149.835 485.433 cv
f
149.835 485.433 mo
149.835 484.836 149.351 484.352 148.753 484.352 cv
148.156 484.352 147.671 484.836 147.671 485.433 cv
147.671 486.03 148.156 486.515 148.753 486.515 cv
149.351 486.515 149.835 486.03 149.835 485.433 cv
@
154.221 479.31 mo
154.221 478.713 153.738 478.228 153.14 478.228 cv
152.544 478.228 152.058 478.713 152.058 479.31 cv
152.058 479.907 152.544 480.391 153.14 480.391 cv
153.738 480.391 154.221 479.907 154.221 479.31 cv
f
154.221 479.31 mo
154.221 478.713 153.738 478.228 153.14 478.228 cv
152.544 478.228 152.058 478.713 152.058 479.31 cv
152.058 479.907 152.544 480.391 153.14 480.391 cv
153.738 480.391 154.221 479.907 154.221 479.31 cv
@
158.426 480.132 mo
158.426 479.535 157.941 479.051 157.345 479.051 cv
156.748 479.051 156.263 479.535 156.263 480.132 cv
156.263 480.729 156.748 481.214 157.345 481.214 cv
157.941 481.214 158.426 480.729 158.426 480.132 cv
f
158.426 480.132 mo
158.426 479.535 157.941 479.051 157.345 479.051 cv
156.748 479.051 156.263 479.535 156.263 480.132 cv
156.263 480.729 156.748 481.214 157.345 481.214 cv
157.941 481.214 158.426 480.729 158.426 480.132 cv
@
35.0406 447.869 mo
35.0406 447.273 34.5562 446.788 33.9591 446.788 cv
33.3619 446.788 32.8775 447.273 32.8775 447.869 cv
32.8775 448.467 33.3619 448.951 33.9591 448.951 cv
34.5562 448.951 35.0406 448.467 35.0406 447.869 cv
.883 .77 0 0 cmyk
f
35.0406 447.869 mo
35.0406 447.273 34.5562 446.788 33.9591 446.788 cv
33.3619 446.788 32.8775 447.273 32.8775 447.869 cv
32.8775 448.467 33.3619 448.951 33.9591 448.951 cv
34.5562 448.951 35.0406 448.467 35.0406 447.869 cv
@
39.2448 451.799 mo
39.2448 451.202 38.7604 450.718 38.1633 450.718 cv
37.5662 450.718 37.0818 451.202 37.0818 451.799 cv
37.0818 452.397 37.5662 452.881 38.1633 452.881 cv
38.7604 452.881 39.2448 452.397 39.2448 451.799 cv
f
39.2448 451.799 mo
39.2448 451.202 38.7604 450.718 38.1633 450.718 cv
37.5662 450.718 37.0818 451.202 37.0818 451.799 cv
37.0818 452.397 37.5662 452.881 38.1633 452.881 cv
38.7604 452.881 39.2448 452.397 39.2448 451.799 cv
@
43.4491 455.09 mo
43.4491 454.493 42.9639 454.008 42.3675 454.008 cv
41.7712 454.008 41.286 454.493 41.286 455.09 cv
41.286 455.687 41.7712 456.171 42.3675 456.171 cv
42.9639 456.171 43.4491 455.687 43.4491 455.09 cv
f
43.4491 455.09 mo
43.4491 454.493 42.9639 454.008 42.3675 454.008 cv
41.7712 454.008 41.286 454.493 41.286 455.09 cv
41.286 455.687 41.7712 456.171 42.3675 456.171 cv
42.9639 456.171 43.4491 455.687 43.4491 455.09 cv
@
47.8361 457.923 mo
47.8361 457.327 47.3517 456.841 46.7546 456.841 cv
46.1574 456.841 45.673 457.327 45.673 457.923 cv
45.673 458.52 46.1574 459.005 46.7546 459.005 cv
47.3517 459.005 47.8361 458.52 47.8361 457.923 cv
f
47.8361 457.923 mo
47.8361 457.327 47.3517 456.842 46.7546 456.842 cv
46.1574 456.842 45.673 457.327 45.673 457.923 cv
45.673 458.52 46.1574 459.005 46.7546 459.005 cv
47.3517 459.005 47.8361 458.52 47.8361 457.923 cv
@
52.0403 461.67 mo
52.0403 461.074 51.5559 460.589 50.9588 460.589 cv
50.3617 460.589 49.8765 461.074 49.8765 461.67 cv
49.8765 462.267 50.3617 462.752 50.9588 462.752 cv
51.5559 462.752 52.0403 462.267 52.0403 461.67 cv
f
52.0403 461.67 mo
52.0403 461.074 51.5559 460.589 50.9588 460.589 cv
50.3617 460.589 49.8765 461.074 49.8765 461.67 cv
49.8765 462.267 50.3617 462.752 50.9588 462.752 cv
51.5559 462.752 52.0403 462.267 52.0403 461.67 cv
@
56.2453 460.939 mo
56.2453 460.343 55.7602 459.858 55.1638 459.858 cv
54.5659 459.858 54.0815 460.343 54.0815 460.939 cv
54.0815 461.536 54.5659 462.021 55.1638 462.021 cv
55.7602 462.021 56.2453 461.536 56.2453 460.939 cv
f
56.2453 460.939 mo
56.2453 460.343 55.7601 459.858 55.1638 459.858 cv
54.5659 459.858 54.0815 460.343 54.0815 460.939 cv
54.0815 461.536 54.5659 462.021 55.1638 462.021 cv
55.7601 462.021 56.2453 461.536 56.2453 460.939 cv
@
60.5394 460.482 mo
60.5394 459.885 60.0565 459.401 59.4579 459.401 cv
58.8615 459.401 58.3764 459.885 58.3764 460.482 cv
58.3764 461.08 58.8615 461.564 59.4579 461.564 cv
60.0565 461.564 60.5394 461.08 60.5394 460.482 cv
f
60.5394 460.482 mo
60.5394 459.885 60.0565 459.401 59.4579 459.401 cv
58.8615 459.401 58.3764 459.885 58.3764 460.482 cv
58.3764 461.08 58.8615 461.564 59.4579 461.564 cv
60.0565 461.564 60.5394 461.08 60.5394 460.482 cv
@
64.8358 464.229 mo
64.8358 463.632 64.3506 463.148 63.7543 463.148 cv
63.1579 463.148 62.6728 463.632 62.6728 464.229 cv
62.6728 464.827 63.1579 465.311 63.7543 465.311 cv
64.3506 465.311 64.8358 464.827 64.8358 464.229 cv
f
64.8358 464.229 mo
64.8358 463.632 64.3506 463.148 63.7543 463.148 cv
63.1579 463.148 62.6727 463.632 62.6727 464.229 cv
62.6727 464.827 63.1579 465.311 63.7543 465.311 cv
64.3506 465.311 64.8358 464.827 64.8358 464.229 cv
@
69.0393 466.971 mo
69.0393 466.375 68.5556 465.89 67.9585 465.89 cv
67.3614 465.89 66.877 466.375 66.877 466.971 cv
66.877 467.568 67.3614 468.053 67.9585 468.053 cv
68.5556 468.053 69.0393 467.568 69.0393 466.971 cv
f
69.0393 466.971 mo
69.0393 466.375 68.5556 465.89 67.9585 465.89 cv
67.3614 465.89 66.877 466.375 66.877 466.971 cv
66.877 467.568 67.3614 468.053 67.9585 468.053 cv
68.5556 468.053 69.0393 467.568 69.0393 466.971 cv
@
73.2443 466.88 mo
73.2443 466.284 72.7599 465.798 72.1627 465.798 cv
71.5656 465.798 71.0812 466.284 71.0812 466.88 cv
71.0812 467.477 71.5656 467.962 72.1627 467.962 cv
72.7599 467.962 73.2443 467.477 73.2443 466.88 cv
f
73.2443 466.88 mo
73.2443 466.284 72.7599 465.798 72.1627 465.798 cv
71.5656 465.798 71.0812 466.284 71.0812 466.88 cv
71.0812 467.477 71.5656 467.962 72.1627 467.962 cv
72.7599 467.962 73.2443 467.477 73.2443 466.88 cv
@
77.632 465.327 mo
77.632 464.73 77.1469 464.245 76.5498 464.245 cv
75.9526 464.245 75.4682 464.73 75.4682 465.327 cv
75.4682 465.923 75.9526 466.408 76.5498 466.408 cv
77.1469 466.408 77.632 465.923 77.632 465.327 cv
f
77.632 465.327 mo
77.632 464.73 77.1469 464.245 76.5498 464.245 cv
75.9526 464.245 75.4682 464.73 75.4682 465.327 cv
75.4682 465.923 75.9526 466.408 76.5498 466.408 cv
77.1469 466.408 77.632 465.923 77.632 465.327 cv
@
81.8355 468.252 mo
81.8355 467.654 81.3511 467.17 80.754 467.17 cv
80.1569 467.17 79.6725 467.654 79.6725 468.252 cv
79.6725 468.848 80.1569 469.332 80.754 469.332 cv
81.3511 469.332 81.8355 468.848 81.8355 468.252 cv
f
81.8355 468.252 mo
81.8355 467.654 81.3511 467.17 80.754 467.17 cv
80.1569 467.17 79.6725 467.654 79.6725 468.252 cv
79.6725 468.848 80.1569 469.332 80.754 469.332 cv
81.3511 469.332 81.8355 468.848 81.8355 468.252 cv
@
86.0397 466.24 mo
86.0397 465.644 85.5554 465.159 84.9582 465.159 cv
84.3619 465.159 83.8767 465.644 83.8767 466.24 cv
83.8767 466.837 84.3619 467.322 84.9582 467.322 cv
85.5554 467.322 86.0397 466.837 86.0397 466.24 cv
f
86.0397 466.24 mo
86.0397 465.644 85.5553 465.159 84.9582 465.159 cv
84.3619 465.159 83.8767 465.644 83.8767 466.24 cv
83.8767 466.837 84.3619 467.322 84.9582 467.322 cv
85.5553 467.322 86.0397 466.837 86.0397 466.24 cv
@
90.3354 464.778 mo
90.3354 464.181 89.851 463.696 89.2546 463.696 cv
88.6567 463.696 88.1731 464.181 88.1731 464.778 cv
88.1731 465.375 88.6567 465.859 89.2546 465.859 cv
89.851 465.859 90.3354 465.375 90.3354 464.778 cv
f
90.3354 464.778 mo
90.3354 464.181 89.851 463.696 89.2546 463.696 cv
88.6567 463.696 88.1731 464.181 88.1731 464.778 cv
88.1731 465.375 88.6567 465.859 89.2546 465.859 cv
89.851 465.859 90.3354 465.375 90.3354 464.778 cv
@
94.631 468.343 mo
94.631 467.745 94.1466 467.261 93.5495 467.261 cv
92.9524 467.261 92.468 467.745 92.468 468.343 cv
92.468 468.939 92.9524 469.424 93.5495 469.424 cv
94.1466 469.424 94.631 468.939 94.631 468.343 cv
f
94.631 468.343 mo
94.631 467.745 94.1466 467.261 93.5495 467.261 cv
92.9523 467.261 92.4679 467.745 92.4679 468.343 cv
92.4679 468.939 92.9523 469.424 93.5495 469.424 cv
94.1466 469.424 94.631 468.939 94.631 468.343 cv
@
98.836 474.009 mo
98.836 473.412 98.3509 472.927 97.7545 472.927 cv
97.1566 472.927 96.673 473.412 96.673 474.009 cv
96.673 474.606 97.1566 475.09 97.7545 475.09 cv
98.3509 475.09 98.836 474.606 98.836 474.009 cv
f
98.836 474.009 mo
98.836 473.412 98.3508 472.927 97.7545 472.927 cv
97.1566 472.927 96.6729 473.412 96.6729 474.009 cv
96.6729 474.606 97.1566 475.09 97.7545 475.09 cv
98.3508 475.09 98.836 474.606 98.836 474.009 cv
@
103.039 466.789 mo
103.039 466.191 102.554 465.708 101.958 465.708 cv
101.361 465.708 100.876 466.191 100.876 466.789 cv
100.876 467.386 101.361 467.871 101.958 467.871 cv
102.554 467.871 103.039 467.386 103.039 466.789 cv
f
103.039 466.789 mo
103.039 466.191 102.554 465.708 101.958 465.708 cv
101.361 465.708 100.876 466.191 100.876 466.789 cv
100.876 467.386 101.361 467.871 101.958 467.871 cv
102.554 467.871 103.039 467.386 103.039 466.789 cv
@
107.336 469.348 mo
107.336 468.751 106.851 468.266 106.254 468.266 cv
105.657 468.266 105.172 468.751 105.172 469.348 cv
105.172 469.945 105.657 470.429 106.254 470.429 cv
106.851 470.429 107.336 469.945 107.336 469.348 cv
f
107.336 469.348 mo
107.336 468.751 106.851 468.266 106.254 468.266 cv
105.656 468.266 105.172 468.751 105.172 469.348 cv
105.172 469.945 105.656 470.429 106.254 470.429 cv
106.851 470.429 107.336 469.945 107.336 469.348 cv
@
111.63 468.616 mo
111.63 468.02 111.146 467.535 110.548 467.535 cv
109.952 467.535 109.468 468.02 109.468 468.616 cv
109.468 469.214 109.952 469.698 110.548 469.698 cv
111.146 469.698 111.63 469.214 111.63 468.616 cv
f
111.63 468.616 mo
111.63 468.02 111.146 467.535 110.548 467.535 cv
109.952 467.535 109.468 468.02 109.468 468.616 cv
109.468 469.214 109.952 469.698 110.548 469.698 cv
111.146 469.698 111.63 469.214 111.63 468.616 cv
@
115.835 470.536 mo
115.835 469.939 115.351 469.455 114.753 469.455 cv
114.156 469.455 113.672 469.939 113.672 470.536 cv
113.672 471.133 114.156 471.617 114.753 471.617 cv
115.351 471.617 115.835 471.133 115.835 470.536 cv
f
115.835 470.536 mo
115.835 469.939 115.351 469.455 114.753 469.455 cv
114.156 469.455 113.672 469.939 113.672 470.536 cv
113.672 471.133 114.156 471.617 114.753 471.617 cv
115.351 471.617 115.835 471.133 115.835 470.536 cv
@
120.131 477.208 mo
120.131 476.611 119.646 476.126 119.049 476.126 cv
118.452 476.126 117.967 476.611 117.967 477.208 cv
117.967 477.805 118.452 478.289 119.049 478.289 cv
119.646 478.289 120.131 477.805 120.131 477.208 cv
f
120.131 477.208 mo
120.131 476.611 119.646 476.126 119.049 476.126 cv
118.452 476.126 117.968 476.611 117.968 477.208 cv
117.968 477.805 118.452 478.289 119.049 478.289 cv
119.646 478.289 120.131 477.805 120.131 477.208 cv
@
124.426 475.563 mo
124.426 474.965 123.941 474.481 123.345 474.481 cv
122.748 474.481 122.263 474.965 122.263 475.563 cv
122.263 476.16 122.748 476.644 123.345 476.644 cv
123.941 476.644 124.426 476.16 124.426 475.563 cv
f
124.426 475.563 mo
124.426 474.965 123.941 474.481 123.345 474.481 cv
122.748 474.481 122.263 474.965 122.263 475.563 cv
122.263 476.16 122.748 476.644 123.345 476.644 cv
123.941 476.644 124.426 476.16 124.426 475.563 cv
@
128.63 470.81 mo
128.63 470.214 128.146 469.728 127.549 469.728 cv
126.953 469.728 126.467 470.214 126.467 470.81 cv
126.467 471.407 126.953 471.891 127.549 471.891 cv
128.146 471.891 128.63 471.407 128.63 470.81 cv
f
128.63 470.81 mo
128.63 470.214 128.146 469.728 127.549 469.728 cv
126.953 469.728 126.467 470.214 126.467 470.81 cv
126.467 471.407 126.953 471.891 127.549 471.891 cv
128.146 471.891 128.63 471.407 128.63 470.81 cv
@
132.835 473.186 mo
132.835 472.59 132.35 472.105 131.752 472.105 cv
131.156 472.105 130.671 472.59 130.671 473.186 cv
130.671 473.783 131.156 474.268 131.752 474.268 cv
132.35 474.268 132.835 473.783 132.835 473.186 cv
f
132.835 473.186 mo
132.835 472.59 132.35 472.105 131.752 472.105 cv
131.156 472.105 130.671 472.59 130.671 473.186 cv
130.671 473.783 131.156 474.268 131.752 474.268 cv
132.35 474.268 132.835 473.783 132.835 473.186 cv
@
137.13 469.074 mo
137.13 468.476 136.645 467.993 136.049 467.993 cv
135.452 467.993 134.967 468.476 134.967 469.074 cv
134.967 469.671 135.452 470.156 136.049 470.156 cv
136.645 470.156 137.13 469.671 137.13 469.074 cv
f
137.13 469.074 mo
137.13 468.476 136.645 467.993 136.049 467.993 cv
135.452 467.993 134.967 468.476 134.967 469.074 cv
134.967 469.671 135.452 470.156 136.049 470.156 cv
136.645 470.156 137.13 469.671 137.13 469.074 cv
@
141.427 469.713 mo
141.427 469.116 140.941 468.632 140.345 468.632 cv
139.747 468.632 139.264 469.116 139.264 469.713 cv
139.264 470.31 139.747 470.795 140.345 470.795 cv
140.941 470.795 141.427 470.31 141.427 469.713 cv
f
141.427 469.713 mo
141.427 469.116 140.942 468.632 140.345 468.632 cv
139.747 468.632 139.264 469.116 139.264 469.713 cv
139.264 470.31 139.747 470.795 140.345 470.795 cv
140.942 470.795 141.427 470.31 141.427 469.713 cv
@
145.63 471.724 mo
145.63 471.127 145.145 470.642 144.549 470.642 cv
143.952 470.642 143.467 471.127 143.467 471.724 cv
143.467 472.321 143.952 472.805 144.549 472.805 cv
145.145 472.805 145.63 472.321 145.63 471.724 cv
f
145.63 471.724 mo
145.63 471.127 145.145 470.642 144.549 470.642 cv
143.952 470.642 143.467 471.127 143.467 471.724 cv
143.467 472.321 143.952 472.805 144.549 472.805 cv
145.145 472.805 145.63 472.321 145.63 471.724 cv
@
149.835 473.735 mo
149.835 473.138 149.351 472.653 148.753 472.653 cv
148.156 472.653 147.671 473.138 147.671 473.735 cv
147.671 474.332 148.156 474.817 148.753 474.817 cv
149.351 474.817 149.835 474.332 149.835 473.735 cv
f
149.835 473.735 mo
149.835 473.138 149.351 472.653 148.753 472.653 cv
148.156 472.653 147.671 473.138 147.671 473.735 cv
147.671 474.332 148.156 474.817 148.753 474.817 cv
149.351 474.817 149.835 474.332 149.835 473.735 cv
@
154.221 477.208 mo
154.221 476.611 153.738 476.126 153.14 476.126 cv
152.544 476.126 152.058 476.611 152.058 477.208 cv
152.058 477.805 152.544 478.289 153.14 478.289 cv
153.738 478.289 154.221 477.805 154.221 477.208 cv
f
154.221 477.208 mo
154.221 476.611 153.738 476.126 153.14 476.126 cv
152.544 476.126 152.058 476.611 152.058 477.208 cv
152.058 477.805 152.544 478.289 153.14 478.289 cv
153.738 478.289 154.221 477.805 154.221 477.208 cv
@
158.426 467.702 mo
158.426 467.106 157.941 466.621 157.345 466.621 cv
156.748 466.621 156.263 467.106 156.263 467.702 cv
156.263 468.3 156.748 468.784 157.345 468.784 cv
157.941 468.784 158.426 468.3 158.426 467.702 cv
f
158.426 467.702 mo
158.426 467.106 157.941 466.621 157.345 466.621 cv
156.748 466.621 156.263 467.106 156.263 467.702 cv
156.263 468.3 156.748 468.784 157.345 468.784 cv
157.941 468.784 158.426 468.3 158.426 467.702 cv
@
35.0406 419.994 mo
35.0406 419.396 34.5562 418.912 33.9591 418.912 cv
33.3619 418.912 32.8775 419.396 32.8775 419.994 cv
32.8775 420.59 33.3619 421.075 33.9591 421.075 cv
34.5562 421.075 35.0406 420.59 35.0406 419.994 cv
0 .988 1 0 cmyk
f
35.0406 419.994 mo
35.0406 419.396 34.5562 418.912 33.9591 418.912 cv
33.3619 418.912 32.8775 419.396 32.8775 419.994 cv
32.8775 420.59 33.3619 421.075 33.9591 421.075 cv
34.5562 421.075 35.0406 420.59 35.0406 419.994 cv
@
39.2448 438.913 mo
39.2448 438.315 38.7604 437.831 38.1633 437.831 cv
37.5662 437.831 37.0818 438.315 37.0818 438.913 cv
37.0818 439.51 37.5662 439.994 38.1633 439.994 cv
38.7604 439.994 39.2448 439.51 39.2448 438.913 cv
f
39.2448 438.913 mo
39.2448 438.315 38.7604 437.831 38.1633 437.831 cv
37.5662 437.831 37.0818 438.315 37.0818 438.913 cv
37.0818 439.51 37.5662 439.994 38.1633 439.994 cv
38.7604 439.994 39.2448 439.51 39.2448 438.913 cv
@
43.4491 442.294 mo
43.4491 441.697 42.9639 441.213 42.3675 441.213 cv
41.7712 441.213 41.286 441.697 41.286 442.294 cv
41.286 442.891 41.7712 443.376 42.3675 443.376 cv
42.9639 443.376 43.4491 442.891 43.4491 442.294 cv
f
43.4491 442.294 mo
43.4491 441.697 42.9639 441.213 42.3675 441.213 cv
41.7712 441.213 41.286 441.697 41.286 442.294 cv
41.286 442.891 41.7712 443.376 42.3675 443.376 cv
42.9639 443.376 43.4491 442.891 43.4491 442.294 cv
@
47.8361 453.811 mo
47.8361 453.213 47.3517 452.729 46.7546 452.729 cv
46.1574 452.729 45.673 453.213 45.673 453.811 cv
45.673 454.407 46.1574 454.892 46.7546 454.892 cv
47.3517 454.892 47.8361 454.407 47.8361 453.811 cv
f
47.8361 453.811 mo
47.8361 453.213 47.3517 452.729 46.7546 452.729 cv
46.1574 452.729 45.673 453.213 45.673 453.811 cv
45.673 454.407 46.1574 454.893 46.7546 454.893 cv
47.3517 454.893 47.8361 454.407 47.8361 453.811 cv
@
52.0403 449.606 mo
52.0403 449.009 51.5559 448.524 50.9588 448.524 cv
50.3617 448.524 49.8765 449.009 49.8765 449.606 cv
49.8765 450.203 50.3617 450.688 50.9588 450.688 cv
51.5559 450.688 52.0403 450.203 52.0403 449.606 cv
f
52.0403 449.606 mo
52.0403 449.009 51.5559 448.524 50.9588 448.524 cv
50.3617 448.524 49.8765 449.009 49.8765 449.606 cv
49.8765 450.203 50.3617 450.688 50.9588 450.688 cv
51.5559 450.688 52.0403 450.203 52.0403 449.606 cv
@
56.2453 452.713 mo
56.2453 452.116 55.7602 451.632 55.1638 451.632 cv
54.5659 451.632 54.0815 452.116 54.0815 452.713 cv
54.0815 453.31 54.5659 453.795 55.1638 453.795 cv
55.7602 453.795 56.2453 453.31 56.2453 452.713 cv
f
56.2453 452.713 mo
56.2453 452.116 55.7601 451.632 55.1638 451.632 cv
54.5659 451.632 54.0815 452.116 54.0815 452.713 cv
54.0815 453.31 54.5659 453.795 55.1638 453.795 cv
55.7601 453.795 56.2453 453.31 56.2453 452.713 cv
@
60.5394 451.16 mo
60.5394 450.563 60.0565 450.078 59.4579 450.078 cv
58.8615 450.078 58.3764 450.563 58.3764 451.16 cv
58.3764 451.757 58.8615 452.241 59.4579 452.241 cv
60.0565 452.241 60.5394 451.757 60.5394 451.16 cv
f
60.5394 451.16 mo
60.5394 450.563 60.0565 450.078 59.4579 450.078 cv
58.8615 450.078 58.3764 450.563 58.3764 451.16 cv
58.3764 451.757 58.8615 452.241 59.4579 452.241 cv
60.0565 452.241 60.5394 451.757 60.5394 451.16 cv
@
64.8358 453.811 mo
64.8358 453.213 64.3506 452.729 63.7543 452.729 cv
63.1579 452.729 62.6728 453.213 62.6728 453.811 cv
62.6728 454.407 63.1579 454.892 63.7543 454.892 cv
64.3506 454.892 64.8358 454.407 64.8358 453.811 cv
f
64.8358 453.811 mo
64.8358 453.213 64.3506 452.729 63.7543 452.729 cv
63.1579 452.729 62.6727 453.213 62.6727 453.811 cv
62.6727 454.407 63.1579 454.893 63.7543 454.893 cv
64.3506 454.893 64.8358 454.407 64.8358 453.811 cv
@
69.0393 450.52 mo
69.0393 449.923 68.5556 449.438 67.9585 449.438 cv
67.3614 449.438 66.877 449.923 66.877 450.52 cv
66.877 451.116 67.3614 451.601 67.9585 451.601 cv
68.5556 451.601 69.0393 451.116 69.0393 450.52 cv
f
69.0393 450.52 mo
69.0393 449.923 68.5556 449.438 67.9585 449.438 cv
67.3614 449.438 66.877 449.923 66.877 450.52 cv
66.877 451.116 67.3614 451.601 67.9585 451.601 cv
68.5556 451.601 69.0393 451.116 69.0393 450.52 cv
@
73.2443 453.445 mo
73.2443 452.847 72.7599 452.363 72.1627 452.363 cv
71.5656 452.363 71.0812 452.847 71.0812 453.445 cv
71.0812 454.042 71.5656 454.526 72.1627 454.526 cv
72.7599 454.526 73.2443 454.042 73.2443 453.445 cv
f
73.2443 453.445 mo
73.2443 452.848 72.7599 452.363 72.1627 452.363 cv
71.5656 452.363 71.0812 452.848 71.0812 453.445 cv
71.0812 454.042 71.5656 454.526 72.1627 454.526 cv
72.7599 454.526 73.2443 454.042 73.2443 453.445 cv
@
77.632 452.531 mo
77.632 451.934 77.1469 451.449 76.5498 451.449 cv
75.9526 451.449 75.4682 451.934 75.4682 452.531 cv
75.4682 453.128 75.9526 453.612 76.5498 453.612 cv
77.1469 453.612 77.632 453.128 77.632 452.531 cv
f
77.632 452.531 mo
77.632 451.934 77.1469 451.449 76.5498 451.449 cv
75.9526 451.449 75.4682 451.934 75.4682 452.531 cv
75.4682 453.128 75.9526 453.612 76.5498 453.612 cv
77.1469 453.612 77.632 453.128 77.632 452.531 cv
@
81.8355 459.385 mo
81.8355 458.789 81.3511 458.304 80.754 458.304 cv
80.1569 458.304 79.6725 458.789 79.6725 459.385 cv
79.6725 459.983 80.1569 460.467 80.754 460.467 cv
81.3511 460.467 81.8355 459.983 81.8355 459.385 cv
f
81.8355 459.385 mo
81.8355 458.789 81.3511 458.304 80.754 458.304 cv
80.1569 458.304 79.6725 458.789 79.6725 459.385 cv
79.6725 459.983 80.1569 460.467 80.754 460.467 cv
81.3511 460.467 81.8355 459.983 81.8355 459.385 cv
@
86.0397 451.799 mo
86.0397 451.202 85.5554 450.718 84.9582 450.718 cv
84.3619 450.718 83.8767 451.202 83.8767 451.799 cv
83.8767 452.397 84.3619 452.881 84.9582 452.881 cv
85.5554 452.881 86.0397 452.397 86.0397 451.799 cv
f
86.0397 451.799 mo
86.0397 451.202 85.5553 450.718 84.9582 450.718 cv
84.3619 450.718 83.8767 451.202 83.8767 451.799 cv
83.8767 452.397 84.3619 452.881 84.9582 452.881 cv
85.5553 452.881 86.0397 452.397 86.0397 451.799 cv
@
90.3354 462.401 mo
90.3354 461.805 89.851 461.32 89.2546 461.32 cv
88.6567 461.32 88.1731 461.805 88.1731 462.401 cv
88.1731 462.999 88.6567 463.483 89.2546 463.483 cv
89.851 463.483 90.3354 462.999 90.3354 462.401 cv
f
90.3354 462.401 mo
90.3354 461.805 89.851 461.32 89.2546 461.32 cv
88.6567 461.32 88.1731 461.805 88.1731 462.401 cv
88.1731 462.999 88.6567 463.483 89.2546 463.483 cv
89.851 463.483 90.3354 462.999 90.3354 462.401 cv
@
94.631 455.821 mo
94.631 455.224 94.1466 454.739 93.5495 454.739 cv
92.9524 454.739 92.468 455.224 92.468 455.821 cv
92.468 456.418 92.9524 456.902 93.5495 456.902 cv
94.1466 456.902 94.631 456.418 94.631 455.821 cv
f
94.631 455.821 mo
94.631 455.224 94.1466 454.739 93.5495 454.739 cv
92.9523 454.739 92.4679 455.224 92.4679 455.821 cv
92.4679 456.418 92.9523 456.902 93.5495 456.902 cv
94.1466 456.902 94.631 456.418 94.631 455.821 cv
@
98.836 467.154 mo
98.836 466.557 98.3509 466.073 97.7545 466.073 cv
97.1566 466.073 96.673 466.557 96.673 467.154 cv
96.673 467.751 97.1566 468.236 97.7545 468.236 cv
98.3509 468.236 98.836 467.751 98.836 467.154 cv
f
98.836 467.154 mo
98.836 466.557 98.3508 466.073 97.7545 466.073 cv
97.1566 466.073 96.6729 466.557 96.6729 467.154 cv
96.6729 467.751 97.1566 468.236 97.7545 468.236 cv
98.3508 468.236 98.836 467.751 98.836 467.154 cv
@
103.039 463.498 mo
103.039 462.901 102.554 462.417 101.958 462.417 cv
101.361 462.417 100.876 462.901 100.876 463.498 cv
100.876 464.095 101.361 464.58 101.958 464.58 cv
102.554 464.58 103.039 464.095 103.039 463.498 cv
f
103.039 463.498 mo
103.039 462.901 102.554 462.417 101.958 462.417 cv
101.361 462.417 100.876 462.901 100.876 463.498 cv
100.876 464.095 101.361 464.58 101.958 464.58 cv
102.554 464.58 103.039 464.095 103.039 463.498 cv
@
107.336 461.213 mo
107.336 460.616 106.851 460.132 106.254 460.132 cv
105.657 460.132 105.172 460.616 105.172 461.213 cv
105.172 461.81 105.657 462.295 106.254 462.295 cv
106.851 462.295 107.336 461.81 107.336 461.213 cv
f
107.336 461.213 mo
107.336 460.616 106.851 460.132 106.254 460.132 cv
105.656 460.132 105.172 460.616 105.172 461.213 cv
105.172 461.81 105.656 462.295 106.254 462.295 cv
106.851 462.295 107.336 461.81 107.336 461.213 cv
@
111.63 464.229 mo
111.63 463.632 111.146 463.148 110.548 463.148 cv
109.952 463.148 109.468 463.632 109.468 464.229 cv
109.468 464.827 109.952 465.311 110.548 465.311 cv
111.146 465.311 111.63 464.827 111.63 464.229 cv
f
111.63 464.229 mo
111.63 463.632 111.146 463.148 110.548 463.148 cv
109.952 463.148 109.468 463.632 109.468 464.229 cv
109.468 464.827 109.952 465.311 110.548 465.311 cv
111.146 465.311 111.63 464.827 111.63 464.229 cv
@
115.835 458.381 mo
115.835 457.783 115.351 457.299 114.753 457.299 cv
114.156 457.299 113.672 457.783 113.672 458.381 cv
113.672 458.977 114.156 459.462 114.753 459.462 cv
115.351 459.462 115.835 458.977 115.835 458.381 cv
f
115.835 458.381 mo
115.835 457.783 115.351 457.299 114.753 457.299 cv
114.156 457.299 113.672 457.783 113.672 458.381 cv
113.672 458.977 114.156 459.462 114.753 459.462 cv
115.351 459.462 115.835 458.977 115.835 458.381 cv
@
120.131 454.724 mo
120.131 454.128 119.646 453.643 119.049 453.643 cv
118.452 453.643 117.967 454.128 117.967 454.724 cv
117.967 455.321 118.452 455.806 119.049 455.806 cv
119.646 455.806 120.131 455.321 120.131 454.724 cv
f
120.131 454.724 mo
120.131 454.128 119.646 453.643 119.049 453.643 cv
118.452 453.643 117.968 454.128 117.968 454.724 cv
117.968 455.321 118.452 455.806 119.049 455.806 cv
119.646 455.806 120.131 455.321 120.131 454.724 cv
@
124.426 469.165 mo
124.426 468.568 123.941 468.083 123.345 468.083 cv
122.748 468.083 122.263 468.568 122.263 469.165 cv
122.263 469.762 122.748 470.247 123.345 470.247 cv
123.941 470.247 124.426 469.762 124.426 469.165 cv
f
124.426 469.165 mo
124.426 468.568 123.941 468.083 123.345 468.083 cv
122.748 468.083 122.263 468.568 122.263 469.165 cv
122.263 469.762 122.748 470.247 123.345 470.247 cv
123.941 470.247 124.426 469.762 124.426 469.165 cv
@
128.63 469.713 mo
128.63 469.116 128.146 468.632 127.549 468.632 cv
126.953 468.632 126.467 469.116 126.467 469.713 cv
126.467 470.31 126.953 470.795 127.549 470.795 cv
128.146 470.795 128.63 470.31 128.63 469.713 cv
f
128.63 469.713 mo
128.63 469.116 128.146 468.632 127.549 468.632 cv
126.953 468.632 126.467 469.116 126.467 469.713 cv
126.467 470.31 126.953 470.795 127.549 470.795 cv
128.146 470.795 128.63 470.31 128.63 469.713 cv
@
132.835 461.305 mo
132.835 460.708 132.35 460.224 131.752 460.224 cv
131.156 460.224 130.671 460.708 130.671 461.305 cv
130.671 461.902 131.156 462.386 131.752 462.386 cv
132.35 462.386 132.835 461.902 132.835 461.305 cv
f
132.835 461.305 mo
132.835 460.708 132.35 460.224 131.752 460.224 cv
131.156 460.224 130.671 460.708 130.671 461.305 cv
130.671 461.902 131.156 462.386 131.752 462.386 cv
132.35 462.386 132.835 461.902 132.835 461.305 cv
@
137.13 464.595 mo
137.13 463.999 136.645 463.513 136.049 463.513 cv
135.452 463.513 134.967 463.999 134.967 464.595 cv
134.967 465.192 135.452 465.677 136.049 465.677 cv
136.645 465.677 137.13 465.192 137.13 464.595 cv
f
137.13 464.595 mo
137.13 463.999 136.645 463.513 136.049 463.513 cv
135.452 463.513 134.967 463.999 134.967 464.595 cv
134.967 465.192 135.452 465.677 136.049 465.677 cv
136.645 465.677 137.13 465.192 137.13 464.595 cv
@
141.427 467.245 mo
141.427 466.648 140.941 466.164 140.345 466.164 cv
139.747 466.164 139.264 466.648 139.264 467.245 cv
139.264 467.843 139.747 468.327 140.345 468.327 cv
140.941 468.327 141.427 467.843 141.427 467.245 cv
f
141.427 467.245 mo
141.427 466.648 140.942 466.164 140.345 466.164 cv
139.747 466.164 139.264 466.648 139.264 467.245 cv
139.264 467.843 139.747 468.327 140.345 468.327 cv
140.942 468.327 141.427 467.843 141.427 467.245 cv
@
145.63 466.331 mo
145.63 465.735 145.145 465.25 144.549 465.25 cv
143.952 465.25 143.467 465.735 143.467 466.331 cv
143.467 466.929 143.952 467.413 144.549 467.413 cv
145.145 467.413 145.63 466.929 145.63 466.331 cv
f
145.63 466.332 mo
145.63 465.735 145.145 465.25 144.549 465.25 cv
143.952 465.25 143.467 465.735 143.467 466.332 cv
143.467 466.929 143.952 467.413 144.549 467.413 cv
145.145 467.413 145.63 466.929 145.63 466.332 cv
@
149.835 460.574 mo
149.835 459.976 149.351 459.493 148.753 459.493 cv
148.156 459.493 147.671 459.976 147.671 460.574 cv
147.671 461.171 148.156 461.655 148.753 461.655 cv
149.351 461.655 149.835 461.171 149.835 460.574 cv
f
149.835 460.574 mo
149.835 459.976 149.351 459.493 148.753 459.493 cv
148.156 459.493 147.671 459.976 147.671 460.574 cv
147.671 461.171 148.156 461.655 148.753 461.655 cv
149.351 461.655 149.835 461.171 149.835 460.574 cv
@
154.221 463.682 mo
154.221 463.084 153.738 462.6 153.14 462.6 cv
152.544 462.6 152.058 463.084 152.058 463.682 cv
152.058 464.278 152.544 464.763 153.14 464.763 cv
153.738 464.763 154.221 464.278 154.221 463.682 cv
f
154.221 463.682 mo
154.221 463.084 153.738 462.6 153.14 462.6 cv
152.544 462.6 152.058 463.084 152.058 463.682 cv
152.058 464.278 152.544 464.763 153.14 464.763 cv
153.738 464.763 154.221 464.278 154.221 463.682 cv
@
158.426 464.229 mo
158.426 463.632 157.941 463.148 157.345 463.148 cv
156.748 463.148 156.263 463.632 156.263 464.229 cv
156.263 464.827 156.748 465.311 157.345 465.311 cv
157.941 465.311 158.426 464.827 158.426 464.229 cv
f
158.426 464.229 mo
158.426 463.632 157.941 463.148 157.345 463.148 cv
156.748 463.148 156.263 463.632 156.263 464.229 cv
156.263 464.827 156.748 465.311 157.345 465.311 cv
157.941 465.311 158.426 464.827 158.426 464.229 cv
@
35.0406 393.032 mo
35.0406 392.435 34.5562 391.95 33.9591 391.95 cv
33.3619 391.95 32.8775 392.435 32.8775 393.032 cv
32.8775 393.629 33.3619 394.113 33.9591 394.113 cv
34.5562 394.113 35.0406 393.629 35.0406 393.032 cv
.836 .211 1 .082 cmyk
f
35.0406 393.032 mo
35.0406 392.435 34.5562 391.95 33.9591 391.95 cv
33.3619 391.95 32.8775 392.435 32.8775 393.032 cv
32.8775 393.629 33.3619 394.113 33.9591 394.113 cv
34.5562 394.113 35.0406 393.629 35.0406 393.032 cv
@
39.2448 403.725 mo
39.2448 403.129 38.7604 402.643 38.1633 402.643 cv
37.5662 402.643 37.0818 403.129 37.0818 403.725 cv
37.0818 404.322 37.5662 404.807 38.1633 404.807 cv
38.7604 404.807 39.2448 404.322 39.2448 403.725 cv
f
39.2448 403.725 mo
39.2448 403.129 38.7604 402.643 38.1633 402.643 cv
37.5662 402.643 37.0818 403.129 37.0818 403.725 cv
37.0818 404.322 37.5662 404.807 38.1633 404.807 cv
38.7604 404.807 39.2448 404.322 39.2448 403.725 cv
@
43.4491 407.198 mo
43.4491 406.601 42.9639 406.117 42.3675 406.117 cv
41.7712 406.117 41.286 406.601 41.286 407.198 cv
41.286 407.795 41.7712 408.28 42.3675 408.28 cv
42.9639 408.28 43.4491 407.795 43.4491 407.198 cv
f
43.4491 407.198 mo
43.4491 406.601 42.9639 406.117 42.3675 406.117 cv
41.7712 406.117 41.286 406.601 41.286 407.198 cv
41.286 407.795 41.7712 408.28 42.3675 408.28 cv
42.9639 408.28 43.4491 407.795 43.4491 407.198 cv
@
47.8361 414.236 mo
47.8361 413.638 47.3517 413.154 46.7546 413.154 cv
46.1574 413.154 45.673 413.638 45.673 414.236 cv
45.673 414.833 46.1574 415.317 46.7546 415.317 cv
47.3517 415.317 47.8361 414.833 47.8361 414.236 cv
f
47.8361 414.236 mo
47.8361 413.638 47.3517 413.154 46.7546 413.154 cv
46.1574 413.154 45.673 413.638 45.673 414.236 cv
45.673 414.833 46.1574 415.317 46.7546 415.317 cv
47.3517 415.317 47.8361 414.833 47.8361 414.236 cv
@
52.0403 424.015 mo
52.0403 423.418 51.5559 422.934 50.9588 422.934 cv
50.3617 422.934 49.8765 423.418 49.8765 424.015 cv
49.8765 424.612 50.3617 425.096 50.9588 425.096 cv
51.5559 425.096 52.0403 424.612 52.0403 424.015 cv
f
52.0403 424.015 mo
52.0403 423.418 51.5559 422.933 50.9588 422.933 cv
50.3617 422.933 49.8765 423.418 49.8765 424.015 cv
49.8765 424.612 50.3617 425.097 50.9588 425.097 cv
51.5559 425.097 52.0403 424.612 52.0403 424.015 cv
@
56.2453 427.214 mo
56.2453 426.617 55.7602 426.132 55.1638 426.132 cv
54.5659 426.132 54.0815 426.617 54.0815 427.214 cv
54.0815 427.811 54.5659 428.295 55.1638 428.295 cv
55.7602 428.295 56.2453 427.811 56.2453 427.214 cv
f
56.2453 427.214 mo
56.2453 426.617 55.7601 426.132 55.1638 426.132 cv
54.5659 426.132 54.0815 426.617 54.0815 427.214 cv
54.0815 427.811 54.5659 428.295 55.1638 428.295 cv
55.7601 428.295 56.2453 427.811 56.2453 427.214 cv
@
60.5394 436.445 mo
60.5394 435.849 60.0565 435.363 59.4579 435.363 cv
58.8615 435.363 58.3764 435.849 58.3764 436.445 cv
58.3764 437.042 58.8615 437.526 59.4579 437.526 cv
60.0565 437.526 60.5394 437.042 60.5394 436.445 cv
f
60.5394 436.445 mo
60.5394 435.849 60.0565 435.363 59.4579 435.363 cv
58.8615 435.363 58.3764 435.849 58.3764 436.445 cv
58.3764 437.042 58.8615 437.526 59.4579 437.526 cv
60.0565 437.526 60.5394 437.042 60.5394 436.445 cv
@
64.8358 428.128 mo
64.8358 427.531 64.3506 427.046 63.7543 427.046 cv
63.1579 427.046 62.6728 427.531 62.6728 428.128 cv
62.6728 428.725 63.1579 429.209 63.7543 429.209 cv
64.3506 429.209 64.8358 428.725 64.8358 428.128 cv
f
64.8358 428.128 mo
64.8358 427.531 64.3506 427.046 63.7543 427.046 cv
63.1579 427.046 62.6727 427.531 62.6727 428.128 cv
62.6727 428.725 63.1579 429.209 63.7543 429.209 cv
64.3506 429.209 64.8358 428.725 64.8358 428.128 cv
@
69.0393 440.466 mo
69.0393 439.869 68.5556 439.385 67.9585 439.385 cv
67.3614 439.385 66.877 439.869 66.877 440.466 cv
66.877 441.063 67.3614 441.548 67.9585 441.548 cv
68.5556 441.548 69.0393 441.063 69.0393 440.466 cv
f
69.0393 440.466 mo
69.0393 439.869 68.5556 439.385 67.9585 439.385 cv
67.3614 439.385 66.877 439.869 66.877 440.466 cv
66.877 441.063 67.3614 441.548 67.9585 441.548 cv
68.5556 441.548 69.0393 441.063 69.0393 440.466 cv
@
73.2443 439.552 mo
73.2443 438.955 72.7599 438.471 72.1627 438.471 cv
71.5656 438.471 71.0812 438.955 71.0812 439.552 cv
71.0812 440.149 71.5656 440.634 72.1627 440.634 cv
72.7599 440.634 73.2443 440.149 73.2443 439.552 cv
f
73.2443 439.552 mo
73.2443 438.955 72.7599 438.471 72.1627 438.471 cv
71.5656 438.471 71.0812 438.955 71.0812 439.552 cv
71.0812 440.15 71.5656 440.634 72.1627 440.634 cv
72.7599 440.634 73.2443 440.15 73.2443 439.552 cv
@
77.632 442.111 mo
77.632 441.514 77.1469 441.03 76.5498 441.03 cv
75.9526 441.03 75.4682 441.514 75.4682 442.111 cv
75.4682 442.708 75.9526 443.193 76.5498 443.193 cv
77.1469 443.193 77.632 442.708 77.632 442.111 cv
f
77.632 442.111 mo
77.632 441.514 77.1469 441.03 76.5498 441.03 cv
75.9526 441.03 75.4682 441.514 75.4682 442.111 cv
75.4682 442.708 75.9526 443.193 76.5498 443.193 cv
77.1469 443.193 77.632 442.708 77.632 442.111 cv
@
81.8355 446.133 mo
81.8355 445.536 81.3511 445.051 80.754 445.051 cv
80.1569 445.051 79.6725 445.536 79.6725 446.133 cv
79.6725 446.73 80.1569 447.214 80.754 447.214 cv
81.3511 447.214 81.8355 446.73 81.8355 446.133 cv
f
81.8355 446.133 mo
81.8355 445.536 81.3511 445.051 80.754 445.051 cv
80.1569 445.051 79.6725 445.536 79.6725 446.133 cv
79.6725 446.73 80.1569 447.214 80.754 447.214 cv
81.3511 447.214 81.8355 446.73 81.8355 446.133 cv
@
86.0397 444.853 mo
86.0397 444.256 85.5554 443.772 84.9582 443.772 cv
84.3619 443.772 83.8767 444.256 83.8767 444.853 cv
83.8767 445.451 84.3619 445.935 84.9582 445.935 cv
85.5554 445.935 86.0397 445.451 86.0397 444.853 cv
f
86.0397 444.853 mo
86.0397 444.256 85.5553 443.772 84.9582 443.772 cv
84.3619 443.772 83.8767 444.256 83.8767 444.853 cv
83.8767 445.451 84.3619 445.935 84.9582 445.935 cv
85.5553 445.935 86.0397 445.451 86.0397 444.853 cv
@
90.3354 444.214 mo
90.3354 443.616 89.851 443.132 89.2546 443.132 cv
88.6567 443.132 88.1731 443.616 88.1731 444.214 cv
88.1731 444.811 88.6567 445.295 89.2546 445.295 cv
89.851 445.295 90.3354 444.811 90.3354 444.214 cv
f
90.3354 444.214 mo
90.3354 443.616 89.851 443.132 89.2546 443.132 cv
88.6567 443.132 88.1731 443.616 88.1731 444.214 cv
88.1731 444.811 88.6567 445.295 89.2546 445.295 cv
89.851 445.295 90.3354 444.811 90.3354 444.214 cv
@
94.631 441.198 mo
94.631 440.6 94.1466 440.116 93.5495 440.116 cv
92.9524 440.116 92.468 440.6 92.468 441.198 cv
92.468 441.795 92.9524 442.279 93.5495 442.279 cv
94.1466 442.279 94.631 441.795 94.631 441.198 cv
f
94.631 441.198 mo
94.631 440.6 94.1466 440.116 93.5495 440.116 cv
92.9523 440.116 92.4679 440.6 92.4679 441.198 cv
92.4679 441.795 92.9523 442.279 93.5495 442.279 cv
94.1466 442.279 94.631 441.795 94.631 441.198 cv
@
98.836 444.122 mo
98.836 443.525 98.3509 443.041 97.7545 443.041 cv
97.1566 443.041 96.673 443.525 96.673 444.122 cv
96.673 444.719 97.1566 445.204 97.7545 445.204 cv
98.3509 445.204 98.836 444.719 98.836 444.122 cv
f
98.836 444.122 mo
98.836 443.525 98.3508 443.041 97.7545 443.041 cv
97.1566 443.041 96.6729 443.525 96.6729 444.122 cv
96.6729 444.719 97.1566 445.204 97.7545 445.204 cv
98.3508 445.204 98.836 444.719 98.836 444.122 cv
@
103.039 443.939 mo
103.039 443.342 102.554 442.858 101.958 442.858 cv
101.361 442.858 100.876 443.342 100.876 443.939 cv
100.876 444.537 101.361 445.021 101.958 445.021 cv
102.554 445.021 103.039 444.537 103.039 443.939 cv
f
103.039 443.939 mo
103.039 443.342 102.554 442.858 101.958 442.858 cv
101.361 442.858 100.876 443.342 100.876 443.939 cv
100.876 444.537 101.361 445.021 101.958 445.021 cv
102.554 445.021 103.039 444.537 103.039 443.939 cv
@
107.336 443.025 mo
107.336 442.428 106.851 441.944 106.254 441.944 cv
105.657 441.944 105.172 442.428 105.172 443.025 cv
105.172 443.623 105.657 444.107 106.254 444.107 cv
106.851 444.107 107.336 443.623 107.336 443.025 cv
f
107.336 443.025 mo
107.336 442.428 106.851 441.944 106.254 441.944 cv
105.656 441.944 105.172 442.428 105.172 443.025 cv
105.172 443.623 105.656 444.107 106.254 444.107 cv
106.851 444.107 107.336 443.623 107.336 443.025 cv
@
111.63 443.574 mo
111.63 442.977 111.146 442.492 110.548 442.492 cv
109.952 442.492 109.468 442.977 109.468 443.574 cv
109.468 444.17 109.952 444.655 110.548 444.655 cv
111.146 444.655 111.63 444.17 111.63 443.574 cv
f
111.63 443.574 mo
111.63 442.977 111.146 442.492 110.548 442.492 cv
109.952 442.492 109.468 442.977 109.468 443.574 cv
109.468 444.17 109.952 444.655 110.548 444.655 cv
111.146 444.655 111.63 444.17 111.63 443.574 cv
@
115.835 446.133 mo
115.835 445.536 115.351 445.051 114.753 445.051 cv
114.156 445.051 113.672 445.536 113.672 446.133 cv
113.672 446.73 114.156 447.214 114.753 447.214 cv
115.351 447.214 115.835 446.73 115.835 446.133 cv
f
115.835 446.133 mo
115.835 445.536 115.351 445.051 114.753 445.051 cv
114.156 445.051 113.672 445.536 113.672 446.133 cv
113.672 446.73 114.156 447.214 114.753 447.214 cv
115.351 447.214 115.835 446.73 115.835 446.133 cv
@
120.131 440.832 mo
120.131 440.235 119.646 439.75 119.049 439.75 cv
118.452 439.75 117.967 440.235 117.967 440.832 cv
117.967 441.429 118.452 441.913 119.049 441.913 cv
119.646 441.913 120.131 441.429 120.131 440.832 cv
f
120.131 440.832 mo
120.131 440.235 119.646 439.75 119.049 439.75 cv
118.452 439.75 117.968 440.235 117.968 440.832 cv
117.968 441.429 118.452 441.913 119.049 441.913 cv
119.646 441.913 120.131 441.429 120.131 440.832 cv
@
124.426 448.326 mo
124.426 447.729 123.941 447.245 123.345 447.245 cv
122.748 447.245 122.263 447.729 122.263 448.326 cv
122.263 448.924 122.748 449.408 123.345 449.408 cv
123.941 449.408 124.426 448.924 124.426 448.326 cv
f
124.426 448.326 mo
124.426 447.729 123.941 447.245 123.345 447.245 cv
122.748 447.245 122.263 447.729 122.263 448.326 cv
122.263 448.924 122.748 449.408 123.345 449.408 cv
123.941 449.408 124.426 448.924 124.426 448.326 cv
@
128.63 445.585 mo
128.63 444.988 128.146 444.503 127.549 444.503 cv
126.953 444.503 126.467 444.988 126.467 445.585 cv
126.467 446.182 126.953 446.666 127.549 446.666 cv
128.146 446.666 128.63 446.182 128.63 445.585 cv
f
128.63 445.585 mo
128.63 444.988 128.146 444.503 127.549 444.503 cv
126.953 444.503 126.467 444.988 126.467 445.585 cv
126.467 446.182 126.953 446.666 127.549 446.666 cv
128.146 446.666 128.63 446.182 128.63 445.585 cv
@
132.835 448.326 mo
132.835 447.729 132.35 447.245 131.752 447.245 cv
131.156 447.245 130.671 447.729 130.671 448.326 cv
130.671 448.924 131.156 449.408 131.752 449.408 cv
132.35 449.408 132.835 448.924 132.835 448.326 cv
f
132.835 448.326 mo
132.835 447.729 132.35 447.245 131.752 447.245 cv
131.156 447.245 130.671 447.729 130.671 448.326 cv
130.671 448.924 131.156 449.408 131.752 449.408 cv
132.35 449.408 132.835 448.924 132.835 448.326 cv
@
137.13 445.036 mo
137.13 444.439 136.645 443.955 136.049 443.955 cv
135.452 443.955 134.967 444.439 134.967 445.036 cv
134.967 445.633 135.452 446.118 136.049 446.118 cv
136.645 446.118 137.13 445.633 137.13 445.036 cv
f
137.13 445.036 mo
137.13 444.439 136.645 443.955 136.049 443.955 cv
135.452 443.955 134.967 444.439 134.967 445.036 cv
134.967 445.633 135.452 446.118 136.049 446.118 cv
136.645 446.118 137.13 445.633 137.13 445.036 cv
@
141.427 443.025 mo
141.427 442.428 140.941 441.944 140.345 441.944 cv
139.747 441.944 139.264 442.428 139.264 443.025 cv
139.264 443.623 139.747 444.107 140.345 444.107 cv
140.941 444.107 141.427 443.623 141.427 443.025 cv
f
141.427 443.025 mo
141.427 442.428 140.942 441.944 140.345 441.944 cv
139.747 441.944 139.264 442.428 139.264 443.025 cv
139.264 443.623 139.747 444.107 140.345 444.107 cv
140.942 444.107 141.427 443.623 141.427 443.025 cv
@
145.63 443.391 mo
145.63 442.794 145.145 442.309 144.549 442.309 cv
143.952 442.309 143.467 442.794 143.467 443.391 cv
143.467 443.988 143.952 444.473 144.549 444.473 cv
145.145 444.473 145.63 443.988 145.63 443.391 cv
f
145.63 443.391 mo
145.63 442.794 145.145 442.31 144.549 442.31 cv
143.952 442.31 143.467 442.794 143.467 443.391 cv
143.467 443.988 143.952 444.473 144.549 444.473 cv
145.145 444.473 145.63 443.988 145.63 443.391 cv
@
149.835 452.165 mo
149.835 451.568 149.351 451.084 148.753 451.084 cv
148.156 451.084 147.671 451.568 147.671 452.165 cv
147.671 452.762 148.156 453.247 148.753 453.247 cv
149.351 453.247 149.835 452.762 149.835 452.165 cv
f
149.835 452.165 mo
149.835 451.568 149.351 451.084 148.753 451.084 cv
148.156 451.084 147.671 451.568 147.671 452.165 cv
147.671 452.762 148.156 453.247 148.753 453.247 cv
149.351 453.247 149.835 452.762 149.835 452.165 cv
@
154.221 453.993 mo
154.221 453.396 153.738 452.911 153.14 452.911 cv
152.544 452.911 152.058 453.396 152.058 453.993 cv
152.058 454.59 152.544 455.075 153.14 455.075 cv
153.738 455.075 154.221 454.59 154.221 453.993 cv
f
154.221 453.993 mo
154.221 453.396 153.738 452.911 153.14 452.911 cv
152.544 452.911 152.058 453.396 152.058 453.993 cv
152.058 454.59 152.544 455.075 153.14 455.075 cv
153.738 455.075 154.221 454.59 154.221 453.993 cv
@
158.426 452.713 mo
158.426 452.116 157.941 451.632 157.345 451.632 cv
156.748 451.632 156.263 452.116 156.263 452.713 cv
156.263 453.31 156.748 453.795 157.345 453.795 cv
157.941 453.795 158.426 453.31 158.426 452.713 cv
f
158.426 452.713 mo
158.426 452.116 157.941 451.632 157.345 451.632 cv
156.748 451.632 156.263 452.116 156.263 452.713 cv
156.263 453.31 156.748 453.795 157.345 453.795 cv
157.941 453.795 158.426 453.31 158.426 452.713 cv
@
.807334 lw
0 lc
31.3619 518.724 mo
31.3619 373.29 li
.746 .676 .668 .898 cmyk
@
%ADOBeginSubsetFont: IAAAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginGEFRQA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B7EF322B8DEEDAE6F72EF3709E16C7A593AF17F17D72A3907C7468090579C66DE0263BFE> |-/two <1C60D8A8C9B7EF327699F81B0CD59DC4BD38D48AF11B5B9C1D7787A22BDC09D7BCED9A76C2312055A28AC829584109043EE366AF8632D6D62E9BBD6A4357093750D4015EA59C9F538C44C55AD0DB14FEE0C7267845EB7EFBD514024AA1A03530A8941AD7B5F508335B2FDCA37E6B0627146A6F144DB9DD7DCA6BE86290FB46DD6A2918F4C2C2BDEECA159D78> |-/three <1C60D8A8C9B7EF322B8D6E3793F9C339FF2D01F55F75395A69A42725328E1B8E66EAFF6BAC335B6E345906CE7152DDCE6F991DD2E99A50D14EF5FE716864AD89B92005EB56184F6465E294CACBF73EC4E77A27D9ACFF3348FE551D23745FD8C1F5363E223D2FE146B2E36748D97805004E8C37168D3D6622BBF76ADD739801325A4BB7457A49C531154E36C58F381AB30F164CAE6510100AF5FE6405CBE42D3AEC01131A86CADB27645F055DEC901ADBC964660F336098380F7A314362D92502B680C534E053458ABD592A4A4D87F9589307764B161F9884> |-/four <1C60D8A8C9B7EF32298E3DD46F18108137336D1A5C627A90D059BB18158BA2A55FF5DE20CE460964DAF45C08A7D9820A784F4A44F7E1> |-/five <1C60D8A8C9B7EF3277A9C7C54B35CB479E4C110330EAD203F40A20826414A4CC0E90EF4AAF68DCFEF4ABE6CFF07A7C5FBDADC90A7F87ECB382B602F56451722980F3A3AC74E582BA9C9CEC3027EC489F453112D8FBBD217B656538AC90D034F616E885784C813B1555F6DEF92ECF082193A9672305F8A984DE35F68D1502A8C10EB08C528E24E38813C68D1F86D01BCA9E> |-systemdict /gcheck known {setglobal} if end {end} ifendGEFRQA+Helvetica /Encoding getdup 49 /one putdup 50 /two putdup 51 /three putdup 52 /four putdup 53 /five putpop%ADOEndSubsetFont
/GEFRQA+Helvetica*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two /three /four /five /six 10{/.notdef}rp /A /B /C 5{/.notdef}rp /I 9{/.notdef}rp /S 16{/.notdef}rp /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l 3{/.notdef}rp /p 2{/.notdef}rp /s /t 2{/.notdef}rp /w /.notdef /y 134{/.notdef}rp]GEFRQA+Helvetica nfGEFRQA+Helvetica*1 [6.85472 0 0 -6.85472 0 0 ]msf22.1592 520.995 mo(0)sh22.1592 495.319 mo(1)sh22.1592 469.643 mo(2)sh22.1592 443.974 mo(3)sh22.1592 418.304 mo(4)sh22.1592 392.623 mo(5)sh157.345 521.961 mo
157.345 518.724 li
136.063 521.961 mo
136.063 518.724 li
114.784 521.961 mo
114.784 518.724 li
93.5045 521.961 mo
93.5045 518.724 li
72.2237 521.961 mo
72.2237 518.724 li
50.9436 521.961 mo
50.9436 518.724 li
31.3619 518.724 mo
159.896 518.724 li
28.1249 390.168 mo
31.3619 390.168 li
28.1249 415.843 mo
31.3619 415.843 li
28.1249 441.517 mo
31.3619 441.517 li
28.1249 467.185 mo
31.3619 467.185 li
28.1249 492.859 mo
31.3619 492.859 li
28.1249 518.534 mo
31.3619 518.534 li
@
%ADOBeginSubsetFont: IAAAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginGEFRQA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B81F2C3A3BDBA2E9DFEE10E6670AEBC7475A54CE0B91C398F722701ECC7FFACD7325FD69C372628B8FE38CA7FCBE37C8CC6151D955D330AD238F5A7ADFF3EC6F792676AC012B90C4C6A5CC37C0C314284064> |-/parenright <1C60D8A8C9B81F2C240532A9306D88FBE802946D4D7C96BED003DF2FCDB8DDB235CA368A4FADF1D0309B087452F4DD7B6CF26A6C550E92B406C8BCDB5365991B0FCCD46328F398E95D059281A86422A9CC2837C1B0EF> |-/D <1C60D8A8C9B6079F62ED4B3208AD694719329DB5FF23BCAF76D41058F7AAAFF2529AC265BA39C333293E127AD9C0A8013616ECDB9EC4B8FC987A3C84239B76F354F924D3BA3E82C9BA9779AE94CCE8ABEEADDA4A3C72DD0361E6B5DAAF6C5A39F74710AA0C4E1E> |-/R <1C60D8A8C9B6079F62E4AB3BE2637412A7FA2BF1A87387986CC045CAB872B149BF5CA8B183616945E928E44276850B6ACD583D0202E4733E2391A44F4BCB738AB089D22707E0F4100F2BC6F35BD460D56FBB8A5713D4AF8760EB8EC1E1AE6F49A9B2B1066A8DA04011CCA29E2BB62A652880D30D80185E3336BD5BF6EB5D116E1FAF0793D4F86835A22CB564EFB5339E311318AE2981A0679F359C9E7A1FF6CE964A> |-/T <1C60D8A8C9B7D8BE7B6CE17BCB3B2D4B0FB3E6AF9E6DDADD178189522CE1F006> |-/a <1C60D8A8C9B7EF322B0D17E770BC81022852C5639214CBF49D6EF8BAFB0188062A6BB41F6EB58ADD15E3D1B86AD22624C804FD4A4EBA73D78F7E503599DB65A7EB53D74C4A9A536152BF7A6B13AB96FF2727313FED0263E50A950746CED5AD5E7764E6E353716A8BE8970281B41D9429E56957BD1FCC84205F76AF78E807D18CA1CFFE724AECDDD2D385233E91066015AC7E0906FE359E28D96D9E0BD326B9E6C7D3E486FD1864E3B47A611B1D6D0D080020321300485E65AE9E4C12443E21865F474D46CD791839F25C8FD0A80215E3D2C3A5928427942DF3859AEF6E9035C909FC75082E8FF246F375DDB90EAC248C9121707FE869E161502F320A27113504> |-/m <1C60D8A8C9B6B41C87955CDC3639140F8FA33C70CE271539122DB89AC63FD596C1AE79761050C7D5317C1A1DE3923CB96B736E4977F68D67BD6922E1964FE05D51AB32C479ED8218C444609251096F1947B0C4960920FFF6AE70BA15738BF1106729A839E228137A715EA1C031F63BED533B4300B92AAA320484B5BAB342D2B48F6B68F518B0142254C333F20247ED0EA3DC72FEE0> |-/n <1C60D8A8C9B7EF3217E3BC2FA8BE5FFDDE7BA6B2BB97B82CAF2D20211744A627BCE3171C7124085EFB87C01551538DC74ADD76A4A469E736F37382A8E68FCF64FCF52E65C49BB3C47B4136748A05BC6A02EABE080CF030B375C809CD67343FEE2448D6> |-/o <1C60D8A8C9B7EF322BB7315D499F0FAA57DF741D86CA9D8DB7E5AD83A05FD148F53EC24E4E6BF5C292C0FC171599978D99E35AB7CAFB8CB65593939725D520CE4A30CDA834D29EB92A082721C79AE18875772ECDD437AD2148D76D23F045CDA1E61619294E456095F14AB8D580008870DAABB6481A0C5B1656CACCDE79F2741F9BB15B> |-/r <1C60D8A8C9B81F2C037408F8BF0E381AE4C9649BA754678B3C9CB9B6F5985C2C3DD85532C988309B457CF86E09A953B63981C0C686B55A9B6F57C7F684C3CFA5497AE68C179CE338521D1494441800> |-/u <1C60D8A8C9B7EF3216DE239CB7942A5DFDA331E51AE98893153168B8E02CBA8B703AF815B3549788123453BB74B7299D82AED651A97B215A966DFD3A6E1F3128BBB9E96D3A241ED635729E83FA4EE02FD12FE6F7CB1ABC83B0> |-/v <1C60D8A8C9B7A73DDF32B99894CC6FA66F5D07EC695DA6C164CB40F9A791729569775D3BE9C3> |-systemdict /gcheck known {setglobal} if end {end} ifendGEFRQA+Helvetica /Encoding getdup 40 /parenleft putdup 41 /parenright putdup 68 /D putdup 82 /R putdup 84 /T putdup 97 /a putdup 109 /m putdup 110 /n putdup 111 /o putdup 114 /r putdup 117 /u putdup 118 /v putpop%ADOEndSubsetFont
/GEFRQA+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two /three /four /five /six 10{/.notdef}rp /A /B /C /D 4{/.notdef}rp /I 8{/.notdef}rp /R /S /T 12{/.notdef}rp /a 2{/.notdef}rp /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]GEFRQA+Helvetica nfGEFRQA+Helvetica*1 [6.85472 0 0 -6.85472 0 0 ]msf49.0307 529.045 mo(51015202530)[19.3728 3.81944 17.4672 3.80575 17.4672 3.81946 17.4672 3.81944 17.4672 3.81946 0 ]xsh78.4841 536.703 mo(Tap Stimuli)[3.36768 3.81123 3.81123 1.90561 4.57216 1.90562 1.52175 5.70993 3.81123 1.46622 0 ]xshGEFRQA+Helvetica*1 [0 -6.85472 -6.85472 0 0 0 ]msf19.4043 478.378 mo(Reversal Duration \(s\))[-4.9498 -3.60626 -3.24985 -3.81192 -2.28323 -3.42807 -3.81189 -1.52246 -1.90628 -4.9498 -3.81192 -2.28326 -3.81189 -1.90631 -1.52243 -3.81192 -3.81189 -1.90631 -2.28326 -3.42804 0 ]ysh1 ml
32.0634 240.605 mo
34.0969 240.605 li
33.0763 231.115 mo
33.0763 240.605 li
32.0634 231.115 mo
34.0969 231.115 li
@
32.0634 209.607 mo
34.0969 209.607 li
33.0763 202.364 mo
33.0763 209.607 li
32.0634 202.364 mo
34.0969 202.364 li
.883 .77 0 0 cmyk
@
32.0634 241.755 mo
34.0969 241.755 li
33.0763 235.015 mo
33.0763 241.755 li
32.0634 235.015 mo
34.0969 235.015 li
0 .988 1 0 cmyk
@
32.0634 231.885 mo
34.0969 231.885 li
33.0763 224.946 mo
33.0763 231.885 li
32.0634 224.946 mo
34.0969 224.946 li
.836 .211 1 .082 cmyk
@
36.1305 248.054 mo
38.1633 248.054 li
37.1435 237.095 mo
37.1435 248.054 li
36.1305 237.095 mo
38.1633 237.095 li
.746 .676 .668 .898 cmyk
@
36.1305 214.679 mo
38.1633 214.679 li
37.1435 205.563 mo
37.1435 214.679 li
36.1305 205.563 mo
38.1633 205.563 li
.883 .77 0 0 cmyk
@
36.1305 243.05 mo
38.1633 243.05 li
37.1435 234.116 mo
37.1435 243.05 li
36.1305 234.116 mo
38.1633 234.116 li
0 .988 1 0 cmyk
@
36.1305 233.919 mo
38.1633 233.919 li
37.1435 227.498 mo
37.1435 233.919 li
36.1305 227.498 mo
38.1633 227.498 li
.836 .211 1 .082 cmyk
@
40.1969 258.962 mo
42.2312 258.962 li
41.2098 249.632 mo
41.2098 258.962 li
40.1969 249.632 mo
42.2312 249.632 li
.746 .676 .668 .898 cmyk
@
40.1969 218.13 mo
42.2312 218.13 li
41.2098 209.576 mo
41.2098 218.13 li
40.1969 209.576 mo
42.2312 209.576 li
.883 .77 0 0 cmyk
@
40.1969 248.9 mo
42.2312 248.9 li
41.2098 240.849 mo
41.2098 248.9 li
40.1969 240.849 mo
42.2312 240.849 li
0 .988 1 0 cmyk
@
40.1969 231.397 mo
42.2312 231.397 li
41.2098 225.64 mo
41.2098 231.397 li
40.1969 225.64 mo
42.2312 225.64 li
.836 .211 1 .082 cmyk
@
44.2648 262.457 mo
46.2983 262.457 li
45.2777 253.477 mo
45.2777 262.457 li
44.2648 253.477 mo
46.2983 253.477 li
.746 .676 .668 .898 cmyk
@
44.2648 226.858 mo
46.2983 226.858 li
45.2777 217.718 mo
45.2777 226.858 li
44.2648 217.718 mo
46.2983 217.718 li
.883 .77 0 0 cmyk
@
44.2648 250.271 mo
46.2983 250.271 li
45.2777 241.542 mo
45.2777 250.271 li
44.2648 241.542 mo
46.2983 241.542 li
0 .988 1 0 cmyk
@
44.2648 233.324 mo
46.2983 233.324 li
45.2777 227.086 mo
45.2777 233.324 li
44.2648 227.086 mo
46.2983 227.086 li
.836 .211 1 .082 cmyk
@
48.3319 263.912 mo
50.3578 263.912 li
49.3449 254.33 mo
49.3449 263.912 li
48.3319 254.33 mo
50.3578 254.33 li
.746 .676 .668 .898 cmyk
@
48.3319 234.634 mo
50.3578 234.634 li
49.3449 224.9 mo
49.3449 234.634 li
48.3319 224.9 mo
50.3578 224.9 li
.883 .77 0 0 cmyk
@
48.3319 256.828 mo
50.3578 256.828 li
49.3449 247.285 mo
49.3449 256.828 li
48.3319 247.285 mo
50.3578 247.285 li
0 .988 1 0 cmyk
@
48.3319 232.921 mo
50.3578 232.921 li
49.3449 226.523 mo
49.3449 232.921 li
48.3319 226.523 mo
50.3578 226.523 li
.836 .211 1 .082 cmyk
@
52.3914 268.847 mo
54.425 268.847 li
53.412 259.738 mo
53.412 268.847 li
52.3914 259.738 mo
54.425 259.738 li
.746 .676 .668 .898 cmyk
@
52.3914 234.65 mo
54.425 234.65 li
53.412 225.076 mo
53.412 234.65 li
52.3914 225.076 mo
54.425 225.076 li
.883 .77 0 0 cmyk
@
52.3914 257.514 mo
54.425 257.514 li
53.412 248.724 mo
53.412 257.514 li
52.3914 248.724 mo
54.425 248.724 li
0 .988 1 0 cmyk
@
52.3914 234.177 mo
54.425 234.177 li
53.412 228.122 mo
53.412 234.177 li
52.3914 228.122 mo
54.425 228.122 li
.836 .211 1 .082 cmyk
@
56.4586 273.905 mo
58.4921 273.905 li
57.4799 264.17 mo
57.4799 273.905 li
56.4586 264.17 mo
58.4921 264.17 li
.746 .676 .668 .898 cmyk
@
56.4586 232.967 mo
58.4921 232.967 li
57.4799 223.766 mo
57.4799 232.967 li
56.4586 223.766 mo
58.4921 223.766 li
.883 .77 0 0 cmyk
@
56.4586 260.918 mo
58.4921 260.918 li
57.4799 251.801 mo
57.4799 260.918 li
56.4586 251.801 mo
58.4921 251.801 li
0 .988 1 0 cmyk
@
56.4586 239.448 mo
58.4921 239.448 li
57.4799 232.753 mo
57.4799 239.448 li
56.4586 232.753 mo
58.4921 232.753 li
.836 .211 1 .082 cmyk
@
60.5265 274.857 mo
62.56 274.857 li
61.5471 264.757 mo
61.5471 274.857 li
60.5265 264.757 mo
62.56 264.757 li
.746 .676 .668 .898 cmyk
@
60.5265 238.983 mo
62.56 238.983 li
61.5471 228.427 mo
61.5471 238.983 li
60.5265 228.427 mo
62.56 228.427 li
.883 .77 0 0 cmyk
@
60.5265 263.066 mo
62.56 263.066 li
61.5471 254.224 mo
61.5471 263.066 li
60.5265 254.224 mo
62.56 254.224 li
0 .988 1 0 cmyk
@
60.5265 238.078 mo
62.56 238.078 li
61.5471 231.481 mo
61.5471 238.078 li
60.5265 231.481 mo
62.56 231.481 li
.836 .211 1 .082 cmyk
@
64.5936 272.754 mo
66.6272 272.754 li
65.6134 262.716 mo
65.6134 272.754 li
64.5936 262.716 mo
66.6272 262.716 li
.746 .676 .668 .898 cmyk
@
64.5936 250.499 mo
66.6272 250.499 li
65.6134 240.385 mo
65.6134 250.499 li
64.5936 240.385 mo
66.6272 240.385 li
.883 .77 0 0 cmyk
@
64.5936 264.01 mo
66.6272 264.01 li
65.6134 256.09 mo
65.6134 264.01 li
64.5936 256.09 mo
66.6272 256.09 li
0 .988 1 0 cmyk
@
64.5936 244.254 mo
66.6272 244.254 li
65.6134 236.645 mo
65.6134 244.254 li
64.5936 236.645 mo
66.6272 236.645 li
.836 .211 1 .082 cmyk
@
68.66 280.081 mo
70.6935 280.081 li
69.6806 269.951 mo
69.6806 280.081 li
68.66 269.951 mo
70.6935 269.951 li
.746 .676 .668 .898 cmyk
@
68.66 249.814 mo
70.6935 249.814 li
69.6806 241.047 mo
69.6806 249.814 li
68.66 241.047 mo
70.6935 241.047 li
.883 .77 0 0 cmyk
@
68.66 265.953 mo
70.6935 265.953 li
69.6806 257.78 mo
69.6806 265.953 li
68.66 257.78 mo
70.6935 257.78 li
0 .988 1 0 cmyk
@
68.66 247.491 mo
70.6935 247.491 li
69.6806 239.791 mo
69.6806 247.491 li
68.66 239.791 mo
70.6935 239.791 li
.836 .211 1 .082 cmyk
@
72.7271 281.072 mo
74.7607 281.072 li
73.7477 270.607 mo
73.7477 281.072 li
72.7271 270.607 mo
74.7607 270.607 li
.746 .676 .668 .898 cmyk
@
72.7271 251.078 mo
74.7607 251.078 li
73.7477 242.182 mo
73.7477 251.078 li
72.7271 242.182 mo
74.7607 242.182 li
.883 .77 0 0 cmyk
@
72.7271 269.845 mo
74.7607 269.845 li
73.7477 260.873 mo
73.7477 269.845 li
72.7271 260.873 mo
74.7607 260.873 li
0 .988 1 0 cmyk
@
72.7271 249.608 mo
74.7607 249.608 li
73.7477 242.243 mo
73.7477 249.608 li
72.7271 242.243 mo
74.7607 242.243 li
.836 .211 1 .082 cmyk
@
76.7942 279.853 mo
78.8278 279.853 li
77.8148 269.639 mo
77.8148 279.853 li
76.7942 269.639 mo
78.8278 269.639 li
.746 .676 .668 .898 cmyk
@
76.7942 254.361 mo
78.8278 254.361 li
77.8148 243.82 mo
77.8148 254.361 li
76.7942 243.82 mo
78.8278 243.82 li
.883 .77 0 0 cmyk
@
76.7942 269.068 mo
78.8278 269.068 li
77.8148 260.202 mo
77.8148 269.068 li
76.7942 260.202 mo
78.8278 260.202 li
0 .988 1 0 cmyk
@
76.7942 249.662 mo
78.8278 249.662 li
77.8148 242.03 mo
77.8148 249.662 li
76.7942 242.03 mo
78.8278 242.03 li
.836 .211 1 .082 cmyk
@
80.8614 279.808 mo
82.8949 279.808 li
81.882 269.479 mo
81.882 279.808 li
80.8614 269.479 mo
82.8949 269.479 li
.746 .676 .668 .898 cmyk
@
80.8614 256.752 mo
82.8949 256.752 li
81.882 247.788 mo
81.882 256.752 li
80.8614 247.788 mo
82.8949 247.788 li
.883 .77 0 0 cmyk
@
80.8614 269.967 mo
82.8949 269.967 li
81.882 260.812 mo
81.882 269.967 li
80.8614 260.812 mo
82.8949 260.812 li
0 .988 1 0 cmyk
@
80.8614 252.022 mo
82.8949 252.022 li
81.882 244.695 mo
81.882 252.022 li
80.8614 244.695 mo
82.8949 244.695 li
.836 .211 1 .082 cmyk
@
84.9285 280.393 mo
86.9621 280.393 li
85.9491 271.574 mo
85.9491 280.393 li
84.9285 271.574 mo
86.9621 271.574 li
.746 .676 .668 .898 cmyk
@
84.9285 258.557 mo
86.9621 258.557 li
85.9491 249.524 mo
85.9491 258.557 li
84.9285 249.524 mo
86.9621 249.524 li
.883 .77 0 0 cmyk
@
84.9285 267.727 mo
86.9621 267.727 li
85.9491 259.509 mo
85.9491 267.727 li
84.9285 259.509 mo
86.9621 259.509 li
0 .988 1 0 cmyk
@
84.9285 253.661 mo
86.9621 253.661 li
85.9491 246.782 mo
85.9491 253.661 li
84.9285 246.782 mo
86.9621 246.782 li
.836 .211 1 .082 cmyk
@
88.9957 276.136 mo
91.0292 276.136 li
90.0086 265.458 mo
90.0086 276.136 li
88.9957 265.458 mo
91.0292 265.458 li
.746 .676 .668 .898 cmyk
@
88.9957 258.755 mo
91.0292 258.755 li
90.0086 248.656 mo
90.0086 258.755 li
88.9957 248.656 mo
91.0292 248.656 li
.883 .77 0 0 cmyk
@
88.9957 269.898 mo
91.0292 269.898 li
90.0086 260.972 mo
90.0086 269.898 li
88.9957 260.972 mo
91.0292 260.972 li
0 .988 1 0 cmyk
@
88.9957 253.965 mo
91.0292 253.965 li
90.0086 246.95 mo
90.0086 253.965 li
88.9957 246.95 mo
91.0292 246.95 li
.836 .211 1 .082 cmyk
@
93.0628 283.501 mo
95.0956 283.501 li
94.0758 272.945 mo
94.0758 283.501 li
93.0628 272.945 mo
95.0956 272.945 li
.746 .676 .668 .898 cmyk
@
93.0628 263.295 mo
95.0956 263.295 li
94.0758 253.949 mo
94.0758 263.295 li
93.0628 253.949 mo
95.0956 253.949 li
.883 .77 0 0 cmyk
@
93.0628 274.148 mo
95.0956 274.148 li
94.0758 265.473 mo
94.0758 274.148 li
93.0628 265.473 mo
95.0956 265.473 li
0 .988 1 0 cmyk
@
93.0628 256.425 mo
95.0956 256.425 li
94.0758 248.641 mo
94.0758 256.425 li
93.0628 248.641 mo
95.0956 248.641 li
.836 .211 1 .082 cmyk
@
97.1292 281.323 mo
99.1635 281.323 li
98.1421 271.604 mo
98.1421 281.323 li
97.1292 271.604 mo
99.1635 271.604 li
.746 .676 .668 .898 cmyk
@
97.1292 260.888 mo
99.1635 260.888 li
98.1421 252.403 mo
98.1421 260.888 li
97.1292 252.403 mo
99.1635 252.403 li
.883 .77 0 0 cmyk
@
97.1292 274.148 mo
99.1635 274.148 li
98.1421 265.092 mo
98.1421 274.148 li
97.1292 265.092 mo
99.1635 265.092 li
0 .988 1 0 cmyk
@
97.1292 255.29 mo
99.1635 255.29 li
98.1421 246.851 mo
98.1421 255.29 li
97.1292 246.851 mo
99.1635 246.851 li
.836 .211 1 .082 cmyk
@
101.197 282.488 mo
103.231 282.488 li
102.21 270.454 mo
102.21 282.488 li
101.197 270.454 mo
103.231 270.454 li
.746 .676 .668 .898 cmyk
@
101.197 262.754 mo
103.231 262.754 li
102.21 253.332 mo
102.21 262.754 li
101.197 253.332 mo
103.231 253.332 li
.883 .77 0 0 cmyk
@
101.197 273.371 mo
103.231 273.371 li
102.21 264.361 mo
102.21 273.371 li
101.197 264.361 mo
103.231 264.361 li
0 .988 1 0 cmyk
@
101.197 253.904 mo
103.231 253.904 li
102.21 246.897 mo
102.21 253.904 li
101.197 246.897 mo
103.231 246.897 li
.836 .211 1 .082 cmyk
@
105.264 279.297 mo
107.298 279.297 li
106.277 268.976 mo
106.277 279.297 li
105.264 268.976 mo
107.298 268.976 li
.746 .676 .668 .898 cmyk
@
105.264 261.52 mo
107.298 261.52 li
106.277 251.634 mo
106.277 261.52 li
105.264 251.634 mo
107.298 251.634 li
.883 .77 0 0 cmyk
@
105.264 273.866 mo
107.298 273.866 li
106.277 263.752 mo
106.277 273.866 li
105.264 263.752 mo
107.298 263.752 li
0 .988 1 0 cmyk
@
105.264 258.176 mo
107.298 258.176 li
106.277 250.789 mo
106.277 258.176 li
105.264 250.789 mo
107.298 250.789 li
.836 .211 1 .082 cmyk
@
109.331 288.155 mo
111.366 288.155 li
110.344 275.816 mo
110.344 288.155 li
109.331 275.816 mo
111.366 275.816 li
.746 .676 .668 .898 cmyk
@
109.331 262.29 mo
111.366 262.29 li
110.344 253.188 mo
110.344 262.289 li
109.331 253.188 mo
111.366 253.188 li
.883 .77 0 0 cmyk
@
109.331 274.186 mo
111.366 274.186 li
110.344 265.328 mo
110.344 274.186 li
109.331 265.328 mo
111.366 265.328 li
0 .988 1 0 cmyk
@
109.331 256.455 mo
111.366 256.455 li
110.344 249.22 mo
110.344 256.455 li
109.331 249.22 mo
111.366 249.22 li
.836 .211 1 .082 cmyk
@
113.399 287.355 mo
115.433 287.355 li
114.412 277.629 mo
114.412 287.355 li
113.399 277.629 mo
115.433 277.629 li
.746 .676 .668 .898 cmyk
@
113.399 265.899 mo
115.433 265.899 li
114.412 255.998 mo
114.412 265.899 li
113.399 255.998 mo
115.433 255.998 li
.883 .77 0 0 cmyk
@
113.399 271.063 mo
115.433 271.063 li
114.412 262.304 mo
114.412 271.063 li
113.399 262.304 mo
115.433 262.304 li
0 .988 1 0 cmyk
@
113.399 253.386 mo
115.433 253.386 li
114.412 247.163 mo
114.412 253.386 li
113.399 247.163 mo
115.433 247.163 li
.836 .211 1 .082 cmyk
@
117.466 278.169 mo
119.499 278.169 li
118.479 266.037 mo
118.479 278.169 li
117.466 266.037 mo
119.499 266.037 li
.746 .676 .668 .898 cmyk
@
117.466 265.991 mo
119.499 265.991 li
118.479 256.501 mo
118.479 265.991 li
117.466 256.501 mo
119.499 256.501 li
.883 .77 0 0 cmyk
@
117.466 278.939 mo
119.499 278.939 li
118.479 270.644 mo
118.479 278.939 li
117.466 270.644 mo
119.499 270.644 li
0 .988 1 0 cmyk
@
117.466 257.149 mo
119.499 257.149 li
118.479 250.073 mo
118.479 257.149 li
117.466 250.073 mo
119.499 250.073 li
.836 .211 1 .082 cmyk
@
121.533 289.237 mo
123.559 289.237 li
122.546 278.604 mo
122.546 289.237 li
121.533 278.604 mo
123.559 278.604 li
.746 .676 .668 .898 cmyk
@
121.533 267.812 mo
123.559 267.812 li
122.546 259.22 mo
122.546 267.812 li
121.533 259.22 mo
123.559 259.22 li
.883 .77 0 0 cmyk
@
121.533 278.146 mo
123.559 278.146 li
122.546 268.58 mo
122.546 278.146 li
121.533 268.58 mo
123.559 268.58 li
0 .988 1 0 cmyk
@
121.533 255.572 mo
123.559 255.572 li
122.546 248.374 mo
122.546 255.572 li
121.533 248.374 mo
123.559 248.374 li
.836 .211 1 .082 cmyk
@
125.592 287.424 mo
127.626 287.424 li
126.613 277.057 mo
126.613 287.424 li
125.592 277.057 mo
127.626 277.057 li
.746 .676 .668 .898 cmyk
@
125.592 266.234 mo
127.626 266.234 li
126.613 256.768 mo
126.613 266.234 li
125.592 256.768 mo
127.626 256.768 li
.883 .77 0 0 cmyk
@
125.592 275.908 mo
127.626 275.908 li
126.613 267.484 mo
126.613 275.908 li
125.592 267.484 mo
127.626 267.484 li
0 .988 1 0 cmyk
@
125.592 257.841 mo
127.626 257.841 li
126.613 250.69 mo
126.613 257.841 li
125.592 250.69 mo
127.626 250.69 li
.836 .211 1 .082 cmyk
@
129.659 286.966 mo
131.693 286.966 li
130.68 276.578 mo
130.68 286.966 li
129.659 276.578 mo
131.693 276.578 li
.746 .676 .668 .898 cmyk
@
129.659 268.108 mo
131.693 268.108 li
130.68 258.611 mo
130.68 268.108 li
129.659 258.611 mo
131.693 258.611 li
.883 .77 0 0 cmyk
@
129.659 275.054 mo
131.693 275.054 li
130.68 265.298 mo
130.68 275.054 li
129.659 265.298 mo
131.693 265.298 li
0 .988 1 0 cmyk
@
129.659 258.649 mo
131.693 258.649 li
130.68 249.517 mo
130.68 258.649 li
129.659 249.517 mo
131.693 249.517 li
.836 .211 1 .082 cmyk
@
133.727 288.649 mo
135.76 288.649 li
134.747 278.748 mo
134.747 288.649 li
133.727 278.748 mo
135.76 278.748 li
.746 .676 .668 .898 cmyk
@
133.727 267.88 mo
135.76 267.88 li
134.747 258.032 mo
134.747 267.88 li
133.727 258.032 mo
135.76 258.032 li
.883 .77 0 0 cmyk
@
133.727 275.481 mo
135.76 275.481 li
134.747 267.346 mo
134.747 275.481 li
133.727 267.346 mo
135.76 267.346 li
0 .988 1 0 cmyk
@
133.727 256.197 mo
135.76 256.197 li
134.747 249.091 mo
134.747 256.197 li
133.727 249.091 mo
135.76 249.091 li
.836 .211 1 .082 cmyk
@
137.794 290.844 mo
139.827 290.844 li
138.814 280.515 mo
138.814 290.844 li
137.794 280.515 mo
139.827 280.515 li
.746 .676 .668 .898 cmyk
@
137.794 270.097 mo
139.827 270.097 li
138.814 260.591 mo
138.814 270.096 li
137.794 260.591 mo
139.827 260.591 li
.883 .77 0 0 cmyk
@
137.794 279.297 mo
139.827 279.297 li
138.814 269.235 mo
138.814 279.297 li
137.794 269.235 mo
139.827 269.235 li
0 .988 1 0 cmyk
@
137.794 257.788 mo
139.827 257.788 li
138.814 250.126 mo
138.814 257.788 li
137.794 250.126 mo
139.827 250.126 li
.836 .211 1 .082 cmyk
@
141.861 286.334 mo
143.895 286.334 li
142.882 274.338 mo
142.882 286.334 li
141.861 274.338 mo
143.895 274.338 li
.746 .676 .668 .898 cmyk
@
141.861 268.299 mo
143.895 268.299 li
142.882 258.542 mo
142.882 268.299 li
141.861 258.542 mo
143.895 258.542 li
.883 .77 0 0 cmyk
@
141.861 276.129 mo
143.895 276.129 li
142.882 266.234 mo
142.882 276.129 li
141.861 266.234 mo
143.895 266.234 li
0 .988 1 0 cmyk
@
141.861 263.645 mo
143.895 263.645 li
142.882 255.328 mo
142.882 263.645 li
141.861 255.328 mo
143.895 255.328 li
.836 .211 1 .082 cmyk
@
145.929 289.237 mo
147.962 289.237 li
146.949 278.003 mo
146.949 289.237 li
145.929 278.003 mo
147.962 278.003 li
.746 .676 .668 .898 cmyk
@
145.929 274.011 mo
147.962 274.011 li
146.949 264.247 mo
146.949 274.011 li
145.929 264.247 mo
147.962 264.247 li
.883 .77 0 0 cmyk
@
145.929 278.741 mo
147.962 278.741 li
146.949 268.954 mo
146.949 278.741 li
145.929 268.954 mo
147.962 268.954 li
0 .988 1 0 cmyk
@
145.929 259.167 mo
147.962 259.167 li
146.949 250.805 mo
146.949 259.167 li
145.929 250.805 mo
147.962 250.805 li
.836 .211 1 .082 cmyk
@
149.995 285.755 mo
152.029 285.755 li
151.016 273.889 mo
151.016 285.755 li
149.995 273.889 mo
152.029 273.889 li
.746 .676 .668 .898 cmyk
@
149.995 268.984 mo
152.029 268.984 li
151.016 259.707 mo
151.016 268.984 li
149.995 259.707 mo
152.029 259.707 li
.883 .77 0 0 cmyk
@
149.995 271.353 mo
152.029 271.353 li
151.016 260.964 mo
151.016 271.353 li
149.995 260.964 mo
152.029 260.964 li
0 .988 1 0 cmyk
@
149.995 259.373 mo
152.029 259.373 li
151.016 251.162 mo
151.016 259.373 li
149.995 251.162 mo
152.029 251.162 li
.836 .211 1 .082 cmyk
@
33.0763 235.86 mo
37.1435 242.57 li
41.2098 254.293 li
45.2777 257.963 li
49.3449 259.121 li
53.412 264.293 li
57.4799 269.037 li
61.5471 269.807 li
65.6134 267.735 li
69.6806 275.017 li
73.7477 275.839 li
77.8148 274.75 li
81.882 274.643 li
85.9491 275.983 li
90.0086 270.797 li
94.0758 278.223 li
98.1421 276.463 li
102.21 276.472 li
106.277 274.14 li
110.344 281.985 li
114.412 282.488 li
118.479 272.107 li
122.546 283.92 li
126.613 282.236 li
130.68 281.773 li
134.747 283.699 li
138.814 285.68 li
142.882 280.332 li
146.949 283.623 li
151.016 279.822 li
.746 .676 .668 .898 cmyk
@
33.0763 205.989 mo
37.1435 210.118 li
41.2098 213.857 li
45.2777 222.288 li
49.3449 229.767 li
53.412 229.86 li
57.4799 228.367 li
61.5471 233.705 li
65.6134 245.443 li
69.6806 245.427 li
73.7477 246.63 li
77.8148 249.091 li
81.882 252.274 li
85.9491 254.041 li
90.0086 253.706 li
94.0758 258.618 li
98.1421 256.646 li
102.21 258.047 li
106.277 256.577 li
110.344 257.742 li
114.412 260.949 li
118.479 261.247 li
122.546 263.515 li
126.613 261.498 li
130.68 263.355 li
134.747 262.952 li
138.814 265.343 li
142.882 263.424 li
146.949 269.129 li
151.016 264.346 li
.883 .77 0 0 cmyk
@
33.0763 238.381 mo
37.1435 238.588 li
41.2098 244.878 li
45.2777 245.906 li
49.3449 252.053 li
53.412 253.12 li
57.4799 256.364 li
61.5471 258.649 li
65.6134 260.05 li
69.6806 261.87 li
73.7477 265.359 li
77.8148 264.635 li
81.882 265.389 li
85.9491 263.623 li
90.0086 265.436 li
94.0758 269.807 li
98.1421 269.625 li
102.21 268.863 li
106.277 268.809 li
110.344 269.753 li
114.412 266.684 li
118.479 274.788 li
122.546 273.364 li
126.613 271.695 li
130.68 270.18 li
134.747 271.414 li
138.814 274.262 li
142.882 271.178 li
146.949 273.851 li
151.016 266.158 li
0 .988 1 0 cmyk
@
33.0763 228.419 mo
37.1435 230.712 li
41.2098 228.518 li
45.2777 230.21 li
49.3449 229.722 li
53.412 231.154 li
57.4799 236.097 li
61.5471 234.78 li
65.6134 240.453 li
69.6806 243.637 li
73.7477 245.922 li
77.8148 245.846 li
81.882 248.36 li
85.9491 250.225 li
90.0086 250.461 li
94.0758 252.533 li
98.1421 251.07 li
102.21 250.4 li
106.277 254.483 li
110.344 252.837 li
114.412 250.278 li
118.479 253.614 li
122.546 251.977 li
126.613 254.262 li
130.68 254.079 li
134.747 252.639 li
138.814 253.957 li
142.882 259.486 li
146.949 254.985 li
151.016 255.267 li
.836 .211 1 .082 cmyk
@
34.1731 235.83 mo
34.1731 235.233 33.6887 234.748 33.0916 234.748 cv
32.4944 234.748 32.0093 235.233 32.0093 235.83 cv
32.0093 236.427 32.4944 236.911 33.0916 236.911 cv
33.6887 236.911 34.1731 236.427 34.1731 235.83 cv
.746 .676 .668 .898 cmyk
f
.571227 lw
1 lc
10 ml
34.1731 235.83 mo
34.1731 235.233 33.6887 234.748 33.0916 234.748 cv
32.4944 234.748 32.0093 235.233 32.0093 235.83 cv
32.0093 236.427 32.4944 236.911 33.0916 236.911 cv
33.6887 236.911 34.1731 236.427 34.1731 235.83 cv
@
38.2859 242.593 mo
38.2859 241.996 37.8015 241.512 37.2044 241.512 cv
36.6073 241.512 36.1229 241.996 36.1229 242.593 cv
36.1229 243.19 36.6073 243.675 37.2044 243.675 cv
37.8015 243.675 38.2859 243.19 38.2859 242.593 cv
f
38.2859 242.593 mo
38.2859 241.996 37.8015 241.512 37.2044 241.512 cv
36.6073 241.512 36.1229 241.996 36.1229 242.593 cv
36.1229 243.19 36.6073 243.675 37.2044 243.675 cv
37.8015 243.675 38.2859 243.19 38.2859 242.593 cv
@
42.3074 254.293 mo
42.3074 253.695 41.823 253.211 41.2258 253.211 cv
40.6287 253.211 40.1443 253.695 40.1443 254.293 cv
40.1443 254.889 40.6287 255.374 41.2258 255.374 cv
41.823 255.374 42.3074 254.889 42.3074 254.293 cv
f
42.3074 254.293 mo
42.3074 253.695 41.823 253.211 41.2258 253.211 cv
40.6287 253.211 40.1443 253.695 40.1443 254.293 cv
40.1443 254.889 40.6287 255.374 41.2258 255.374 cv
41.823 255.374 42.3074 254.889 42.3074 254.293 cv
@
46.3288 257.948 mo
46.3288 257.351 45.8436 256.867 45.2473 256.867 cv
44.6502 256.867 44.1658 257.351 44.1658 257.948 cv
44.1658 258.545 44.6502 259.029 45.2473 259.029 cv
45.8436 259.029 46.3288 258.545 46.3288 257.948 cv
f
46.3288 257.948 mo
46.3288 257.351 45.8436 256.867 45.2473 256.867 cv
44.6502 256.867 44.1657 257.351 44.1657 257.948 cv
44.1657 258.545 44.6502 259.029 45.2473 259.029 cv
45.8436 259.029 46.3288 258.545 46.3288 257.948 cv
@
50.3495 259.136 mo
50.3495 258.54 49.8658 258.055 49.268 258.055 cv
48.6716 258.055 48.1872 258.54 48.1872 259.136 cv
48.1872 259.733 48.6716 260.217 49.268 260.217 cv
49.8658 260.217 50.3495 259.733 50.3495 259.136 cv
f
50.3495 259.136 mo
50.3495 258.54 49.8658 258.055 49.2679 258.055 cv
48.6716 258.055 48.1872 258.54 48.1872 259.136 cv
48.1872 259.733 48.6716 260.218 49.2679 260.218 cv
49.8658 260.218 50.3495 259.733 50.3495 259.136 cv
@
54.5545 264.346 mo
54.5545 263.749 54.0701 263.264 53.4729 263.264 cv
52.8758 263.264 52.3914 263.749 52.3914 264.346 cv
52.3914 264.943 52.8758 265.427 53.4729 265.427 cv
54.0701 265.427 54.5545 264.943 54.5545 264.346 cv
f
54.5545 264.346 mo
54.5545 263.749 54.0701 263.264 53.4729 263.264 cv
52.8758 263.264 52.3914 263.749 52.3914 264.346 cv
52.3914 264.943 52.8758 265.427 53.4729 265.427 cv
54.0701 265.427 54.5545 264.943 54.5545 264.346 cv
@
58.5759 269.098 mo
58.5759 268.501 58.0908 268.017 57.4944 268.017 cv
56.8973 268.017 56.4129 268.501 56.4129 269.098 cv
56.4129 269.695 56.8973 270.18 57.4944 270.18 cv
58.0908 270.18 58.5759 269.695 58.5759 269.098 cv
f
58.5759 269.098 mo
58.5759 268.501 58.0907 268.017 57.4944 268.017 cv
56.8973 268.017 56.4129 268.501 56.4129 269.098 cv
56.4129 269.695 56.8973 270.18 57.4944 270.18 cv
58.0907 270.18 58.5759 269.695 58.5759 269.098 cv
@
62.5966 269.829 mo
62.5966 269.232 62.1129 268.748 61.5158 268.748 cv
60.9187 268.748 60.4343 269.232 60.4343 269.829 cv
60.4343 270.427 60.9187 270.911 61.5158 270.911 cv
62.1129 270.911 62.5966 270.427 62.5966 269.829 cv
f
62.5966 269.829 mo
62.5966 269.232 62.1129 268.748 61.5158 268.748 cv
60.9187 268.748 60.4343 269.232 60.4343 269.829 cv
60.4343 270.427 60.9187 270.911 61.5158 270.911 cv
62.1129 270.911 62.5966 270.427 62.5966 269.829 cv
@
66.6196 267.727 mo
66.6196 267.13 66.1344 266.646 65.5373 266.646 cv
64.9401 266.646 64.4557 267.13 64.4557 267.727 cv
64.4557 268.324 64.9401 268.809 65.5373 268.809 cv
66.1344 268.809 66.6196 268.324 66.6196 267.727 cv
f
66.6195 267.727 mo
66.6195 267.13 66.1344 266.646 65.5373 266.646 cv
64.9401 266.646 64.4557 267.13 64.4557 267.727 cv
64.4557 268.324 64.9401 268.809 65.5373 268.809 cv
66.1344 268.809 66.6195 268.324 66.6195 267.727 cv
@
70.823 274.948 mo
70.823 274.351 70.3386 273.866 69.7415 273.866 cv
69.1444 273.866 68.66 274.351 68.66 274.948 cv
68.66 275.545 69.1444 276.03 69.7415 276.03 cv
70.3386 276.03 70.823 275.545 70.823 274.948 cv
f
70.823 274.948 mo
70.823 274.351 70.3386 273.866 69.7415 273.866 cv
69.1444 273.866 68.66 274.351 68.66 274.948 cv
68.66 275.545 69.1444 276.03 69.7415 276.03 cv
70.3386 276.03 70.823 275.545 70.823 274.948 cv
@
74.8445 275.862 mo
74.8445 275.265 74.3601 274.78 73.7629 274.78 cv
73.1658 274.78 72.6814 275.265 72.6814 275.862 cv
72.6814 276.459 73.1658 276.944 73.7629 276.944 cv
74.3601 276.944 74.8445 276.459 74.8445 275.862 cv
f
74.8445 275.862 mo
74.8445 275.265 74.3601 274.78 73.7629 274.78 cv
73.1658 274.78 72.6814 275.265 72.6814 275.862 cv
72.6814 276.459 73.1658 276.944 73.7629 276.944 cv
74.3601 276.944 74.8445 276.459 74.8445 275.862 cv
@
78.8659 274.766 mo
78.8659 274.168 78.3815 273.684 77.7844 273.684 cv
77.1873 273.684 76.7029 274.168 76.7029 274.766 cv
76.7029 275.363 77.1873 275.846 77.7844 275.846 cv
78.3815 275.846 78.8659 275.363 78.8659 274.766 cv
f
78.8659 274.766 mo
78.8659 274.168 78.3815 273.684 77.7844 273.684 cv
77.1872 273.684 76.7028 274.168 76.7028 274.766 cv
76.7028 275.363 77.1872 275.846 77.7844 275.846 cv
78.3815 275.846 78.8659 275.363 78.8659 274.766 cv
@
82.8873 274.582 mo
82.8873 273.985 82.4022 273.5 81.8058 273.5 cv
81.2087 273.5 80.7243 273.985 80.7243 274.582 cv
80.7243 275.179 81.2087 275.664 81.8058 275.664 cv
82.4022 275.664 82.8873 275.179 82.8873 274.582 cv
f
82.8873 274.582 mo
82.8873 273.985 82.4022 273.501 81.8058 273.501 cv
81.2087 273.501 80.7243 273.985 80.7243 274.582 cv
80.7243 275.179 81.2087 275.664 81.8058 275.664 cv
82.4022 275.664 82.8873 275.179 82.8873 274.582 cv
@
87.0916 276.044 mo
87.0916 275.448 86.6072 274.963 86.0101 274.963 cv
85.4137 274.963 84.9285 275.448 84.9285 276.044 cv
84.9285 276.642 85.4137 277.126 86.0101 277.126 cv
86.6072 277.126 87.0916 276.642 87.0916 276.044 cv
f
87.0916 276.044 mo
87.0916 275.448 86.6072 274.963 86.01 274.963 cv
85.4137 274.963 84.9285 275.448 84.9285 276.044 cv
84.9285 276.641 85.4137 277.126 86.01 277.126 cv
86.6072 277.126 87.0916 276.641 87.0916 276.044 cv
@
91.113 270.743 mo
91.113 270.146 90.6286 269.662 90.0315 269.662 cv
89.4344 269.662 88.95 270.146 88.95 270.743 cv
88.95 271.341 89.4344 271.825 90.0315 271.825 cv
90.6286 271.825 91.113 271.341 91.113 270.743 cv
f
91.113 270.743 mo
91.113 270.146 90.6286 269.662 90.0315 269.662 cv
89.4344 269.662 88.95 270.146 88.95 270.743 cv
88.95 271.341 89.4344 271.825 90.0315 271.825 cv
90.6286 271.825 91.113 271.341 91.113 270.743 cv
@
95.1345 278.238 mo
95.1345 277.642 94.6493 277.156 94.0529 277.156 cv
93.4558 277.156 92.9714 277.642 92.9714 278.238 cv
92.9714 278.835 93.4558 279.319 94.0529 279.319 cv
94.6493 279.319 95.1345 278.835 95.1345 278.238 cv
f
95.1344 278.238 mo
95.1344 277.642 94.6493 277.156 94.0529 277.156 cv
93.4558 277.156 92.9714 277.642 92.9714 278.238 cv
92.9714 278.835 93.4558 279.319 94.0529 279.319 cv
94.6493 279.319 95.1344 278.835 95.1344 278.238 cv
@
99.1559 276.411 mo
99.1559 275.813 98.6715 275.329 98.0744 275.329 cv
97.4772 275.329 96.9928 275.813 96.9928 276.411 cv
96.9928 277.007 97.4772 277.492 98.0744 277.492 cv
98.6715 277.492 99.1559 277.007 99.1559 276.411 cv
f
99.1559 276.411 mo
99.1559 275.813 98.6715 275.329 98.0744 275.329 cv
97.4772 275.329 96.9928 275.813 96.9928 276.411 cv
96.9928 277.007 97.4772 277.492 98.0744 277.492 cv
98.6715 277.492 99.1559 277.007 99.1559 276.411 cv
@
103.36 276.411 mo
103.36 275.813 102.876 275.329 102.279 275.329 cv
101.682 275.329 101.197 275.813 101.197 276.411 cv
101.197 277.007 101.682 277.492 102.279 277.492 cv
102.876 277.492 103.36 277.007 103.36 276.411 cv
f
103.36 276.411 mo
103.36 275.813 102.876 275.329 102.279 275.329 cv
101.681 275.329 101.197 275.813 101.197 276.411 cv
101.197 277.007 101.681 277.492 102.279 277.492 cv
102.876 277.492 103.36 277.007 103.36 276.411 cv
@
107.382 274.125 mo
107.382 273.528 106.897 273.043 106.3 273.043 cv
105.703 273.043 105.218 273.528 105.218 274.125 cv
105.218 274.722 105.703 275.207 106.3 275.207 cv
106.897 275.207 107.382 274.722 107.382 274.125 cv
f
107.382 274.125 mo
107.382 273.528 106.897 273.044 106.3 273.044 cv
105.703 273.044 105.218 273.528 105.218 274.125 cv
105.218 274.722 105.703 275.207 106.3 275.207 cv
106.897 275.207 107.382 274.722 107.382 274.125 cv
@
111.403 281.985 mo
111.403 281.389 110.919 280.904 110.322 280.904 cv
109.724 280.904 109.24 281.389 109.24 281.985 cv
109.24 282.582 109.724 283.067 110.322 283.067 cv
110.919 283.067 111.403 282.582 111.403 281.985 cv
f
111.403 281.985 mo
111.403 281.389 110.919 280.904 110.321 280.904 cv
109.724 280.904 109.24 281.389 109.24 281.985 cv
109.24 282.582 109.724 283.067 110.321 283.067 cv
110.919 283.067 111.403 282.582 111.403 281.985 cv
@
115.424 282.443 mo
115.424 281.845 114.94 281.361 114.343 281.361 cv
113.746 281.361 113.261 281.845 113.261 282.443 cv
113.261 283.039 113.746 283.524 114.343 283.524 cv
114.94 283.524 115.424 283.039 115.424 282.443 cv
f
115.424 282.443 mo
115.424 281.845 114.94 281.361 114.343 281.361 cv
113.746 281.361 113.261 281.845 113.261 282.443 cv
113.261 283.039 113.746 283.524 114.343 283.524 cv
114.94 283.524 115.424 283.039 115.424 282.443 cv
@
119.629 272.114 mo
119.629 271.517 119.144 271.033 118.547 271.033 cv
117.95 271.033 117.466 271.517 117.466 272.114 cv
117.466 272.711 117.95 273.196 118.547 273.196 cv
119.144 273.196 119.629 272.711 119.629 272.114 cv
f
119.629 272.114 mo
119.629 271.517 119.144 271.033 118.547 271.033 cv
117.95 271.033 117.466 271.517 117.466 272.114 cv
117.466 272.711 117.95 273.196 118.547 273.196 cv
119.144 273.196 119.629 272.711 119.629 272.114 cv
@
123.65 283.905 mo
123.65 283.307 123.166 282.824 122.569 282.824 cv
121.972 282.824 121.487 283.307 121.487 283.905 cv
121.487 284.502 121.972 284.986 122.569 284.986 cv
123.166 284.986 123.65 284.502 123.65 283.905 cv
f
123.65 283.905 mo
123.65 283.307 123.166 282.824 122.569 282.824 cv
121.972 282.824 121.487 283.307 121.487 283.905 cv
121.487 284.502 121.972 284.986 122.569 284.986 cv
123.166 284.986 123.65 284.502 123.65 283.905 cv
@
127.672 282.259 mo
127.672 281.662 127.187 281.178 126.59 281.178 cv
125.993 281.178 125.508 281.662 125.508 282.259 cv
125.508 282.857 125.993 283.341 126.59 283.341 cv
127.187 283.341 127.672 282.857 127.672 282.259 cv
f
127.672 282.259 mo
127.672 281.662 127.187 281.178 126.59 281.178 cv
125.993 281.178 125.508 281.662 125.508 282.259 cv
125.508 282.857 125.993 283.341 126.59 283.341 cv
127.187 283.341 127.672 282.857 127.672 282.259 cv
@
131.693 281.712 mo
131.693 281.114 131.208 280.63 130.611 280.63 cv
130.014 280.63 129.53 281.114 129.53 281.712 cv
129.53 282.308 130.014 282.793 130.611 282.793 cv
131.208 282.793 131.693 282.308 131.693 281.712 cv
f
131.693 281.712 mo
131.693 281.114 131.208 280.63 130.611 280.63 cv
130.014 280.63 129.53 281.114 129.53 281.712 cv
129.53 282.308 130.014 282.793 130.611 282.793 cv
131.208 282.793 131.693 282.308 131.693 281.712 cv
@
135.897 283.722 mo
135.897 283.125 135.413 282.64 134.816 282.64 cv
134.219 282.64 133.734 283.125 133.734 283.722 cv
133.734 284.319 134.219 284.803 134.816 284.803 cv
135.413 284.803 135.897 284.319 135.897 283.722 cv
f
135.897 283.722 mo
135.897 283.125 135.413 282.64 134.816 282.64 cv
134.219 282.64 133.734 283.125 133.734 283.722 cv
133.734 284.319 134.219 284.803 134.816 284.803 cv
135.413 284.803 135.897 284.319 135.897 283.722 cv
@
139.919 285.732 mo
139.919 285.136 139.434 284.651 138.837 284.651 cv
138.24 284.651 137.756 285.136 137.756 285.732 cv
137.756 286.329 138.24 286.815 138.837 286.815 cv
139.434 286.815 139.919 286.329 139.919 285.732 cv
f
139.919 285.732 mo
139.919 285.136 139.434 284.651 138.837 284.651 cv
138.24 284.651 137.756 285.136 137.756 285.732 cv
137.756 286.329 138.24 286.815 138.837 286.815 cv
139.434 286.815 139.919 286.329 139.919 285.732 cv
@
143.94 280.341 mo
143.94 279.744 143.456 279.258 142.859 279.258 cv
142.262 279.258 141.777 279.744 141.777 280.341 cv
141.777 280.937 142.262 281.422 142.859 281.422 cv
143.456 281.422 143.94 280.937 143.94 280.341 cv
f
143.94 280.341 mo
143.94 279.744 143.456 279.258 142.859 279.258 cv
142.262 279.258 141.777 279.744 141.777 280.341 cv
141.777 280.937 142.262 281.422 142.859 281.422 cv
143.456 281.422 143.94 280.937 143.94 280.341 cv
@
147.962 283.63 mo
147.962 283.034 147.478 282.549 146.881 282.549 cv
146.283 282.549 145.799 283.034 145.799 283.63 cv
145.799 284.227 146.283 284.712 146.881 284.712 cv
147.478 284.712 147.962 284.227 147.962 283.63 cv
f
147.962 283.63 mo
147.962 283.034 147.478 282.549 146.881 282.549 cv
146.283 282.549 145.799 283.034 145.799 283.63 cv
145.799 284.227 146.283 284.712 146.881 284.712 cv
147.478 284.712 147.962 284.227 147.962 283.63 cv
@
152.166 279.883 mo
152.166 279.287 151.681 278.802 151.084 278.802 cv
150.488 278.802 150.003 279.287 150.003 279.883 cv
150.003 280.48 150.488 280.965 151.084 280.965 cv
151.681 280.965 152.166 280.48 152.166 279.883 cv
f
152.166 279.883 mo
152.166 279.287 151.681 278.801 151.084 278.801 cv
150.488 278.801 150.003 279.287 150.003 279.883 cv
150.003 280.48 150.488 280.965 151.084 280.965 cv
151.681 280.965 152.166 280.48 152.166 279.883 cv
@
34.1731 206.035 mo
34.1731 205.438 33.6887 204.953 33.0916 204.953 cv
32.4944 204.953 32.0093 205.438 32.0093 206.035 cv
32.0093 206.632 32.4944 207.116 33.0916 207.116 cv
33.6887 207.116 34.1731 206.632 34.1731 206.035 cv
.883 .77 0 0 cmyk
f
34.1731 206.035 mo
34.1731 205.438 33.6887 204.953 33.0916 204.953 cv
32.4944 204.953 32.0093 205.438 32.0093 206.035 cv
32.0093 206.632 32.4944 207.116 33.0916 207.116 cv
33.6887 207.116 34.1731 206.632 34.1731 206.035 cv
@
38.2859 210.057 mo
38.2859 209.459 37.8015 208.975 37.2044 208.975 cv
36.6073 208.975 36.1229 209.459 36.1229 210.057 cv
36.1229 210.653 36.6073 211.138 37.2044 211.138 cv
37.8015 211.138 38.2859 210.653 38.2859 210.057 cv
f
38.2859 210.057 mo
38.2859 209.459 37.8015 208.975 37.2044 208.975 cv
36.6073 208.975 36.1229 209.459 36.1229 210.057 cv
36.1229 210.653 36.6073 211.138 37.2044 211.138 cv
37.8015 211.138 38.2859 210.653 38.2859 210.057 cv
@
42.3074 213.896 mo
42.3074 213.298 41.823 212.813 41.2258 212.813 cv
40.6287 212.813 40.1443 213.298 40.1443 213.896 cv
40.1443 214.492 40.6287 214.977 41.2258 214.977 cv
41.823 214.977 42.3074 214.492 42.3074 213.896 cv
f
42.3074 213.896 mo
42.3074 213.298 41.823 212.813 41.2258 212.813 cv
40.6287 212.813 40.1443 213.298 40.1443 213.896 cv
40.1443 214.492 40.6287 214.977 41.2258 214.977 cv
41.823 214.977 42.3074 214.492 42.3074 213.896 cv
@
46.3288 222.304 mo
46.3288 221.706 45.8436 221.222 45.2473 221.222 cv
44.6502 221.222 44.1658 221.706 44.1658 222.304 cv
44.1658 222.9 44.6502 223.386 45.2473 223.386 cv
45.8436 223.386 46.3288 222.9 46.3288 222.304 cv
f
46.3288 222.304 mo
46.3288 221.706 45.8436 221.222 45.2473 221.222 cv
44.6502 221.222 44.1657 221.706 44.1657 222.304 cv
44.1657 222.9 44.6502 223.386 45.2473 223.386 cv
45.8436 223.386 46.3288 222.9 46.3288 222.304 cv
@
50.3495 229.798 mo
50.3495 229.201 49.8658 228.717 49.268 228.717 cv
48.6716 228.717 48.1872 229.201 48.1872 229.798 cv
48.1872 230.395 48.6716 230.879 49.268 230.879 cv
49.8658 230.879 50.3495 230.395 50.3495 229.798 cv
f
50.3495 229.798 mo
50.3495 229.201 49.8658 228.717 49.2679 228.717 cv
48.6716 228.717 48.1872 229.201 48.1872 229.798 cv
48.1872 230.395 48.6716 230.879 49.2679 230.879 cv
49.8658 230.879 50.3495 230.395 50.3495 229.798 cv
@
54.5545 229.798 mo
54.5545 229.201 54.0701 228.717 53.4729 228.717 cv
52.8758 228.717 52.3914 229.201 52.3914 229.798 cv
52.3914 230.395 52.8758 230.879 53.4729 230.879 cv
54.0701 230.879 54.5545 230.395 54.5545 229.798 cv
f
54.5545 229.798 mo
54.5545 229.201 54.0701 228.717 53.4729 228.717 cv
52.8758 228.717 52.3914 229.201 52.3914 229.798 cv
52.3914 230.395 52.8758 230.879 53.4729 230.879 cv
54.0701 230.879 54.5545 230.395 54.5545 229.798 cv
@
58.5759 228.336 mo
58.5759 227.738 58.0908 227.255 57.4944 227.255 cv
56.8973 227.255 56.4129 227.738 56.4129 228.336 cv
56.4129 228.933 56.8973 229.417 57.4944 229.417 cv
58.0908 229.417 58.5759 228.933 58.5759 228.336 cv
f
58.5759 228.336 mo
58.5759 227.738 58.0907 227.255 57.4944 227.255 cv
56.8973 227.255 56.4129 227.738 56.4129 228.336 cv
56.4129 228.933 56.8973 229.417 57.4944 229.417 cv
58.0907 229.417 58.5759 228.933 58.5759 228.336 cv
@
62.5966 233.637 mo
62.5966 233.039 62.1129 232.556 61.5158 232.556 cv
60.9187 232.556 60.4343 233.039 60.4343 233.637 cv
60.4343 234.234 60.9187 234.718 61.5158 234.718 cv
62.1129 234.718 62.5966 234.234 62.5966 233.637 cv
f
62.5966 233.637 mo
62.5966 233.039 62.1129 232.556 61.5158 232.556 cv
60.9187 232.556 60.4343 233.039 60.4343 233.637 cv
60.4343 234.234 60.9187 234.718 61.5158 234.718 cv
62.1129 234.718 62.5966 234.234 62.5966 233.637 cv
@
66.6196 245.427 mo
66.6196 244.83 66.1344 244.345 65.5373 244.345 cv
64.9401 244.345 64.4557 244.83 64.4557 245.427 cv
64.4557 246.024 64.9401 246.508 65.5373 246.508 cv
66.1344 246.508 66.6196 246.024 66.6196 245.427 cv
f
66.6195 245.427 mo
66.6195 244.83 66.1344 244.345 65.5373 244.345 cv
64.9401 244.345 64.4557 244.83 64.4557 245.427 cv
64.4557 246.024 64.9401 246.508 65.5373 246.508 cv
66.1344 246.508 66.6195 246.024 66.6195 245.427 cv
@
70.823 245.427 mo
70.823 244.83 70.3386 244.345 69.7415 244.345 cv
69.1444 244.345 68.66 244.83 68.66 245.427 cv
68.66 246.024 69.1444 246.508 69.7415 246.508 cv
70.3386 246.508 70.823 246.024 70.823 245.427 cv
f
70.823 245.427 mo
70.823 244.83 70.3386 244.345 69.7415 244.345 cv
69.1444 244.345 68.66 244.83 68.66 245.427 cv
68.66 246.024 69.1444 246.508 69.7415 246.508 cv
70.3386 246.508 70.823 246.024 70.823 245.427 cv
@
74.8445 246.615 mo
74.8445 246.018 74.3601 245.534 73.7629 245.534 cv
73.1658 245.534 72.6814 246.018 72.6814 246.615 cv
72.6814 247.212 73.1658 247.696 73.7629 247.696 cv
74.3601 247.696 74.8445 247.212 74.8445 246.615 cv
f
74.8445 246.615 mo
74.8445 246.018 74.3601 245.534 73.7629 245.534 cv
73.1658 245.534 72.6814 246.018 72.6814 246.615 cv
72.6814 247.212 73.1658 247.696 73.7629 247.696 cv
74.3601 247.696 74.8445 247.212 74.8445 246.615 cv
@
78.8659 249.082 mo
78.8659 248.486 78.3815 248.001 77.7844 248.001 cv
77.1873 248.001 76.7029 248.486 76.7029 249.082 cv
76.7029 249.68 77.1873 250.164 77.7844 250.164 cv
78.3815 250.164 78.8659 249.68 78.8659 249.082 cv
f
78.8659 249.082 mo
78.8659 248.486 78.3815 248.001 77.7844 248.001 cv
77.1872 248.001 76.7028 248.486 76.7028 249.082 cv
76.7028 249.68 77.1872 250.164 77.7844 250.164 cv
78.3815 250.164 78.8659 249.68 78.8659 249.082 cv
@
82.8873 252.281 mo
82.8873 251.685 82.4022 251.2 81.8058 251.2 cv
81.2087 251.2 80.7243 251.685 80.7243 252.281 cv
80.7243 252.878 81.2087 253.363 81.8058 253.363 cv
82.4022 253.363 82.8873 252.878 82.8873 252.281 cv
f
82.8873 252.281 mo
82.8873 251.685 82.4022 251.2 81.8058 251.2 cv
81.2087 251.2 80.7243 251.685 80.7243 252.281 cv
80.7243 252.879 81.2087 253.363 81.8058 253.363 cv
82.4022 253.363 82.8873 252.879 82.8873 252.281 cv
@
87.0916 254.109 mo
87.0916 253.512 86.6072 253.028 86.0101 253.028 cv
85.4137 253.028 84.9285 253.512 84.9285 254.109 cv
84.9285 254.706 85.4137 255.191 86.0101 255.191 cv
86.6072 255.191 87.0916 254.706 87.0916 254.109 cv
f
87.0916 254.109 mo
87.0916 253.512 86.6072 253.028 86.01 253.028 cv
85.4137 253.028 84.9285 253.512 84.9285 254.109 cv
84.9285 254.706 85.4137 255.191 86.01 255.191 cv
86.6072 255.191 87.0916 254.706 87.0916 254.109 cv
@
91.113 253.744 mo
91.113 253.147 90.6286 252.662 90.0315 252.662 cv
89.4344 252.662 88.95 253.147 88.95 253.744 cv
88.95 254.341 89.4344 254.825 90.0315 254.825 cv
90.6286 254.825 91.113 254.341 91.113 253.744 cv
f
91.113 253.744 mo
91.113 253.147 90.6286 252.662 90.0315 252.662 cv
89.4344 252.662 88.95 253.147 88.95 253.744 cv
88.95 254.341 89.4344 254.825 90.0315 254.825 cv
90.6286 254.825 91.113 254.341 91.113 253.744 cv
@
95.1345 258.679 mo
95.1345 258.082 94.6493 257.598 94.0529 257.598 cv
93.4558 257.598 92.9714 258.082 92.9714 258.679 cv
92.9714 259.276 93.4558 259.76 94.0529 259.76 cv
94.6493 259.76 95.1345 259.276 95.1345 258.679 cv
f
95.1344 258.679 mo
95.1344 258.082 94.6493 257.598 94.0529 257.598 cv
93.4558 257.598 92.9714 258.082 92.9714 258.679 cv
92.9714 259.276 93.4558 259.761 94.0529 259.761 cv
94.6493 259.761 95.1344 259.276 95.1344 258.679 cv
@
99.1559 256.668 mo
99.1559 256.072 98.6715 255.587 98.0744 255.587 cv
97.4772 255.587 96.9928 256.072 96.9928 256.668 cv
96.9928 257.265 97.4772 257.75 98.0744 257.75 cv
98.6715 257.75 99.1559 257.265 99.1559 256.668 cv
f
99.1559 256.668 mo
99.1559 256.072 98.6715 255.587 98.0744 255.587 cv
97.4772 255.587 96.9928 256.072 96.9928 256.668 cv
96.9928 257.265 97.4772 257.75 98.0744 257.75 cv
98.6715 257.75 99.1559 257.265 99.1559 256.668 cv
@
103.36 258.04 mo
103.36 257.442 102.876 256.958 102.279 256.958 cv
101.682 256.958 101.197 257.442 101.197 258.04 cv
101.197 258.636 101.682 259.121 102.279 259.121 cv
102.876 259.121 103.36 258.636 103.36 258.04 cv
f
103.36 258.04 mo
103.36 257.442 102.876 256.959 102.279 256.959 cv
101.681 256.959 101.197 257.442 101.197 258.04 cv
101.197 258.636 101.681 259.121 102.279 259.121 cv
102.876 259.121 103.36 258.636 103.36 258.04 cv
@
107.382 256.578 mo
107.382 255.98 106.897 255.495 106.3 255.495 cv
105.703 255.495 105.218 255.98 105.218 256.578 cv
105.218 257.174 105.703 257.659 106.3 257.659 cv
106.897 257.659 107.382 257.174 107.382 256.578 cv
f
107.382 256.578 mo
107.382 255.98 106.897 255.495 106.3 255.495 cv
105.703 255.495 105.218 255.98 105.218 256.578 cv
105.218 257.174 105.703 257.659 106.3 257.659 cv
106.897 257.659 107.382 257.174 107.382 256.578 cv
@
111.403 257.765 mo
111.403 257.168 110.919 256.684 110.322 256.684 cv
109.724 256.684 109.24 257.168 109.24 257.765 cv
109.24 258.362 109.724 258.847 110.322 258.847 cv
110.919 258.847 111.403 258.362 111.403 257.765 cv
f
111.403 257.765 mo
111.403 257.168 110.919 256.684 110.321 256.684 cv
109.724 256.684 109.24 257.168 109.24 257.765 cv
109.24 258.362 109.724 258.847 110.321 258.847 cv
110.919 258.847 111.403 258.362 111.403 257.765 cv
@
115.424 260.964 mo
115.424 260.367 114.94 259.882 114.343 259.882 cv
113.746 259.882 113.261 260.367 113.261 260.964 cv
113.261 261.561 113.746 262.045 114.343 262.045 cv
114.94 262.045 115.424 261.561 115.424 260.964 cv
f
115.424 260.964 mo
115.424 260.367 114.94 259.882 114.343 259.882 cv
113.746 259.882 113.261 260.367 113.261 260.964 cv
113.261 261.561 113.746 262.046 114.343 262.046 cv
114.94 262.046 115.424 261.561 115.424 260.964 cv
@
119.629 261.238 mo
119.629 260.642 119.144 260.157 118.547 260.157 cv
117.95 260.157 117.466 260.642 117.466 261.238 cv
117.466 261.835 117.95 262.32 118.547 262.32 cv
119.144 262.32 119.629 261.835 119.629 261.238 cv
f
119.629 261.238 mo
119.629 260.642 119.144 260.157 118.547 260.157 cv
117.95 260.157 117.466 260.642 117.466 261.238 cv
117.466 261.835 117.95 262.32 118.547 262.32 cv
119.144 262.32 119.629 261.835 119.629 261.238 cv
@
123.65 263.523 mo
123.65 262.927 123.166 262.441 122.569 262.441 cv
121.972 262.441 121.487 262.927 121.487 263.523 cv
121.487 264.12 121.972 264.605 122.569 264.605 cv
123.166 264.605 123.65 264.12 123.65 263.523 cv
f
123.65 263.523 mo
123.65 262.927 123.166 262.442 122.569 262.442 cv
121.972 262.442 121.487 262.927 121.487 263.523 cv
121.487 264.12 121.972 264.605 122.569 264.605 cv
123.166 264.605 123.65 264.12 123.65 263.523 cv
@
127.672 261.512 mo
127.672 260.915 127.187 260.431 126.59 260.431 cv
125.993 260.431 125.508 260.915 125.508 261.512 cv
125.508 262.109 125.993 262.594 126.59 262.594 cv
127.187 262.594 127.672 262.109 127.672 261.512 cv
f
127.672 261.512 mo
127.672 260.915 127.187 260.431 126.59 260.431 cv
125.993 260.431 125.508 260.915 125.508 261.512 cv
125.508 262.109 125.993 262.594 126.59 262.594 cv
127.187 262.594 127.672 262.109 127.672 261.512 cv
@
131.693 263.341 mo
131.693 262.743 131.208 262.259 130.611 262.259 cv
130.014 262.259 129.53 262.743 129.53 263.341 cv
129.53 263.937 130.014 264.422 130.611 264.422 cv
131.208 264.422 131.693 263.937 131.693 263.341 cv
f
131.693 263.341 mo
131.693 262.743 131.208 262.26 130.611 262.26 cv
130.014 262.26 129.53 262.743 129.53 263.341 cv
129.53 263.937 130.014 264.422 130.611 264.422 cv
131.208 264.422 131.693 263.937 131.693 263.341 cv
@
135.897 262.883 mo
135.897 262.287 135.413 261.802 134.816 261.802 cv
134.219 261.802 133.734 262.287 133.734 262.883 cv
133.734 263.48 134.219 263.965 134.816 263.965 cv
135.413 263.965 135.897 263.48 135.897 262.883 cv
f
135.897 262.883 mo
135.897 262.287 135.413 261.802 134.816 261.802 cv
134.219 261.802 133.734 262.287 133.734 262.883 cv
133.734 263.48 134.219 263.965 134.816 263.965 cv
135.413 263.965 135.897 263.48 135.897 262.883 cv
@
139.919 265.351 mo
139.919 264.754 139.434 264.269 138.837 264.269 cv
138.24 264.269 137.756 264.754 137.756 265.351 cv
137.756 265.948 138.24 266.432 138.837 266.432 cv
139.434 266.432 139.919 265.948 139.919 265.351 cv
f
139.919 265.351 mo
139.919 264.754 139.434 264.27 138.837 264.27 cv
138.24 264.27 137.756 264.754 137.756 265.351 cv
137.756 265.948 138.24 266.432 138.837 266.432 cv
139.434 266.432 139.919 265.948 139.919 265.351 cv
@
143.94 263.432 mo
143.94 262.835 143.456 262.35 142.859 262.35 cv
142.262 262.35 141.777 262.835 141.777 263.432 cv
141.777 264.029 142.262 264.514 142.859 264.514 cv
143.456 264.514 143.94 264.029 143.94 263.432 cv
f
143.94 263.432 mo
143.94 262.835 143.456 262.35 142.859 262.35 cv
142.262 262.35 141.777 262.835 141.777 263.432 cv
141.777 264.029 142.262 264.514 142.859 264.514 cv
143.456 264.514 143.94 264.029 143.94 263.432 cv
@
147.962 269.098 mo
147.962 268.501 147.478 268.017 146.881 268.017 cv
146.283 268.017 145.799 268.501 145.799 269.098 cv
145.799 269.695 146.283 270.18 146.881 270.18 cv
147.478 270.18 147.962 269.695 147.962 269.098 cv
f
147.962 269.098 mo
147.962 268.501 147.478 268.017 146.881 268.017 cv
146.283 268.017 145.799 268.501 145.799 269.098 cv
145.799 269.695 146.283 270.18 146.881 270.18 cv
147.478 270.18 147.962 269.695 147.962 269.098 cv
@
152.166 264.346 mo
152.166 263.749 151.681 263.264 151.084 263.264 cv
150.488 263.264 150.003 263.749 150.003 264.346 cv
150.003 264.943 150.488 265.427 151.084 265.427 cv
151.681 265.427 152.166 264.943 152.166 264.346 cv
f
152.166 264.346 mo
152.166 263.749 151.681 263.264 151.084 263.264 cv
150.488 263.264 150.003 263.749 150.003 264.346 cv
150.003 264.943 150.488 265.427 151.084 265.427 cv
151.681 265.427 152.166 264.943 152.166 264.346 cv
@
34.1731 238.389 mo
34.1731 237.793 33.6887 237.307 33.0916 237.307 cv
32.4944 237.307 32.0093 237.793 32.0093 238.389 cv
32.0093 238.986 32.4944 239.471 33.0916 239.471 cv
33.6887 239.471 34.1731 238.986 34.1731 238.389 cv
0 .988 1 0 cmyk
f
34.1731 238.389 mo
34.1731 237.793 33.6887 237.308 33.0916 237.308 cv
32.4944 237.308 32.0093 237.793 32.0093 238.389 cv
32.0093 238.986 32.4944 239.471 33.0916 239.471 cv
33.6887 239.471 34.1731 238.986 34.1731 238.389 cv
@
38.2859 238.572 mo
38.2859 237.975 37.8015 237.49 37.2044 237.49 cv
36.6073 237.49 36.1229 237.975 36.1229 238.572 cv
36.1229 239.169 36.6073 239.653 37.2044 239.653 cv
37.8015 239.653 38.2859 239.169 38.2859 238.572 cv
f
38.2859 238.572 mo
38.2859 237.976 37.8015 237.49 37.2044 237.49 cv
36.6073 237.49 36.1229 237.976 36.1229 238.572 cv
36.1229 239.169 36.6073 239.653 37.2044 239.653 cv
37.8015 239.653 38.2859 239.169 38.2859 238.572 cv
@
42.3074 244.878 mo
42.3074 244.281 41.823 243.797 41.2258 243.797 cv
40.6287 243.797 40.1443 244.281 40.1443 244.878 cv
40.1443 245.475 40.6287 245.96 41.2258 245.96 cv
41.823 245.96 42.3074 245.475 42.3074 244.878 cv
f
42.3074 244.878 mo
42.3074 244.281 41.823 243.797 41.2258 243.797 cv
40.6287 243.797 40.1443 244.281 40.1443 244.878 cv
40.1443 245.475 40.6287 245.96 41.2258 245.96 cv
41.823 245.96 42.3074 245.475 42.3074 244.878 cv
@
46.3288 245.884 mo
46.3288 245.286 45.8436 244.802 45.2473 244.802 cv
44.6502 244.802 44.1658 245.286 44.1658 245.884 cv
44.1658 246.481 44.6502 246.966 45.2473 246.966 cv
45.8436 246.966 46.3288 246.481 46.3288 245.884 cv
f
46.3288 245.884 mo
46.3288 245.286 45.8436 244.802 45.2473 244.802 cv
44.6502 244.802 44.1657 245.286 44.1657 245.884 cv
44.1657 246.481 44.6502 246.966 45.2473 246.966 cv
45.8436 246.966 46.3288 246.481 46.3288 245.884 cv
@
50.3495 252.099 mo
50.3495 251.502 49.8658 251.017 49.268 251.017 cv
48.6716 251.017 48.1872 251.502 48.1872 252.099 cv
48.1872 252.696 48.6716 253.18 49.268 253.18 cv
49.8658 253.18 50.3495 252.696 50.3495 252.099 cv
f
50.3495 252.099 mo
50.3495 251.502 49.8658 251.017 49.2679 251.017 cv
48.6716 251.017 48.1872 251.502 48.1872 252.099 cv
48.1872 252.696 48.6716 253.18 49.2679 253.18 cv
49.8658 253.18 50.3495 252.696 50.3495 252.099 cv
@
54.5545 253.104 mo
54.5545 252.507 54.0701 252.022 53.4729 252.022 cv
52.8758 252.022 52.3914 252.507 52.3914 253.104 cv
52.3914 253.701 52.8758 254.185 53.4729 254.185 cv
54.0701 254.185 54.5545 253.701 54.5545 253.104 cv
f
54.5545 253.104 mo
54.5545 252.507 54.0701 252.022 53.4729 252.022 cv
52.8758 252.022 52.3914 252.507 52.3914 253.104 cv
52.3914 253.701 52.8758 254.185 53.4729 254.185 cv
54.0701 254.185 54.5545 253.701 54.5545 253.104 cv
@
58.5759 256.303 mo
58.5759 255.706 58.0908 255.221 57.4944 255.221 cv
56.8973 255.221 56.4129 255.706 56.4129 256.303 cv
56.4129 256.9 56.8973 257.384 57.4944 257.384 cv
58.0908 257.384 58.5759 256.9 58.5759 256.303 cv
f
58.5759 256.303 mo
58.5759 255.706 58.0907 255.221 57.4944 255.221 cv
56.8973 255.221 56.4129 255.706 56.4129 256.303 cv
56.4129 256.9 56.8973 257.384 57.4944 257.384 cv
58.0907 257.384 58.5759 256.9 58.5759 256.303 cv
@
62.5966 258.679 mo
62.5966 258.082 62.1129 257.598 61.5158 257.598 cv
60.9187 257.598 60.4343 258.082 60.4343 258.679 cv
60.4343 259.276 60.9187 259.76 61.5158 259.76 cv
62.1129 259.76 62.5966 259.276 62.5966 258.679 cv
f
62.5966 258.679 mo
62.5966 258.082 62.1129 257.598 61.5158 257.598 cv
60.9187 257.598 60.4343 258.082 60.4343 258.679 cv
60.4343 259.276 60.9187 259.761 61.5158 259.761 cv
62.1129 259.761 62.5966 259.276 62.5966 258.679 cv
@
66.6196 260.05 mo
66.6196 259.453 66.1344 258.968 65.5373 258.968 cv
64.9401 258.968 64.4557 259.453 64.4557 260.05 cv
64.4557 260.647 64.9401 261.132 65.5373 261.132 cv
66.1344 261.132 66.6196 260.647 66.6196 260.05 cv
f
66.6195 260.05 mo
66.6195 259.453 66.1344 258.968 65.5373 258.968 cv
64.9401 258.968 64.4557 259.453 64.4557 260.05 cv
64.4557 260.647 64.9401 261.132 65.5373 261.132 cv
66.1344 261.132 66.6195 260.647 66.6195 260.05 cv
@
70.823 261.879 mo
70.823 261.281 70.3386 260.796 69.7415 260.796 cv
69.1444 260.796 68.66 261.281 68.66 261.879 cv
68.66 262.475 69.1444 262.96 69.7415 262.96 cv
70.3386 262.96 70.823 262.475 70.823 261.879 cv
f
70.823 261.879 mo
70.823 261.281 70.3386 260.796 69.7415 260.796 cv
69.1444 260.796 68.66 261.281 68.66 261.879 cv
68.66 262.475 69.1444 262.96 69.7415 262.96 cv
70.3386 262.96 70.823 262.475 70.823 261.879 cv
@
74.8445 265.351 mo
74.8445 264.754 74.3601 264.269 73.7629 264.269 cv
73.1658 264.269 72.6814 264.754 72.6814 265.351 cv
72.6814 265.948 73.1658 266.432 73.7629 266.432 cv
74.3601 266.432 74.8445 265.948 74.8445 265.351 cv
f
74.8445 265.351 mo
74.8445 264.754 74.3601 264.27 73.7629 264.27 cv
73.1658 264.27 72.6814 264.754 72.6814 265.351 cv
72.6814 265.948 73.1658 266.432 73.7629 266.432 cv
74.3601 266.432 74.8445 265.948 74.8445 265.351 cv
@
78.8659 264.62 mo
78.8659 264.023 78.3815 263.538 77.7844 263.538 cv
77.1873 263.538 76.7029 264.023 76.7029 264.62 cv
76.7029 265.217 77.1873 265.701 77.7844 265.701 cv
78.3815 265.701 78.8659 265.217 78.8659 264.62 cv
f
78.8659 264.62 mo
78.8659 264.023 78.3815 263.538 77.7844 263.538 cv
77.1872 263.538 76.7028 264.023 76.7028 264.62 cv
76.7028 265.217 77.1872 265.701 77.7844 265.701 cv
78.3815 265.701 78.8659 265.217 78.8659 264.62 cv
@
82.8873 265.442 mo
82.8873 264.845 82.4022 264.361 81.8058 264.361 cv
81.2087 264.361 80.7243 264.845 80.7243 265.442 cv
80.7243 266.039 81.2087 266.524 81.8058 266.524 cv
82.4022 266.524 82.8873 266.039 82.8873 265.442 cv
f
82.8873 265.442 mo
82.8873 264.845 82.4022 264.361 81.8058 264.361 cv
81.2087 264.361 80.7243 264.845 80.7243 265.442 cv
80.7243 266.04 81.2087 266.524 81.8058 266.524 cv
82.4022 266.524 82.8873 266.04 82.8873 265.442 cv
@
87.0916 263.614 mo
87.0916 263.018 86.6072 262.533 86.0101 262.533 cv
85.4137 262.533 84.9285 263.018 84.9285 263.614 cv
84.9285 264.211 85.4137 264.696 86.0101 264.696 cv
86.6072 264.696 87.0916 264.211 87.0916 263.614 cv
f
87.0916 263.614 mo
87.0916 263.018 86.6072 262.533 86.01 262.533 cv
85.4137 262.533 84.9285 263.018 84.9285 263.614 cv
84.9285 264.212 85.4137 264.696 86.01 264.696 cv
86.6072 264.696 87.0916 264.212 87.0916 263.614 cv
@
91.113 265.442 mo
91.113 264.845 90.6286 264.361 90.0315 264.361 cv
89.4344 264.361 88.95 264.845 88.95 265.442 cv
88.95 266.039 89.4344 266.524 90.0315 266.524 cv
90.6286 266.524 91.113 266.039 91.113 265.442 cv
f
91.113 265.442 mo
91.113 264.845 90.6286 264.361 90.0315 264.361 cv
89.4344 264.361 88.95 264.845 88.95 265.442 cv
88.95 266.04 89.4344 266.524 90.0315 266.524 cv
90.6286 266.524 91.113 266.04 91.113 265.442 cv
@
95.1345 269.829 mo
95.1345 269.232 94.6493 268.748 94.0529 268.748 cv
93.4558 268.748 92.9714 269.232 92.9714 269.829 cv
92.9714 270.427 93.4558 270.911 94.0529 270.911 cv
94.6493 270.911 95.1345 270.427 95.1345 269.829 cv
f
95.1344 269.829 mo
95.1344 269.232 94.6493 268.748 94.0529 268.748 cv
93.4558 268.748 92.9714 269.232 92.9714 269.829 cv
92.9714 270.427 93.4558 270.911 94.0529 270.911 cv
94.6493 270.911 95.1344 270.427 95.1344 269.829 cv
@
99.1559 269.647 mo
99.1559 269.05 98.6715 268.565 98.0744 268.565 cv
97.4772 268.565 96.9928 269.05 96.9928 269.647 cv
96.9928 270.244 97.4772 270.728 98.0744 270.728 cv
98.6715 270.728 99.1559 270.244 99.1559 269.647 cv
f
99.1559 269.647 mo
99.1559 269.05 98.6715 268.565 98.0744 268.565 cv
97.4772 268.565 96.9928 269.05 96.9928 269.647 cv
96.9928 270.244 97.4772 270.728 98.0744 270.728 cv
98.6715 270.728 99.1559 270.244 99.1559 269.647 cv
@
103.36 268.915 mo
103.36 268.319 102.876 267.834 102.279 267.834 cv
101.682 267.834 101.197 268.319 101.197 268.915 cv
101.197 269.513 101.682 269.997 102.279 269.997 cv
102.876 269.997 103.36 269.513 103.36 268.915 cv
f
103.36 268.915 mo
103.36 268.319 102.876 267.834 102.279 267.834 cv
101.681 267.834 101.197 268.319 101.197 268.915 cv
101.197 269.513 101.681 269.997 102.279 269.997 cv
102.876 269.997 103.36 269.513 103.36 268.915 cv
@
107.382 268.824 mo
107.382 268.228 106.897 267.742 106.3 267.742 cv
105.703 267.742 105.218 268.228 105.218 268.824 cv
105.218 269.421 105.703 269.905 106.3 269.905 cv
106.897 269.905 107.382 269.421 107.382 268.824 cv
f
107.382 268.824 mo
107.382 268.228 106.897 267.743 106.3 267.743 cv
105.703 267.743 105.218 268.228 105.218 268.824 cv
105.218 269.421 105.703 269.906 106.3 269.906 cv
106.897 269.906 107.382 269.421 107.382 268.824 cv
@
111.403 269.738 mo
111.403 269.142 110.919 268.656 110.322 268.656 cv
109.724 268.656 109.24 269.142 109.24 269.738 cv
109.24 270.335 109.724 270.819 110.322 270.819 cv
110.919 270.819 111.403 270.335 111.403 269.738 cv
f
111.403 269.738 mo
111.403 269.142 110.919 268.656 110.321 268.656 cv
109.724 268.656 109.24 269.142 109.24 269.738 cv
109.24 270.335 109.724 270.82 110.321 270.82 cv
110.919 270.82 111.403 270.335 111.403 269.738 cv
@
115.424 266.722 mo
115.424 266.125 114.94 265.64 114.343 265.64 cv
113.746 265.64 113.261 266.125 113.261 266.722 cv
113.261 267.319 113.746 267.803 114.343 267.803 cv
114.94 267.803 115.424 267.319 115.424 266.722 cv
f
115.424 266.722 mo
115.424 266.126 114.94 265.64 114.343 265.64 cv
113.746 265.64 113.261 266.126 113.261 266.722 cv
113.261 267.319 113.746 267.803 114.343 267.803 cv
114.94 267.803 115.424 267.319 115.424 266.722 cv
@
119.629 274.766 mo
119.629 274.168 119.144 273.684 118.547 273.684 cv
117.95 273.684 117.466 274.168 117.466 274.766 cv
117.466 275.363 117.95 275.846 118.547 275.846 cv
119.144 275.846 119.629 275.363 119.629 274.766 cv
f
119.629 274.766 mo
119.629 274.168 119.144 273.684 118.547 273.684 cv
117.95 273.684 117.466 274.168 117.466 274.766 cv
117.466 275.363 117.95 275.846 118.547 275.846 cv
119.144 275.846 119.629 275.363 119.629 274.766 cv
@
123.65 273.303 mo
123.65 272.705 123.166 272.221 122.569 272.221 cv
121.972 272.221 121.487 272.705 121.487 273.303 cv
121.487 273.9 121.972 274.385 122.569 274.385 cv
123.166 274.385 123.65 273.9 123.65 273.303 cv
f
123.65 273.303 mo
123.65 272.705 123.166 272.221 122.569 272.221 cv
121.972 272.221 121.487 272.705 121.487 273.303 cv
121.487 273.9 121.972 274.385 122.569 274.385 cv
123.166 274.385 123.65 273.9 123.65 273.303 cv
@
127.672 271.657 mo
127.672 271.06 127.187 270.577 126.59 270.577 cv
125.993 270.577 125.508 271.06 125.508 271.657 cv
125.508 272.254 125.993 272.739 126.59 272.739 cv
127.187 272.739 127.672 272.254 127.672 271.657 cv
f
127.672 271.657 mo
127.672 271.06 127.187 270.577 126.59 270.577 cv
125.993 270.577 125.508 271.06 125.508 271.657 cv
125.508 272.254 125.993 272.739 126.59 272.739 cv
127.187 272.739 127.672 272.254 127.672 271.657 cv
@
131.693 270.196 mo
131.693 269.598 131.208 269.114 130.611 269.114 cv
130.014 269.114 129.53 269.598 129.53 270.196 cv
129.53 270.792 130.014 271.276 130.611 271.276 cv
131.208 271.276 131.693 270.792 131.693 270.196 cv
f
131.693 270.196 mo
131.693 269.598 131.208 269.114 130.611 269.114 cv
130.014 269.114 129.53 269.598 129.53 270.196 cv
129.53 270.792 130.014 271.277 130.611 271.277 cv
131.208 271.277 131.693 270.792 131.693 270.196 cv
@
135.897 271.474 mo
135.897 270.877 135.413 270.393 134.816 270.393 cv
134.219 270.393 133.734 270.877 133.734 271.474 cv
133.734 272.072 134.219 272.556 134.816 272.556 cv
135.413 272.556 135.897 272.072 135.897 271.474 cv
f
135.897 271.475 mo
135.897 270.877 135.413 270.393 134.816 270.393 cv
134.219 270.393 133.734 270.877 133.734 271.475 cv
133.734 272.072 134.219 272.556 134.816 272.556 cv
135.413 272.556 135.897 272.072 135.897 271.475 cv
@
139.919 274.216 mo
139.919 273.62 139.434 273.135 138.837 273.135 cv
138.24 273.135 137.756 273.62 137.756 274.216 cv
137.756 274.814 138.24 275.299 138.837 275.299 cv
139.434 275.299 139.919 274.814 139.919 274.216 cv
f
139.919 274.216 mo
139.919 273.62 139.434 273.135 138.837 273.135 cv
138.24 273.135 137.756 273.62 137.756 274.216 cv
137.756 274.814 138.24 275.299 138.837 275.299 cv
139.434 275.299 139.919 274.814 139.919 274.216 cv
@
143.94 271.109 mo
143.94 270.513 143.456 270.027 142.859 270.027 cv
142.262 270.027 141.777 270.513 141.777 271.109 cv
141.777 271.706 142.262 272.19 142.859 272.19 cv
143.456 272.19 143.94 271.706 143.94 271.109 cv
f
143.94 271.109 mo
143.94 270.513 143.456 270.027 142.859 270.027 cv
142.262 270.027 141.777 270.513 141.777 271.109 cv
141.777 271.706 142.262 272.19 142.859 272.19 cv
143.456 272.19 143.94 271.706 143.94 271.109 cv
@
147.962 273.851 mo
147.962 273.254 147.478 272.769 146.881 272.769 cv
146.283 272.769 145.799 273.254 145.799 273.851 cv
145.799 274.448 146.283 274.932 146.881 274.932 cv
147.478 274.932 147.962 274.448 147.962 273.851 cv
f
147.962 273.851 mo
147.962 273.254 147.478 272.769 146.881 272.769 cv
146.283 272.769 145.799 273.254 145.799 273.851 cv
145.799 274.448 146.283 274.932 146.881 274.932 cv
147.478 274.932 147.962 274.448 147.962 273.851 cv
@
152.166 266.173 mo
152.166 265.576 151.681 265.092 151.084 265.092 cv
150.488 265.092 150.003 265.576 150.003 266.173 cv
150.003 266.771 150.488 267.255 151.084 267.255 cv
151.681 267.255 152.166 266.771 152.166 266.173 cv
f
152.166 266.174 mo
152.166 265.576 151.681 265.092 151.084 265.092 cv
150.488 265.092 150.003 265.576 150.003 266.174 cv
150.003 266.771 150.488 267.255 151.084 267.255 cv
151.681 267.255 152.166 266.771 152.166 266.174 cv
@
34.1731 228.427 mo
34.1731 227.83 33.6887 227.345 33.0916 227.345 cv
32.4944 227.345 32.0093 227.83 32.0093 228.427 cv
32.0093 229.024 32.4944 229.509 33.0916 229.509 cv
33.6887 229.509 34.1731 229.024 34.1731 228.427 cv
.836 .211 1 .082 cmyk
f
34.1731 228.427 mo
34.1731 227.83 33.6887 227.345 33.0916 227.345 cv
32.4944 227.345 32.0093 227.83 32.0093 228.427 cv
32.0093 229.024 32.4944 229.509 33.0916 229.509 cv
33.6887 229.509 34.1731 229.024 34.1731 228.427 cv
@
38.2859 230.712 mo
38.2859 230.115 37.8015 229.63 37.2044 229.63 cv
36.6073 229.63 36.1229 230.115 36.1229 230.712 cv
36.1229 231.309 36.6073 231.794 37.2044 231.794 cv
37.8015 231.794 38.2859 231.309 38.2859 230.712 cv
f
38.2859 230.712 mo
38.2859 230.115 37.8015 229.63 37.2044 229.63 cv
36.6073 229.63 36.1229 230.115 36.1229 230.712 cv
36.1229 231.309 36.6073 231.794 37.2044 231.794 cv
37.8015 231.794 38.2859 231.309 38.2859 230.712 cv
@
42.3074 228.518 mo
42.3074 227.922 41.823 227.437 41.2258 227.437 cv
40.6287 227.437 40.1443 227.922 40.1443 228.518 cv
40.1443 229.115 40.6287 229.6 41.2258 229.6 cv
41.823 229.6 42.3074 229.115 42.3074 228.518 cv
f
42.3074 228.518 mo
42.3074 227.922 41.823 227.437 41.2258 227.437 cv
40.6287 227.437 40.1443 227.922 40.1443 228.518 cv
40.1443 229.115 40.6287 229.6 41.2258 229.6 cv
41.823 229.6 42.3074 229.115 42.3074 228.518 cv
@
46.3288 230.163 mo
46.3288 229.567 45.8436 229.082 45.2473 229.082 cv
44.6502 229.082 44.1658 229.567 44.1658 230.163 cv
44.1658 230.76 44.6502 231.245 45.2473 231.245 cv
45.8436 231.245 46.3288 230.76 46.3288 230.163 cv
f
46.3288 230.163 mo
46.3288 229.567 45.8436 229.082 45.2473 229.082 cv
44.6502 229.082 44.1657 229.567 44.1657 230.163 cv
44.1657 230.761 44.6502 231.245 45.2473 231.245 cv
45.8436 231.245 46.3288 230.761 46.3288 230.163 cv
@
50.3495 229.798 mo
50.3495 229.201 49.8658 228.717 49.268 228.717 cv
48.6716 228.717 48.1872 229.201 48.1872 229.798 cv
48.1872 230.395 48.6716 230.879 49.268 230.879 cv
49.8658 230.879 50.3495 230.395 50.3495 229.798 cv
f
50.3495 229.798 mo
50.3495 229.201 49.8658 228.717 49.2679 228.717 cv
48.6716 228.717 48.1872 229.201 48.1872 229.798 cv
48.1872 230.395 48.6716 230.879 49.2679 230.879 cv
49.8658 230.879 50.3495 230.395 50.3495 229.798 cv
@
54.5545 231.169 mo
54.5545 230.572 54.0701 230.087 53.4729 230.087 cv
52.8758 230.087 52.3914 230.572 52.3914 231.169 cv
52.3914 231.766 52.8758 232.25 53.4729 232.25 cv
54.0701 232.25 54.5545 231.766 54.5545 231.169 cv
f
54.5545 231.169 mo
54.5545 230.572 54.0701 230.087 53.4729 230.087 cv
52.8758 230.087 52.3914 230.572 52.3914 231.169 cv
52.3914 231.766 52.8758 232.25 53.4729 232.25 cv
54.0701 232.25 54.5545 231.766 54.5545 231.169 cv
@
58.5759 236.104 mo
58.5759 235.508 58.0908 235.023 57.4944 235.023 cv
56.8973 235.023 56.4129 235.508 56.4129 236.104 cv
56.4129 236.701 56.8973 237.186 57.4944 237.186 cv
58.0908 237.186 58.5759 236.701 58.5759 236.104 cv
f
58.5759 236.104 mo
58.5759 235.508 58.0907 235.023 57.4944 235.023 cv
56.8973 235.023 56.4129 235.508 56.4129 236.104 cv
56.4129 236.701 56.8973 237.186 57.4944 237.186 cv
58.0907 237.186 58.5759 236.701 58.5759 236.104 cv
@
62.5966 234.733 mo
62.5966 234.137 62.1129 233.652 61.5158 233.652 cv
60.9187 233.652 60.4343 234.137 60.4343 234.733 cv
60.4343 235.33 60.9187 235.815 61.5158 235.815 cv
62.1129 235.815 62.5966 235.33 62.5966 234.733 cv
f
62.5966 234.733 mo
62.5966 234.137 62.1129 233.652 61.5158 233.652 cv
60.9187 233.652 60.4343 234.137 60.4343 234.733 cv
60.4343 235.33 60.9187 235.815 61.5158 235.815 cv
62.1129 235.815 62.5966 235.33 62.5966 234.733 cv
@
66.6196 240.4 mo
66.6196 239.803 66.1344 239.318 65.5373 239.318 cv
64.9401 239.318 64.4557 239.803 64.4557 240.4 cv
64.4557 240.997 64.9401 241.481 65.5373 241.481 cv
66.1344 241.481 66.6196 240.997 66.6196 240.4 cv
f
66.6195 240.4 mo
66.6195 239.803 66.1344 239.318 65.5373 239.318 cv
64.9401 239.318 64.4557 239.803 64.4557 240.4 cv
64.4557 240.997 64.9401 241.481 65.5373 241.481 cv
66.1344 241.481 66.6195 240.997 66.6195 240.4 cv
@
70.823 243.69 mo
70.823 243.094 70.3386 242.608 69.7415 242.608 cv
69.1444 242.608 68.66 243.094 68.66 243.69 cv
68.66 244.287 69.1444 244.772 69.7415 244.772 cv
70.3386 244.772 70.823 244.287 70.823 243.69 cv
f
70.823 243.69 mo
70.823 243.094 70.3386 242.608 69.7415 242.608 cv
69.1444 242.608 68.66 243.094 68.66 243.69 cv
68.66 244.287 69.1444 244.772 69.7415 244.772 cv
70.3386 244.772 70.823 244.287 70.823 243.69 cv
@
74.8445 245.884 mo
74.8445 245.286 74.3601 244.802 73.7629 244.802 cv
73.1658 244.802 72.6814 245.286 72.6814 245.884 cv
72.6814 246.481 73.1658 246.966 73.7629 246.966 cv
74.3601 246.966 74.8445 246.481 74.8445 245.884 cv
f
74.8445 245.884 mo
74.8445 245.286 74.3601 244.802 73.7629 244.802 cv
73.1658 244.802 72.6814 245.286 72.6814 245.884 cv
72.6814 246.481 73.1658 246.966 73.7629 246.966 cv
74.3601 246.966 74.8445 246.481 74.8445 245.884 cv
@
78.8659 245.884 mo
78.8659 245.286 78.3815 244.802 77.7844 244.802 cv
77.1873 244.802 76.7029 245.286 76.7029 245.884 cv
76.7029 246.481 77.1873 246.966 77.7844 246.966 cv
78.3815 246.966 78.8659 246.481 78.8659 245.884 cv
f
78.8659 245.884 mo
78.8659 245.286 78.3815 244.802 77.7844 244.802 cv
77.1872 244.802 76.7028 245.286 76.7028 245.884 cv
76.7028 246.481 77.1872 246.966 77.7844 246.966 cv
78.3815 246.966 78.8659 246.481 78.8659 245.884 cv
@
82.8873 248.351 mo
82.8873 247.755 82.4022 247.27 81.8058 247.27 cv
81.2087 247.27 80.7243 247.755 80.7243 248.351 cv
80.7243 248.948 81.2087 249.433 81.8058 249.433 cv
82.4022 249.433 82.8873 248.948 82.8873 248.351 cv
f
82.8873 248.351 mo
82.8873 247.755 82.4022 247.27 81.8058 247.27 cv
81.2087 247.27 80.7243 247.755 80.7243 248.351 cv
80.7243 248.948 81.2087 249.433 81.8058 249.433 cv
82.4022 249.433 82.8873 248.948 82.8873 248.351 cv
@
87.0916 250.271 mo
87.0916 249.673 86.6072 249.189 86.0101 249.189 cv
85.4137 249.189 84.9285 249.673 84.9285 250.271 cv
84.9285 250.868 85.4137 251.352 86.0101 251.352 cv
86.6072 251.352 87.0916 250.868 87.0916 250.271 cv
f
87.0916 250.271 mo
87.0916 249.673 86.6072 249.189 86.01 249.189 cv
85.4137 249.189 84.9285 249.673 84.9285 250.271 cv
84.9285 250.868 85.4137 251.352 86.01 251.352 cv
86.6072 251.352 87.0916 250.868 87.0916 250.271 cv
@
91.113 250.454 mo
91.113 249.856 90.6286 249.372 90.0315 249.372 cv
89.4344 249.372 88.95 249.856 88.95 250.454 cv
88.95 251.051 89.4344 251.536 90.0315 251.536 cv
90.6286 251.536 91.113 251.051 91.113 250.454 cv
f
91.113 250.454 mo
91.113 249.856 90.6286 249.372 90.0315 249.372 cv
89.4344 249.372 88.95 249.856 88.95 250.454 cv
88.95 251.051 89.4344 251.536 90.0315 251.536 cv
90.6286 251.536 91.113 251.051 91.113 250.454 cv
@
95.1345 252.464 mo
95.1345 251.867 94.6493 251.383 94.0529 251.383 cv
93.4558 251.383 92.9714 251.867 92.9714 252.464 cv
92.9714 253.061 93.4558 253.546 94.0529 253.546 cv
94.6493 253.546 95.1345 253.061 95.1345 252.464 cv
f
95.1344 252.464 mo
95.1344 251.867 94.6493 251.383 94.0529 251.383 cv
93.4558 251.383 92.9714 251.867 92.9714 252.464 cv
92.9714 253.061 93.4558 253.546 94.0529 253.546 cv
94.6493 253.546 95.1344 253.061 95.1344 252.464 cv
@
99.1559 251.002 mo
99.1559 250.405 98.6715 249.92 98.0744 249.92 cv
97.4772 249.92 96.9928 250.405 96.9928 251.002 cv
96.9928 251.599 97.4772 252.083 98.0744 252.083 cv
98.6715 252.083 99.1559 251.599 99.1559 251.002 cv
f
99.1559 251.002 mo
99.1559 250.405 98.6715 249.92 98.0744 249.92 cv
97.4772 249.92 96.9928 250.405 96.9928 251.002 cv
96.9928 251.599 97.4772 252.083 98.0744 252.083 cv
98.6715 252.083 99.1559 251.599 99.1559 251.002 cv
@
103.36 250.454 mo
103.36 249.856 102.876 249.372 102.279 249.372 cv
101.682 249.372 101.197 249.856 101.197 250.454 cv
101.197 251.051 101.682 251.536 102.279 251.536 cv
102.876 251.536 103.36 251.051 103.36 250.454 cv
f
103.36 250.454 mo
103.36 249.856 102.876 249.372 102.279 249.372 cv
101.681 249.372 101.197 249.856 101.197 250.454 cv
101.197 251.051 101.681 251.536 102.279 251.536 cv
102.876 251.536 103.36 251.051 103.36 250.454 cv
@
107.382 254.475 mo
107.382 253.878 106.897 253.393 106.3 253.393 cv
105.703 253.393 105.218 253.878 105.218 254.475 cv
105.218 255.072 105.703 255.556 106.3 255.556 cv
106.897 255.556 107.382 255.072 107.382 254.475 cv
f
107.382 254.475 mo
107.382 253.878 106.897 253.393 106.3 253.393 cv
105.703 253.393 105.218 253.878 105.218 254.475 cv
105.218 255.072 105.703 255.556 106.3 255.556 cv
106.897 255.556 107.382 255.072 107.382 254.475 cv
@
111.403 252.83 mo
111.403 252.233 110.919 251.748 110.322 251.748 cv
109.724 251.748 109.24 252.233 109.24 252.83 cv
109.24 253.427 109.724 253.912 110.322 253.912 cv
110.919 253.912 111.403 253.427 111.403 252.83 cv
f
111.403 252.83 mo
111.403 252.233 110.919 251.748 110.321 251.748 cv
109.724 251.748 109.24 252.233 109.24 252.83 cv
109.24 253.427 109.724 253.912 110.321 253.912 cv
110.919 253.912 111.403 253.427 111.403 252.83 cv
@
115.424 250.271 mo
115.424 249.673 114.94 249.189 114.343 249.189 cv
113.746 249.189 113.261 249.673 113.261 250.271 cv
113.261 250.868 113.746 251.352 114.343 251.352 cv
114.94 251.352 115.424 250.868 115.424 250.271 cv
f
115.424 250.271 mo
115.424 249.673 114.94 249.189 114.343 249.189 cv
113.746 249.189 113.261 249.673 113.261 250.271 cv
113.261 250.868 113.746 251.352 114.343 251.352 cv
114.94 251.352 115.424 250.868 115.424 250.271 cv
@
119.629 253.561 mo
119.629 252.964 119.144 252.479 118.547 252.479 cv
117.95 252.479 117.466 252.964 117.466 253.561 cv
117.466 254.158 117.95 254.643 118.547 254.643 cv
119.144 254.643 119.629 254.158 119.629 253.561 cv
f
119.629 253.561 mo
119.629 252.964 119.144 252.479 118.547 252.479 cv
117.95 252.479 117.466 252.964 117.466 253.561 cv
117.466 254.158 117.95 254.643 118.547 254.643 cv
119.144 254.643 119.629 254.158 119.629 253.561 cv
@
123.65 251.917 mo
123.65 251.319 123.166 250.835 122.569 250.835 cv
121.972 250.835 121.487 251.319 121.487 251.917 cv
121.487 252.513 121.972 252.997 122.569 252.997 cv
123.166 252.997 123.65 252.513 123.65 251.917 cv
f
123.65 251.917 mo
123.65 251.319 123.166 250.835 122.569 250.835 cv
121.972 250.835 121.487 251.319 121.487 251.917 cv
121.487 252.513 121.972 252.997 122.569 252.997 cv
123.166 252.997 123.65 252.513 123.65 251.917 cv
@
127.672 254.293 mo
127.672 253.695 127.187 253.211 126.59 253.211 cv
125.993 253.211 125.508 253.695 125.508 254.293 cv
125.508 254.889 125.993 255.374 126.59 255.374 cv
127.187 255.374 127.672 254.889 127.672 254.293 cv
f
127.672 254.293 mo
127.672 253.695 127.187 253.211 126.59 253.211 cv
125.993 253.211 125.508 253.695 125.508 254.293 cv
125.508 254.889 125.993 255.374 126.59 255.374 cv
127.187 255.374 127.672 254.889 127.672 254.293 cv
@
131.693 254.109 mo
131.693 253.512 131.208 253.028 130.611 253.028 cv
130.014 253.028 129.53 253.512 129.53 254.109 cv
129.53 254.706 130.014 255.191 130.611 255.191 cv
131.208 255.191 131.693 254.706 131.693 254.109 cv
f
131.693 254.109 mo
131.693 253.512 131.208 253.028 130.611 253.028 cv
130.014 253.028 129.53 253.512 129.53 254.109 cv
129.53 254.706 130.014 255.191 130.611 255.191 cv
131.208 255.191 131.693 254.706 131.693 254.109 cv
@
135.897 252.647 mo
135.897 252.05 135.413 251.566 134.816 251.566 cv
134.219 251.566 133.734 252.05 133.734 252.647 cv
133.734 253.244 134.219 253.728 134.816 253.728 cv
135.413 253.728 135.897 253.244 135.897 252.647 cv
f
135.897 252.647 mo
135.897 252.05 135.413 251.566 134.816 251.566 cv
134.219 251.566 133.734 252.05 133.734 252.647 cv
133.734 253.244 134.219 253.728 134.816 253.728 cv
135.413 253.728 135.897 253.244 135.897 252.647 cv
@
139.919 253.926 mo
139.919 253.329 139.434 252.845 138.837 252.845 cv
138.24 252.845 137.756 253.329 137.756 253.926 cv
137.756 254.524 138.24 255.008 138.837 255.008 cv
139.434 255.008 139.919 254.524 139.919 253.926 cv
f
139.919 253.926 mo
139.919 253.329 139.434 252.845 138.837 252.845 cv
138.24 252.845 137.756 253.329 137.756 253.926 cv
137.756 254.524 138.24 255.008 138.837 255.008 cv
139.434 255.008 139.919 254.524 139.919 253.926 cv
@
143.94 259.502 mo
143.94 258.905 143.456 258.421 142.859 258.421 cv
142.262 258.421 141.777 258.905 141.777 259.502 cv
141.777 260.099 142.262 260.583 142.859 260.583 cv
143.456 260.583 143.94 260.099 143.94 259.502 cv
f
143.94 259.502 mo
143.94 258.905 143.456 258.421 142.859 258.421 cv
142.262 258.421 141.777 258.905 141.777 259.502 cv
141.777 260.099 142.262 260.583 142.859 260.583 cv
143.456 260.583 143.94 260.099 143.94 259.502 cv
@
147.962 255.024 mo
147.962 254.426 147.478 253.942 146.881 253.942 cv
146.283 253.942 145.799 254.426 145.799 255.024 cv
145.799 255.62 146.283 256.105 146.881 256.105 cv
147.478 256.105 147.962 255.62 147.962 255.024 cv
f
147.962 255.024 mo
147.962 254.426 147.478 253.942 146.881 253.942 cv
146.283 253.942 145.799 254.426 145.799 255.024 cv
145.799 255.62 146.283 256.105 146.881 256.105 cv
147.478 256.105 147.962 255.62 147.962 255.024 cv
@
152.166 255.206 mo
152.166 254.61 151.681 254.125 151.084 254.125 cv
150.488 254.125 150.003 254.61 150.003 255.206 cv
150.003 255.803 150.488 256.288 151.084 256.288 cv
151.681 256.288 152.166 255.803 152.166 255.206 cv
f
152.166 255.206 mo
152.166 254.61 151.681 254.124 151.084 254.124 cv
150.488 254.124 150.003 254.61 150.003 255.206 cv
150.003 255.803 150.488 256.288 151.084 256.288 cv
151.681 256.288 152.166 255.803 152.166 255.206 cv
@
.807334 lw
0 lc
30.6399 339.862 mo
30.6399 194.427 li
.746 .676 .668 .898 cmyk
@
%ADOBeginSubsetFont: IAAAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginGEFRQA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B854D0E3687C43D46768E11610> |-systemdict /gcheck known {setglobal} if end {end} ifendGEFRQA+Helvetica /Encoding getdup 46 /period putpop%ADOEndSubsetFont
/GEFRQA+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /.notdef /zero /one /two /three /four /five /six 10{/.notdef}rp /A /B /C /D 4{/.notdef}rp /I 8{/.notdef}rp /R /S /T 12{/.notdef}rp /a 2{/.notdef}rp /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]GEFRQA+Helvetica nfGEFRQA+Helvetica*1 [6.85472 0 0 -6.85472 0 0 ]msf15.7106 307.127 mo(0.1)[3.8126 1.90698 0 ]xsh15.7106 271.389 mo(0.2)[3.8126 1.90698 0 ]xsh15.7106 235.663 mo(0.3)[3.8126 1.90698 0 ]xsh15.7106 199.926 mo(0.4)[3.8126 1.90698 0 ]xsh151.016 343.099 mo
151.016 339.862 li
130.68 343.099 mo
130.68 339.862 li
110.344 343.099 mo
110.344 339.862 li
90.0086 343.099 mo
90.0086 339.862 li
69.6806 343.099 mo
69.6806 339.862 li
49.3449 343.099 mo
49.3449 339.862 li
30.6399 339.862 mo
153.454 339.862 li
27.4021 197.466 mo
30.6399 197.466 li
27.4021 233.195 mo
30.6399 233.195 li
27.4021 268.931 mo
30.6399 268.931 li
27.4021 304.667 mo
30.6399 304.667 li
@
%ADOBeginSubsetFont: IAAAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginGEFRQA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/slash <1C60D8A8C9B854D08FD42DCC2A61292225078A8A43> |-systemdict /gcheck known {setglobal} if end {end} ifendGEFRQA+Helvetica /Encoding getdup 47 /slash putpop%ADOEndSubsetFont
/GEFRQA+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /slash /zero /one /two /three /four /five /six 10{/.notdef}rp /A /B /C /D 4{/.notdef}rp /I 8{/.notdef}rp /R /S /T 12{/.notdef}rp /a 2{/.notdef}rp /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]GEFRQA+Helvetica nfGEFRQA+Helvetica*1 [6.85472 0 0 -6.85472 0 0 ]msf47.4375 350.183 mo(51015202530)[18.433 3.81191 16.5274 3.79134 16.5274 3.8119 16.5274 3.80505 16.5274 3.81192 0 ]xsh74.9099 357.841 mo(Tap Stimuli)[3.35602 3.81123 3.81123 1.90562 4.57215 1.90561 1.52175 5.70994 3.81123 1.46622 0 ]xshGEFRQA+Helvetica*1 [0 -6.85472 -6.85472 0 0 0 ]msf12.9616 303.134 mo(Reversal Speed \(mm/s\))[-4.9498 -3.60626 -3.25668 -3.81192 -2.28326 -3.42804 -3.81192 -1.52243 -1.90628 -4.57285 -3.81192 -3.81189 -3.81195 -3.81189 -1.90628 -2.28329 -5.7106 -5.71063 -1.90628 -3.42807 0 ]ysh1 ml
32.0931 109.604 mo
34.1266 109.604 li
33.106 100.663 mo
33.106 109.604 li
32.0931 100.663 mo
34.1266 100.663 li
@
32.0931 80.6847 mo
34.1266 80.6847 li
33.106 70.2122 mo
33.106 80.6847 li
32.0931 70.2122 mo
34.1266 70.2122 li
.883 .77 0 0 cmyk
@
32.0931 76.4805 mo
34.1266 76.4805 li
33.106 63.5327 mo
33.106 76.4805 li
32.0931 63.5327 mo
34.1266 63.5327 li
0 .988 1 0 cmyk
@
32.0931 42.1688 mo
34.1266 42.1688 li
33.106 25.8705 mo
33.106 42.1688 li
32.0931 25.8705 mo
34.1266 25.8705 li
.836 .211 1 .082 cmyk
@
36.1602 120.191 mo
38.193 120.191 li
37.1732 111.768 mo
37.1732 120.191 li
36.1602 111.768 mo
38.193 111.768 li
.746 .676 .668 .898 cmyk
@
36.1602 86.4275 mo
38.193 86.4275 li
37.1732 74.5612 mo
37.1732 86.4275 li
36.1602 74.5612 mo
38.193 74.5612 li
.883 .77 0 0 cmyk
@
36.1602 94.12 mo
38.193 94.12 li
37.1732 81.1341 mo
37.1732 94.12 li
36.1602 81.1341 mo
38.193 81.1341 li
0 .988 1 0 cmyk
@
36.1602 53.3876 mo
38.193 53.3876 li
37.1732 38.7643 mo
37.1732 53.3876 li
36.1602 38.7643 mo
38.193 38.7643 li
.836 .211 1 .082 cmyk
@
40.2266 123.764 mo
42.2609 123.764 li
41.2395 116.87 mo
41.2395 123.764 li
40.2266 116.87 mo
42.2609 116.87 li
.746 .676 .668 .898 cmyk
@
40.2266 91.6903 mo
42.2609 91.6903 li
41.2395 81.0426 mo
41.2395 91.6903 li
40.2266 81.0426 mo
42.2609 81.0426 li
.883 .77 0 0 cmyk
@
40.2266 98.7203 mo
42.2609 98.7203 li
41.2395 87.6155 mo
41.2395 98.7203 li
40.2266 87.6155 mo
42.2609 87.6155 li
0 .988 1 0 cmyk
@
40.2266 53.997 mo
42.2609 53.997 li
41.2395 41.0721 mo
41.2395 53.997 li
40.2266 41.0721 mo
42.2609 41.0721 li
.836 .211 1 .082 cmyk
@
44.2945 125.454 mo
46.328 125.454 li
45.3074 118.477 mo
45.3074 125.454 li
44.2945 118.477 mo
46.328 118.477 li
.746 .676 .668 .898 cmyk
@
44.2945 98.5145 mo
46.328 98.5145 li
45.3074 87.3643 mo
45.3074 98.5145 li
44.2945 87.3643 mo
46.328 87.3643 li
.883 .77 0 0 cmyk
@
44.2945 109.269 mo
46.328 109.269 li
45.3074 97.692 mo
45.3074 109.269 li
44.2945 97.692 mo
46.328 97.692 li
0 .988 1 0 cmyk
@
44.2945 62.0703 mo
46.328 62.0703 li
45.3074 48.2314 mo
45.3074 62.0703 li
44.2945 48.2314 mo
46.328 48.2314 li
.836 .211 1 .082 cmyk
@
48.3616 127.205 mo
50.3876 127.205 li
49.3746 120.229 mo
49.3746 127.205 li
48.3616 120.229 mo
50.3876 120.229 li
.746 .676 .668 .898 cmyk
@
48.3616 106.108 mo
50.3876 106.108 li
49.3746 95.6737 mo
49.3746 106.108 li
48.3616 95.6737 mo
50.3876 95.6737 li
.883 .77 0 0 cmyk
@
48.3616 109.3 mo
50.3876 109.3 li
49.3746 97.593 mo
49.3746 109.3 li
48.3616 97.593 mo
50.3876 97.593 li
0 .988 1 0 cmyk
@
48.3616 72.1772 mo
50.3876 72.1772 li
49.3746 59.1609 mo
49.3746 72.1772 li
48.3616 59.1609 mo
50.3876 59.1609 li
.836 .211 1 .082 cmyk
@
52.4211 130.26 mo
54.4547 130.26 li
53.4417 123.063 mo
53.4417 130.26 li
52.4211 123.063 mo
54.4547 123.063 li
.746 .676 .668 .898 cmyk
@
52.4211 105.743 mo
54.4547 105.743 li
53.4417 95.8031 mo
53.4417 105.743 li
52.4211 95.8031 mo
54.4547 95.8031 li
.883 .77 0 0 cmyk
@
52.4211 112.864 mo
54.4547 112.864 li
53.4417 102.217 mo
53.4417 112.864 li
52.4211 102.217 mo
54.4547 102.217 li
0 .988 1 0 cmyk
@
52.4211 74.6221 mo
54.4547 74.6221 li
53.4417 61.7588 mo
53.4417 74.6221 li
52.4211 61.7588 mo
54.4547 61.7588 li
.836 .211 1 .082 cmyk
@
56.4883 131.791 mo
58.5218 131.791 li
57.5096 124.288 mo
57.5096 131.791 li
56.4883 124.288 mo
58.5218 124.288 li
.746 .676 .668 .898 cmyk
@
56.4883 104.699 mo
58.5218 104.699 li
57.5096 94.0894 mo
57.5096 104.699 li
56.4883 94.0894 mo
58.5218 94.0894 li
.883 .77 0 0 cmyk
@
56.4883 113.603 mo
58.5218 113.603 li
57.5096 103.397 mo
57.5096 113.603 li
56.4883 103.397 mo
58.5218 103.397 li
0 .988 1 0 cmyk
@
56.4883 87.2127 mo
58.5218 87.2127 li
57.5096 74.881 mo
57.5096 87.2127 li
56.4883 74.881 mo
58.5218 74.881 li
.836 .211 1 .082 cmyk
@
60.5562 133.908 mo
62.5897 133.908 li
61.5768 125.933 mo
61.5768 133.908 li
60.5562 125.933 mo
62.5897 125.933 li
.746 .676 .668 .898 cmyk
@
60.5562 110.746 mo
62.5897 110.746 li
61.5768 101.157 mo
61.5768 110.746 li
60.5562 101.157 mo
62.5897 101.157 li
.883 .77 0 0 cmyk
@
60.5562 116.307 mo
62.5897 116.307 li
61.5768 105.59 mo
61.5768 116.307 li
60.5562 105.59 mo
62.5897 105.59 li
0 .988 1 0 cmyk
@
60.5562 79.4668 mo
62.5897 79.4668 li
61.5768 67.4932 mo
61.5768 79.4668 li
60.5562 67.4932 mo
62.5897 67.4932 li
.836 .211 1 .082 cmyk
@
64.6233 133.345 mo
66.6569 133.345 li
65.6439 124.624 mo
65.6439 133.345 li
64.6233 124.624 mo
66.6569 124.624 li
.746 .676 .668 .898 cmyk
@
64.6233 117.441 mo
66.6569 117.441 li
65.6439 107.372 mo
65.6439 117.441 li
64.6233 107.372 mo
66.6569 107.372 li
.883 .77 0 0 cmyk
@
64.6233 115.743 mo
66.6569 115.743 li
65.6439 104.113 mo
65.6439 115.743 li
64.6233 104.113 mo
66.6569 104.113 li
0 .988 1 0 cmyk
@
64.6233 94.2494 mo
66.6569 94.2494 li
65.6439 82.9239 mo
65.6439 94.2494 li
64.6233 82.9239 mo
66.6569 82.9239 li
.836 .211 1 .082 cmyk
@
68.6904 136.521 mo
70.7232 136.521 li
69.7103 129.27 mo
69.7103 136.521 li
68.6904 129.27 mo
70.7232 129.27 li
.746 .676 .668 .898 cmyk
@
68.6904 117.746 mo
70.7232 117.746 li
69.7103 108.225 mo
69.7103 117.746 li
68.6904 108.225 mo
70.7232 108.225 li
.883 .77 0 0 cmyk
@
68.6904 118.294 mo
70.7232 118.294 li
69.7103 107.121 mo
69.7103 118.294 li
68.6904 107.121 mo
70.7232 107.121 li
0 .988 1 0 cmyk
@
68.6904 95.8116 mo
70.7232 95.8116 li
69.7103 83.5027 mo
69.7103 95.8116 li
68.6904 83.5027 mo
70.7232 83.5027 li
.836 .211 1 .082 cmyk
@
72.7568 135.774 mo
74.7904 135.774 li
73.7774 127.266 mo
73.7774 135.774 li
72.7568 127.266 mo
74.7904 127.266 li
.746 .676 .668 .898 cmyk
@
72.7568 118.264 mo
74.7904 118.264 li
73.7774 108.812 mo
73.7774 118.264 li
72.7568 108.812 mo
74.7904 108.812 li
.883 .77 0 0 cmyk
@
72.7568 120.153 mo
74.7904 120.153 li
73.7774 106.146 mo
73.7774 120.153 li
72.7568 106.146 mo
74.7904 106.146 li
0 .988 1 0 cmyk
@
72.7568 98.5078 mo
74.7904 98.5078 li
73.7774 86.5417 mo
73.7774 98.5078 li
72.7568 86.5417 mo
74.7904 86.5417 li
.836 .211 1 .082 cmyk
@
76.8239 137.488 mo
78.8575 137.488 li
77.8445 128.775 mo
77.8445 137.488 li
76.8239 128.775 mo
78.8575 128.775 li
.746 .676 .668 .898 cmyk
@
76.8239 121.562 mo
78.8575 121.562 li
77.8445 111.904 mo
77.8445 121.562 li
76.8239 111.904 mo
78.8575 111.904 li
.883 .77 0 0 cmyk
@
76.8239 123.588 mo
78.8575 123.588 li
77.8445 110.99 mo
77.8445 123.588 li
76.8239 110.99 mo
78.8575 110.99 li
0 .988 1 0 cmyk
@
76.8239 102.513 mo
78.8575 102.513 li
77.8445 91.8434 mo
77.8445 102.513 li
76.8239 91.8434 mo
78.8575 91.8434 li
.836 .211 1 .082 cmyk
@
80.8911 137.716 mo
82.9246 137.716 li
81.9117 128.881 mo
81.9117 137.716 li
80.8911 128.881 mo
82.9246 128.881 li
.746 .676 .668 .898 cmyk
@
80.8911 121.904 mo
82.9246 121.904 li
81.9117 113.945 mo
81.9117 121.904 li
80.8911 113.945 mo
82.9246 113.945 li
.883 .77 0 0 cmyk
@
80.8911 118.752 mo
82.9246 118.752 li
81.9117 103.625 mo
81.9117 118.752 li
80.8911 103.625 mo
82.9246 103.625 li
0 .988 1 0 cmyk
@
80.8911 101.836 mo
82.9246 101.836 li
81.9117 89.6796 mo
81.9117 101.836 li
80.8911 89.6796 mo
82.9246 89.6796 li
.836 .211 1 .082 cmyk
@
84.9582 139.514 mo
86.9918 139.514 li
85.9788 131.7 mo
85.9788 139.514 li
84.9582 131.7 mo
86.9918 131.7 li
.746 .676 .668 .898 cmyk
@
84.9582 121.79 mo
86.9918 121.79 li
85.9788 112.871 mo
85.9788 121.79 li
84.9582 112.871 mo
86.9918 112.871 li
.883 .77 0 0 cmyk
@
84.9582 125.202 mo
86.9918 125.202 li
85.9788 113.846 mo
85.9788 125.202 li
84.9582 113.846 mo
86.9918 113.846 li
0 .988 1 0 cmyk
@
84.9582 104.036 mo
86.9918 104.036 li
85.9788 92.4825 mo
85.9788 104.036 li
84.9582 92.4825 mo
86.9918 92.4825 li
.836 .211 1 .082 cmyk
@
89.0254 138.28 mo
91.0589 138.28 li
90.0383 128.805 mo
90.0383 138.28 li
89.0254 128.805 mo
91.0589 128.805 li
.746 .676 .668 .898 cmyk
@
89.0254 123.184 mo
91.0589 123.184 li
90.0383 113.915 mo
90.0383 123.184 li
89.0254 113.915 mo
91.0589 113.915 li
.883 .77 0 0 cmyk
@
89.0254 123.703 mo
91.0589 123.703 li
90.0383 111.958 mo
90.0383 123.703 li
89.0254 111.958 mo
91.0589 111.958 li
0 .988 1 0 cmyk
@
89.0254 100.663 mo
91.0589 100.663 li
90.0383 90.0833 mo
90.0383 100.663 li
89.0254 90.0833 mo
91.0589 90.0833 li
.836 .211 1 .082 cmyk
@
93.0925 141.136 mo
95.1253 141.136 li
94.1055 132.704 mo
94.1055 141.136 li
93.0925 132.704 mo
95.1253 132.704 li
.746 .676 .668 .898 cmyk
@
93.0925 130.809 mo
95.1253 130.809 li
94.1055 121.54 mo
94.1055 130.809 li
93.0925 121.54 mo
95.1253 121.54 li
.883 .77 0 0 cmyk
@
93.0925 132.401 mo
95.1253 132.401 li
94.1055 121.76 mo
94.1055 132.401 li
93.0925 121.76 mo
95.1253 121.76 li
0 .988 1 0 cmyk
@
93.0925 104.974 mo
95.1253 104.974 li
94.1055 93.0004 mo
94.1055 104.974 li
93.0925 93.0004 mo
95.1253 93.0004 li
.836 .211 1 .082 cmyk
@
97.1589 141.562 mo
99.1932 141.562 li
98.1718 133.215 mo
98.1718 141.562 li
97.1589 133.215 mo
99.1932 133.215 li
.746 .676 .668 .898 cmyk
@
97.1589 124.7 mo
99.1932 124.7 li
98.1718 115.043 mo
98.1718 124.7 li
97.1589 115.043 mo
99.1932 115.043 li
.883 .77 0 0 cmyk
@
97.1589 130.214 mo
99.1932 130.214 li
98.1718 117.64 mo
98.1718 130.214 li
97.1589 117.64 mo
99.1932 117.64 li
0 .988 1 0 cmyk
@
97.1589 104.563 mo
99.1932 104.563 li
98.1718 92.5053 mo
98.1718 104.563 li
97.1589 92.5053 mo
99.1932 92.5053 li
.836 .211 1 .082 cmyk
@
101.227 141.822 mo
103.26 141.822 li
102.24 131.433 mo
102.24 141.822 li
101.227 131.433 mo
103.26 131.433 li
.746 .676 .668 .898 cmyk
@
101.227 127.892 mo
103.26 127.892 li
102.24 118.317 mo
102.24 127.892 li
101.227 118.317 mo
103.26 118.317 li
.883 .77 0 0 cmyk
@
101.227 129.308 mo
103.26 129.308 li
102.24 115.53 mo
102.24 129.308 li
101.227 115.53 mo
103.26 115.53 li
0 .988 1 0 cmyk
@
101.227 102.643 mo
103.26 102.643 li
102.24 90.7459 mo
102.24 102.643 li
101.227 90.7459 mo
103.26 90.7459 li
.836 .211 1 .082 cmyk
@
105.294 141.021 mo
107.327 141.021 li
106.307 130.892 mo
106.307 141.021 li
105.294 130.892 mo
107.327 130.892 li
.746 .676 .668 .898 cmyk
@
105.294 126.352 mo
107.327 126.352 li
106.307 115.805 mo
106.307 126.352 li
105.294 115.805 mo
107.327 115.805 li
.883 .77 0 0 cmyk
@
105.294 130.93 mo
107.327 130.93 li
106.307 117.541 mo
106.307 130.93 li
105.294 117.541 mo
107.327 117.541 li
0 .988 1 0 cmyk
@
105.294 105.774 mo
107.327 105.774 li
106.307 94.219 mo
106.307 105.774 li
105.294 94.219 mo
107.327 94.219 li
.836 .211 1 .082 cmyk
@
109.361 144.518 mo
111.395 144.518 li
110.374 135.743 mo
110.374 144.518 li
109.361 135.743 mo
111.395 135.743 li
.746 .676 .668 .898 cmyk
@
109.361 127.944 mo
111.395 127.944 li
110.374 117.754 mo
110.374 127.944 li
109.361 117.754 mo
111.395 117.754 li
.883 .77 0 0 cmyk
@
109.361 128.028 mo
111.395 128.028 li
110.374 115.546 mo
110.374 128.028 li
109.361 115.546 mo
111.395 115.546 li
0 .988 1 0 cmyk
@
109.361 106.969 mo
111.395 106.969 li
110.374 95.2624 mo
110.374 106.969 li
109.361 95.2624 mo
111.395 95.2624 li
.836 .211 1 .082 cmyk
@
113.429 147.846 mo
115.463 147.846 li
114.442 140.466 mo
114.442 147.846 li
113.429 140.466 mo
115.463 140.466 li
.746 .676 .668 .898 cmyk
@
113.429 134.007 mo
115.463 134.007 li
114.442 123.885 mo
114.442 134.007 li
113.429 123.885 mo
115.463 123.885 li
.883 .77 0 0 cmyk
@
113.429 125.538 mo
115.463 125.538 li
114.442 111.075 mo
114.442 125.538 li
113.429 111.075 mo
115.463 111.075 li
0 .988 1 0 cmyk
@
113.429 100.96 mo
115.463 100.96 li
114.442 89.5585 mo
114.442 100.96 li
113.429 89.5585 mo
115.463 89.5585 li
.836 .211 1 .082 cmyk
@
117.496 146.627 mo
119.53 146.627 li
118.509 139.187 mo
118.509 146.627 li
117.496 139.187 mo
119.53 139.187 li
.746 .676 .668 .898 cmyk
@
117.496 133.863 mo
119.53 133.863 li
118.509 124.533 mo
118.509 133.863 li
117.496 124.533 mo
119.53 124.533 li
.883 .77 0 0 cmyk
@
117.496 135.69 mo
119.53 135.69 li
118.509 124.73 mo
118.509 135.69 li
117.496 124.73 mo
119.53 124.73 li
0 .988 1 0 cmyk
@
117.496 109.414 mo
119.53 109.414 li
118.509 97.5168 mo
118.509 109.414 li
117.496 97.5168 mo
119.53 97.5168 li
.836 .211 1 .082 cmyk
@
121.562 147.358 mo
123.589 147.358 li
122.576 139.43 mo
122.576 147.358 li
121.562 139.43 mo
123.589 139.43 li
.746 .676 .668 .898 cmyk
@
121.562 130.999 mo
123.589 130.999 li
122.576 121.029 mo
122.576 130.999 li
121.562 121.029 mo
123.589 121.029 li
.883 .77 0 0 cmyk
@
121.562 135.66 mo
123.589 135.66 li
122.576 124.167 mo
122.576 135.66 li
121.562 124.167 mo
123.589 124.167 li
0 .988 1 0 cmyk
@
121.562 106.947 mo
123.589 106.947 li
122.576 94.4247 mo
122.576 106.947 li
121.562 94.4247 mo
123.589 94.4247 li
.836 .211 1 .082 cmyk
@
125.623 148.752 mo
127.656 148.752 li
126.643 141.402 mo
126.643 148.752 li
125.623 141.402 mo
127.656 141.402 li
.746 .676 .668 .898 cmyk
@
125.623 131.265 mo
127.656 131.265 li
126.643 121.562 mo
126.643 131.265 li
125.623 121.562 mo
127.656 121.562 li
.883 .77 0 0 cmyk
@
125.623 130.541 mo
127.656 130.541 li
126.643 117.304 mo
126.643 130.541 li
125.623 117.304 mo
127.656 117.304 li
0 .988 1 0 cmyk
@
125.623 109.582 mo
127.656 109.582 li
126.643 97.098 mo
126.643 109.582 li
125.623 97.098 mo
127.656 97.098 li
.836 .211 1 .082 cmyk
@
129.689 147.838 mo
131.723 147.838 li
130.71 141.502 mo
130.71 147.838 li
129.689 141.502 mo
131.723 141.502 li
.746 .676 .668 .898 cmyk
@
129.689 129.277 mo
131.723 129.277 li
130.71 119.216 mo
130.71 129.277 li
129.689 119.216 mo
131.723 119.216 li
.883 .77 0 0 cmyk
@
129.689 131.928 mo
131.723 131.928 li
130.71 120.046 mo
130.71 131.928 li
129.689 120.046 mo
131.723 120.046 li
0 .988 1 0 cmyk
@
129.689 108.05 mo
131.723 108.05 li
130.71 96.1078 mo
130.71 108.05 li
129.689 96.1078 mo
131.723 96.1078 li
.836 .211 1 .082 cmyk
@
133.756 147.222 mo
135.79 147.222 li
134.777 138.889 mo
134.777 147.222 li
133.756 138.889 mo
135.79 138.889 li
.746 .676 .668 .898 cmyk
@
133.756 130.268 mo
135.79 130.268 li
134.777 120.442 mo
134.777 130.268 li
133.756 120.442 mo
135.79 120.442 li
.883 .77 0 0 cmyk
@
133.756 134.526 mo
135.79 134.526 li
134.777 124.083 mo
134.777 134.526 li
133.756 124.083 mo
135.79 124.083 li
0 .988 1 0 cmyk
@
133.756 104.874 mo
135.79 104.874 li
134.777 92.4368 mo
134.777 104.874 li
133.756 92.4368 mo
135.79 92.4368 li
.836 .211 1 .082 cmyk
@
137.823 149.049 mo
139.857 149.049 li
138.844 139.636 mo
138.844 149.049 li
137.823 139.636 mo
139.857 139.636 li
.746 .676 .668 .898 cmyk
@
137.823 133.009 mo
139.857 133.009 li
138.844 123.877 mo
138.844 133.009 li
137.823 123.877 mo
139.857 123.877 li
.883 .77 0 0 cmyk
@
137.823 135.348 mo
139.857 135.348 li
138.844 121.669 mo
138.844 135.348 li
137.823 121.669 mo
139.857 121.669 li
0 .988 1 0 cmyk
@
137.823 106.192 mo
139.857 106.192 li
138.844 92.6653 mo
138.844 106.192 li
137.823 92.6653 mo
139.857 92.6653 li
.836 .211 1 .082 cmyk
@
141.891 149.163 mo
143.925 149.163 li
142.912 141.22 mo
142.912 149.163 li
141.891 141.22 mo
143.925 141.22 li
.746 .676 .668 .898 cmyk
@
141.891 131.86 mo
143.925 131.86 li
142.912 121.448 mo
142.912 131.86 li
141.891 121.448 mo
143.925 121.448 li
.883 .77 0 0 cmyk
@
141.891 130.207 mo
143.925 130.207 li
142.912 115.941 mo
142.912 130.207 li
141.891 115.941 mo
143.925 115.941 li
0 .988 1 0 cmyk
@
141.891 113.854 mo
143.925 113.854 li
142.912 101.066 mo
142.912 113.854 li
141.891 101.066 mo
143.925 101.066 li
.836 .211 1 .082 cmyk
@
145.958 146.24 mo
147.992 146.24 li
146.979 136.802 mo
146.979 146.24 li
145.958 136.802 mo
147.992 136.802 li
.746 .676 .668 .898 cmyk
@
145.958 137.069 mo
147.992 137.069 li
146.979 127.64 mo
146.979 137.069 li
145.958 127.64 mo
147.992 127.64 li
.883 .77 0 0 cmyk
@
145.958 133.047 mo
147.992 133.047 li
146.979 118.493 mo
146.979 133.047 li
145.958 118.493 mo
147.992 118.493 li
0 .988 1 0 cmyk
@
145.958 114.357 mo
147.992 114.357 li
146.979 100.746 mo
146.979 114.357 li
145.958 100.746 mo
147.992 100.746 li
.836 .211 1 .082 cmyk
@
150.026 146.924 mo
152.058 146.924 li
151.045 137.358 mo
151.045 146.924 li
150.026 137.358 mo
152.058 137.358 li
.746 .676 .668 .898 cmyk
@
150.026 129.506 mo
152.058 129.506 li
151.045 118.813 mo
151.045 129.506 li
150.026 118.813 mo
152.058 118.813 li
.883 .77 0 0 cmyk
@
150.026 131.989 mo
152.058 131.989 li
151.045 117.913 mo
151.045 131.989 li
150.026 117.913 mo
152.058 117.913 li
0 .988 1 0 cmyk
@
150.026 114.342 mo
152.058 114.342 li
151.045 101.538 mo
151.045 114.342 li
150.026 101.538 mo
152.058 101.538 li
.836 .211 1 .082 cmyk
@
33.106 105.134 mo
37.1732 115.979 li
41.2395 120.313 li
45.3074 121.965 li
49.3746 123.717 li
53.4417 126.665 li
57.5096 128.036 li
61.5768 129.925 li
65.6439 128.988 li
69.7103 132.895 li
73.7774 131.516 li
77.8445 133.132 li
81.9117 133.299 li
85.9788 135.607 li
90.0383 133.543 li
94.1055 136.916 li
98.1718 137.389 li
102.24 136.627 li
106.307 135.957 li
110.374 140.13 li
114.442 144.159 li
118.509 142.91 li
122.576 143.398 li
126.643 145.081 li
130.71 144.67 li
134.777 143.056 li
138.844 144.342 li
142.912 145.195 li
146.979 141.517 li
151.045 142.142 li
.746 .676 .668 .898 cmyk
@
33.106 75.4523 mo
37.1732 80.4943 li
41.2395 86.3665 li
45.3074 92.9395 li
49.3746 100.891 li
53.4417 100.769 li
57.5096 99.3989 li
61.5768 105.956 li
65.6439 112.408 li
69.7103 112.986 li
73.7774 113.542 li
77.8445 116.733 li
81.9117 117.929 li
85.9788 117.328 li
90.0383 118.553 li
94.1055 126.178 li
98.1718 119.871 li
102.24 123.108 li
106.307 121.082 li
110.374 122.85 li
114.442 128.95 li
118.509 129.201 li
122.576 126.01 li
126.643 126.413 li
130.71 124.25 li
134.777 125.355 li
138.844 128.447 li
142.912 126.65 li
146.979 132.354 li
151.045 124.159 li
.883 .77 0 0 cmyk
@
33.106 70.0066 mo
37.1732 87.6309 li
41.2395 93.1679 li
45.3074 103.48 li
49.3746 103.442 li
53.4417 107.54 li
57.5096 108.5 li
61.5768 110.945 li
65.6439 109.932 li
69.7103 112.712 li
73.7774 113.153 li
77.8445 117.29 li
81.9117 111.188 li
85.9788 119.521 li
90.0383 117.83 li
94.1055 127.084 li
98.1718 123.93 li
102.24 122.422 li
106.307 124.235 li
110.374 121.783 li
114.442 118.31 li
118.509 130.207 li
122.576 129.909 li
126.643 123.924 li
130.71 125.988 li
134.777 129.3 li
138.844 128.508 li
142.912 123.077 li
146.979 125.774 li
151.045 124.951 li
0 .988 1 0 cmyk
@
33.106 34.0193 mo
37.1732 46.076 li
41.2395 47.5306 li
45.3074 55.147 li
49.3746 65.666 li
53.4417 68.1938 li
57.5096 81.0503 li
61.5768 73.4796 li
65.6439 88.5829 li
69.7103 89.6567 li
73.7774 92.5282 li
77.8445 97.1741 li
81.9117 95.7575 li
85.9788 98.2564 li
90.0383 95.369 li
94.1055 98.9867 li
98.1718 98.5299 li
102.24 96.6943 li
106.307 99.9921 li
110.374 101.113 li
114.442 95.2548 li
118.509 103.465 li
122.576 100.685 li
126.643 103.343 li
130.71 102.079 li
134.777 98.6592 li
138.844 99.4294 li
142.912 107.457 li
146.979 107.555 li
151.045 107.936 li
.836 .211 1 .082 cmyk
@
34.2028 105.156 mo
34.2028 104.56 33.7184 104.074 33.1213 104.074 cv
32.5242 104.074 32.039 104.56 32.039 105.156 cv
32.039 105.753 32.5242 106.237 33.1213 106.237 cv
33.7184 106.237 34.2028 105.753 34.2028 105.156 cv
.746 .676 .668 .898 cmyk
f
.571227 lw
1 lc
10 ml
34.2028 105.156 mo
34.2028 104.56 33.7184 104.075 33.1213 104.075 cv
32.5241 104.075 32.039 104.56 32.039 105.156 cv
32.039 105.753 32.5241 106.238 33.1213 106.238 cv
33.7184 106.238 34.2028 105.753 34.2028 105.156 cv
@
38.3156 115.941 mo
38.3156 115.344 37.8312 114.859 37.2341 114.859 cv
36.6377 114.859 36.1526 115.344 36.1526 115.941 cv
36.1526 116.538 36.6377 117.022 37.2341 117.022 cv
37.8312 117.022 38.3156 116.538 38.3156 115.941 cv
f
38.3156 115.941 mo
38.3156 115.344 37.8312 114.859 37.2341 114.859 cv
36.6377 114.859 36.1526 115.344 36.1526 115.941 cv
36.1526 116.538 36.6377 117.022 37.2341 117.022 cv
37.8312 117.022 38.3156 116.538 38.3156 115.941 cv
@
42.3371 120.328 mo
42.3371 119.732 41.8527 119.246 41.2556 119.246 cv
40.6584 119.246 40.174 119.732 40.174 120.328 cv
40.174 120.925 40.6584 121.409 41.2556 121.409 cv
41.8527 121.409 42.3371 120.925 42.3371 120.328 cv
f
42.3371 120.328 mo
42.3371 119.732 41.8527 119.246 41.2555 119.246 cv
40.6584 119.246 40.174 119.732 40.174 120.328 cv
40.174 120.925 40.6584 121.409 41.2555 121.409 cv
41.8527 121.409 42.3371 120.925 42.3371 120.328 cv
@
46.3585 121.973 mo
46.3585 121.377 45.8733 120.891 45.277 120.891 cv
44.6799 120.891 44.1955 121.377 44.1955 121.973 cv
44.1955 122.57 44.6799 123.055 45.277 123.055 cv
45.8733 123.055 46.3585 122.57 46.3585 121.973 cv
f
46.3585 121.973 mo
46.3585 121.377 45.8733 120.891 45.277 120.891 cv
44.6799 120.891 44.1955 121.377 44.1955 121.973 cv
44.1955 122.57 44.6799 123.055 45.277 123.055 cv
45.8733 123.055 46.3585 122.57 46.3585 121.973 cv
@
50.3792 123.71 mo
50.3792 123.112 49.8955 122.629 49.2984 122.629 cv
48.7013 122.629 48.2169 123.112 48.2169 123.71 cv
48.2169 124.307 48.7013 124.791 49.2984 124.791 cv
49.8955 124.791 50.3792 124.307 50.3792 123.71 cv
f
50.3792 123.71 mo
50.3792 123.112 49.8955 122.629 49.2984 122.629 cv
48.7013 122.629 48.2169 123.112 48.2169 123.71 cv
48.2169 124.307 48.7013 124.791 49.2984 124.791 cv
49.8955 124.791 50.3792 124.307 50.3792 123.71 cv
@
54.5842 126.726 mo
54.5842 126.128 54.0998 125.644 53.5027 125.644 cv
52.9055 125.644 52.4211 126.128 52.4211 126.726 cv
52.4211 127.323 52.9055 127.807 53.5027 127.807 cv
54.0998 127.807 54.5842 127.323 54.5842 126.726 cv
f
54.5842 126.726 mo
54.5842 126.128 54.0998 125.644 53.5026 125.644 cv
52.9055 125.644 52.4211 126.128 52.4211 126.726 cv
52.4211 127.324 52.9055 127.807 53.5026 127.807 cv
54.0998 127.807 54.5842 127.324 54.5842 126.726 cv
@
58.6056 128.005 mo
58.6056 127.409 58.1212 126.924 57.5241 126.924 cv
56.927 126.924 56.4426 127.409 56.4426 128.005 cv
56.4426 128.602 56.927 129.087 57.5241 129.087 cv
58.1212 129.087 58.6056 128.602 58.6056 128.005 cv
f
58.6056 128.005 mo
58.6056 127.409 58.1212 126.924 57.5241 126.924 cv
56.927 126.924 56.4426 127.409 56.4426 128.005 cv
56.4426 128.602 56.927 129.087 57.5241 129.087 cv
58.1212 129.087 58.6056 128.602 58.6056 128.005 cv
@
62.6271 129.925 mo
62.6271 129.327 62.1427 128.844 61.5455 128.844 cv
60.9484 128.844 60.464 129.327 60.464 129.925 cv
60.464 130.522 60.9484 131.007 61.5455 131.007 cv
62.1427 131.007 62.6271 130.522 62.6271 129.925 cv
f
62.6271 129.925 mo
62.6271 129.327 62.1427 128.844 61.5455 128.844 cv
60.9484 128.844 60.464 129.327 60.464 129.925 cv
60.464 130.522 60.9484 131.007 61.5455 131.007 cv
62.1427 131.007 62.6271 130.522 62.6271 129.925 cv
@
66.6492 128.919 mo
66.6492 128.322 66.1641 127.837 65.567 127.837 cv
64.9698 127.837 64.4855 128.322 64.4855 128.919 cv
64.4855 129.516 64.9698 130.001 65.567 130.001 cv
66.1641 130.001 66.6492 129.516 66.6492 128.919 cv
f
66.6492 128.919 mo
66.6492 128.322 66.1641 127.838 65.567 127.838 cv
64.9698 127.838 64.4854 128.322 64.4854 128.919 cv
64.4854 129.516 64.9698 130.001 65.567 130.001 cv
66.1641 130.001 66.6492 129.516 66.6492 128.919 cv
@
70.8527 132.941 mo
70.8527 132.343 70.3683 131.86 69.7712 131.86 cv
69.1741 131.86 68.6904 132.343 68.6904 132.941 cv
68.6904 133.538 69.1741 134.022 69.7712 134.022 cv
70.3683 134.022 70.8527 133.538 70.8527 132.941 cv
f
70.8527 132.941 mo
70.8527 132.343 70.3683 131.86 69.7712 131.86 cv
69.1741 131.86 68.6904 132.343 68.6904 132.941 cv
68.6904 133.538 69.1741 134.022 69.7712 134.022 cv
70.3683 134.022 70.8527 133.538 70.8527 132.941 cv
@
74.8742 131.479 mo
74.8742 130.881 74.3898 130.397 73.7926 130.397 cv
73.1963 130.397 72.7111 130.881 72.7111 131.479 cv
72.7111 132.075 73.1963 132.56 73.7926 132.56 cv
74.3898 132.56 74.8742 132.075 74.8742 131.479 cv
f
74.8742 131.479 mo
74.8742 130.881 74.3898 130.397 73.7926 130.397 cv
73.1963 130.397 72.7111 130.881 72.7111 131.479 cv
72.7111 132.075 73.1963 132.561 73.7926 132.561 cv
74.3898 132.561 74.8742 132.075 74.8742 131.479 cv
@
78.8956 133.124 mo
78.8956 132.527 78.4112 132.042 77.8141 132.042 cv
77.217 132.042 76.7326 132.527 76.7326 133.124 cv
76.7326 133.72 77.217 134.206 77.8141 134.206 cv
78.4112 134.206 78.8956 133.72 78.8956 133.124 cv
f
78.8956 133.124 mo
78.8956 132.527 78.4112 132.042 77.8141 132.042 cv
77.2169 132.042 76.7325 132.527 76.7325 133.124 cv
76.7325 133.72 77.2169 134.206 77.8141 134.206 cv
78.4112 134.206 78.8956 133.72 78.8956 133.124 cv
@
82.9171 133.306 mo
82.9171 132.71 82.4319 132.225 81.8355 132.225 cv
81.2384 132.225 80.754 132.71 80.754 133.306 cv
80.754 133.903 81.2384 134.388 81.8355 134.388 cv
82.4319 134.388 82.9171 133.903 82.9171 133.306 cv
f
82.917 133.306 mo
82.917 132.71 82.4319 132.225 81.8355 132.225 cv
81.2384 132.225 80.754 132.71 80.754 133.306 cv
80.754 133.903 81.2384 134.388 81.8355 134.388 cv
82.4319 134.388 82.917 133.903 82.917 133.306 cv
@
87.1213 135.591 mo
87.1213 134.995 86.6369 134.509 86.0397 134.509 cv
85.4434 134.509 84.9582 134.995 84.9582 135.591 cv
84.9582 136.188 85.4434 136.672 86.0397 136.672 cv
86.6369 136.672 87.1213 136.188 87.1213 135.591 cv
f
87.1213 135.591 mo
87.1213 134.995 86.6369 134.51 86.0397 134.51 cv
85.4434 134.51 84.9582 134.995 84.9582 135.591 cv
84.9582 136.188 85.4434 136.673 86.0397 136.673 cv
86.6369 136.673 87.1213 136.188 87.1213 135.591 cv
@
91.1427 133.489 mo
91.1427 132.892 90.6583 132.407 90.0612 132.407 cv
89.4641 132.407 88.9797 132.892 88.9797 133.489 cv
88.9797 134.086 89.4641 134.57 90.0612 134.57 cv
90.6583 134.57 91.1427 134.086 91.1427 133.489 cv
f
91.1427 133.489 mo
91.1427 132.892 90.6583 132.407 90.0612 132.407 cv
89.4641 132.407 88.9797 132.892 88.9797 133.489 cv
88.9797 134.086 89.4641 134.57 90.0612 134.57 cv
90.6583 134.57 91.1427 134.086 91.1427 133.489 cv
@
95.1641 136.963 mo
95.1641 136.366 94.6798 135.88 94.0826 135.88 cv
93.4855 135.88 93.0011 136.366 93.0011 136.963 cv
93.0011 137.559 93.4855 138.044 94.0826 138.044 cv
94.6798 138.044 95.1641 137.559 95.1641 136.963 cv
f
95.1641 136.963 mo
95.1641 136.366 94.6797 135.88 94.0826 135.88 cv
93.4855 135.88 93.0011 136.366 93.0011 136.963 cv
93.0011 137.559 93.4855 138.044 94.0826 138.044 cv
94.6797 138.044 95.1641 137.559 95.1641 136.963 cv
@
99.1856 137.328 mo
99.1856 136.73 98.7012 136.246 98.1041 136.246 cv
97.507 136.246 97.0226 136.73 97.0226 137.328 cv
97.0226 137.925 97.507 138.409 98.1041 138.409 cv
98.7012 138.409 99.1856 137.925 99.1856 137.328 cv
f
99.1856 137.328 mo
99.1856 136.73 98.7012 136.246 98.1041 136.246 cv
97.5069 136.246 97.0225 136.73 97.0225 137.328 cv
97.0225 137.925 97.5069 138.409 98.1041 138.409 cv
98.7012 138.409 99.1856 137.925 99.1856 137.328 cv
@
103.39 136.596 mo
103.39 135.999 102.905 135.515 102.308 135.515 cv
101.711 135.515 101.227 135.999 101.227 136.596 cv
101.227 137.194 101.711 137.678 102.308 137.678 cv
102.905 137.678 103.39 137.194 103.39 136.596 cv
f
103.39 136.596 mo
103.39 135.999 102.905 135.515 102.308 135.515 cv
101.711 135.515 101.227 135.999 101.227 136.596 cv
101.227 137.194 101.711 137.678 102.308 137.678 cv
102.905 137.678 103.39 137.194 103.39 136.596 cv
@
107.411 135.957 mo
107.411 135.359 106.927 134.876 106.33 134.876 cv
105.733 134.876 105.249 135.359 105.249 135.957 cv
105.249 136.554 105.733 137.038 106.33 137.038 cv
106.927 137.038 107.411 136.554 107.411 135.957 cv
f
107.411 135.957 mo
107.411 135.359 106.927 134.876 106.33 134.876 cv
105.733 134.876 105.249 135.359 105.249 135.957 cv
105.249 136.554 105.733 137.038 106.33 137.038 cv
106.927 137.038 107.411 136.554 107.411 135.957 cv
@
111.433 140.069 mo
111.433 139.473 110.948 138.988 110.351 138.988 cv
109.755 138.988 109.27 139.473 109.27 140.069 cv
109.27 140.667 109.755 141.152 110.351 141.152 cv
110.948 141.152 111.433 140.667 111.433 140.069 cv
f
111.433 140.069 mo
111.433 139.473 110.948 138.988 110.351 138.988 cv
109.755 138.988 109.27 139.473 109.27 140.069 cv
109.27 140.667 109.755 141.152 110.351 141.152 cv
110.948 141.152 111.433 140.667 111.433 140.069 cv
@
115.454 144.091 mo
115.454 143.495 114.97 143.009 114.373 143.009 cv
113.775 143.009 113.291 143.495 113.291 144.091 cv
113.291 144.688 113.775 145.172 114.373 145.172 cv
114.97 145.172 115.454 144.688 115.454 144.091 cv
f
115.454 144.091 mo
115.454 143.495 114.97 143.009 114.373 143.009 cv
113.775 143.009 113.291 143.495 113.291 144.091 cv
113.291 144.688 113.775 145.172 114.373 145.172 cv
114.97 145.172 115.454 144.688 115.454 144.091 cv
@
119.658 142.904 mo
119.658 142.306 119.174 141.822 118.578 141.822 cv
117.98 141.822 117.496 142.306 117.496 142.904 cv
117.496 143.5 117.98 143.985 118.578 143.985 cv
119.174 143.985 119.658 143.5 119.658 142.904 cv
f
119.658 142.904 mo
119.658 142.306 119.174 141.822 118.578 141.822 cv
117.98 141.822 117.496 142.306 117.496 142.904 cv
117.496 143.5 117.98 143.985 118.578 143.985 cv
119.174 143.985 119.658 143.5 119.658 142.904 cv
@
123.68 143.36 mo
123.68 142.763 123.195 142.278 122.598 142.278 cv
122.002 142.278 121.517 142.763 121.517 143.36 cv
121.517 143.957 122.002 144.441 122.598 144.441 cv
123.195 144.441 123.68 143.957 123.68 143.36 cv
f
123.68 143.36 mo
123.68 142.763 123.195 142.278 122.598 142.278 cv
122.002 142.278 121.517 142.763 121.517 143.36 cv
121.517 143.957 122.002 144.441 122.598 144.441 cv
123.195 144.441 123.68 143.957 123.68 143.36 cv
@
127.701 145.097 mo
127.701 144.499 127.217 144.016 126.62 144.016 cv
126.023 144.016 125.538 144.499 125.538 145.097 cv
125.538 145.693 126.023 146.178 126.62 146.178 cv
127.217 146.178 127.701 145.693 127.701 145.097 cv
f
127.701 145.097 mo
127.701 144.499 127.217 144.016 126.62 144.016 cv
126.023 144.016 125.538 144.499 125.538 145.097 cv
125.538 145.693 126.023 146.178 126.62 146.178 cv
127.217 146.178 127.701 145.693 127.701 145.097 cv
@
131.723 144.639 mo
131.723 144.043 131.238 143.558 130.641 143.558 cv
130.044 143.558 129.56 144.043 129.56 144.639 cv
129.56 145.236 130.044 145.721 130.641 145.721 cv
131.238 145.721 131.723 145.236 131.723 144.639 cv
f
131.723 144.639 mo
131.723 144.043 131.238 143.558 130.641 143.558 cv
130.044 143.558 129.56 144.043 129.56 144.639 cv
129.56 145.236 130.044 145.722 130.641 145.722 cv
131.238 145.722 131.723 145.236 131.723 144.639 cv
@
135.927 142.995 mo
135.927 142.398 135.443 141.913 134.845 141.913 cv
134.249 141.913 133.764 142.398 133.764 142.995 cv
133.764 143.591 134.249 144.076 134.845 144.076 cv
135.443 144.076 135.927 143.591 135.927 142.995 cv
f
135.927 142.995 mo
135.927 142.398 135.442 141.913 134.845 141.913 cv
134.249 141.913 133.764 142.398 133.764 142.995 cv
133.764 143.591 134.249 144.076 134.845 144.076 cv
135.442 144.076 135.927 143.591 135.927 142.995 cv
@
139.948 144.274 mo
139.948 143.677 139.464 143.193 138.867 143.193 cv
138.27 143.193 137.785 143.677 137.785 144.274 cv
137.785 144.872 138.27 145.355 138.867 145.355 cv
139.464 145.355 139.948 144.872 139.948 144.274 cv
f
139.948 144.274 mo
139.948 143.677 139.464 143.193 138.867 143.193 cv
138.27 143.193 137.785 143.677 137.785 144.274 cv
137.785 144.872 138.27 145.355 138.867 145.355 cv
139.464 145.355 139.948 144.872 139.948 144.274 cv
@
143.97 145.188 mo
143.97 144.591 143.486 144.107 142.888 144.107 cv
142.292 144.107 141.807 144.591 141.807 145.188 cv
141.807 145.785 142.292 146.27 142.888 146.27 cv
143.486 146.27 143.97 145.785 143.97 145.188 cv
f
143.97 145.188 mo
143.97 144.591 143.486 144.107 142.888 144.107 cv
142.292 144.107 141.807 144.591 141.807 145.188 cv
141.807 145.785 142.292 146.27 142.888 146.27 cv
143.486 146.27 143.97 145.785 143.97 145.188 cv
@
147.992 141.533 mo
147.992 140.935 147.508 140.45 146.911 140.45 cv
146.313 140.45 145.829 140.935 145.829 141.533 cv
145.829 142.129 146.313 142.614 146.911 142.614 cv
147.508 142.614 147.992 142.129 147.992 141.533 cv
f
147.992 141.533 mo
147.992 140.935 147.508 140.45 146.91 140.45 cv
146.313 140.45 145.829 140.935 145.829 141.533 cv
145.829 142.129 146.313 142.614 146.91 142.614 cv
147.508 142.614 147.992 142.129 147.992 141.533 cv
@
152.195 142.081 mo
152.195 141.483 151.711 140.999 151.114 140.999 cv
150.518 140.999 150.032 141.483 150.032 142.081 cv
150.032 142.677 150.518 143.162 151.114 143.162 cv
151.711 143.162 152.195 142.677 152.195 142.081 cv
f
152.195 142.081 mo
152.195 141.483 151.711 140.999 151.114 140.999 cv
150.518 140.999 150.032 141.483 150.032 142.081 cv
150.032 142.677 150.518 143.162 151.114 143.162 cv
151.711 143.162 152.195 142.677 152.195 142.081 cv
@
34.2028 75.4522 mo
34.2028 74.8551 33.7184 74.3707 33.1213 74.3707 cv
32.5242 74.3707 32.039 74.8551 32.039 75.4522 cv
32.039 76.0494 32.5242 76.5338 33.1213 76.5338 cv
33.7184 76.5338 34.2028 76.0494 34.2028 75.4522 cv
.883 .77 0 0 cmyk
f
34.2028 75.4523 mo
34.2028 74.8551 33.7184 74.3708 33.1213 74.3708 cv
32.5241 74.3708 32.039 74.8551 32.039 75.4523 cv
32.039 76.0494 32.5241 76.5338 33.1213 76.5338 cv
33.7184 76.5338 34.2028 76.0494 34.2028 75.4523 cv
@
38.3156 80.479 mo
38.3156 79.8819 37.8312 79.3975 37.2341 79.3975 cv
36.6377 79.3975 36.1526 79.8819 36.1526 80.479 cv
36.1526 81.0762 36.6377 81.5613 37.2341 81.5613 cv
37.8312 81.5613 38.3156 81.0762 38.3156 80.479 cv
f
38.3156 80.4791 mo
38.3156 79.882 37.8312 79.3975 37.2341 79.3975 cv
36.6377 79.3975 36.1526 79.882 36.1526 80.4791 cv
36.1526 81.0762 36.6377 81.5613 37.2341 81.5613 cv
37.8312 81.5613 38.3156 81.0762 38.3156 80.4791 cv
@
42.3371 86.3284 mo
42.3371 85.7313 41.8527 85.2469 41.2556 85.2469 cv
40.6584 85.2469 40.174 85.7313 40.174 86.3284 cv
40.174 86.9255 40.6584 87.4099 41.2556 87.4099 cv
41.8527 87.4099 42.3371 86.9255 42.3371 86.3284 cv
f
42.3371 86.3283 mo
42.3371 85.7313 41.8527 85.2469 41.2555 85.2469 cv
40.6584 85.2469 40.174 85.7313 40.174 86.3283 cv
40.174 86.9256 40.6584 87.4099 41.2555 87.4099 cv
41.8527 87.4099 42.3371 86.9256 42.3371 86.3283 cv
@
46.3585 92.9089 mo
46.3585 92.3118 45.8733 91.8274 45.277 91.8274 cv
44.6799 91.8274 44.1955 92.3118 44.1955 92.9089 cv
44.1955 93.5061 44.6799 93.9904 45.277 93.9904 cv
45.8733 93.9904 46.3585 93.5061 46.3585 92.9089 cv
f
46.3585 92.909 mo
46.3585 92.3119 45.8733 91.8274 45.277 91.8274 cv
44.6799 91.8274 44.1955 92.3119 44.1955 92.909 cv
44.1955 93.5061 44.6799 93.9904 45.277 93.9904 cv
45.8733 93.9904 46.3585 93.5061 46.3585 92.909 cv
@
50.3792 100.953 mo
50.3792 100.355 49.8955 99.871 49.2984 99.871 cv
48.7013 99.871 48.2169 100.355 48.2169 100.953 cv
48.2169 101.549 48.7013 102.033 49.2984 102.033 cv
49.8955 102.033 50.3792 101.549 50.3792 100.953 cv
f
50.3792 100.953 mo
50.3792 100.355 49.8955 99.8711 49.2984 99.8711 cv
48.7013 99.8711 48.2169 100.355 48.2169 100.953 cv
48.2169 101.549 48.7013 102.033 49.2984 102.033 cv
49.8955 102.033 50.3792 101.549 50.3792 100.953 cv
@
54.5842 100.769 mo
54.5842 100.172 54.0998 99.6875 53.5027 99.6875 cv
52.9055 99.6875 52.4211 100.172 52.4211 100.769 cv
52.4211 101.366 52.9055 101.85 53.5027 101.85 cv
54.0998 101.85 54.5842 101.366 54.5842 100.769 cv
f
54.5842 100.769 mo
54.5842 100.172 54.0998 99.6875 53.5026 99.6875 cv
52.9055 99.6875 52.4211 100.172 52.4211 100.769 cv
52.4211 101.366 52.9055 101.851 53.5026 101.851 cv
54.0998 101.851 54.5842 101.366 54.5842 100.769 cv
@
58.6056 99.3988 mo
58.6056 98.801 58.1212 98.3173 57.5241 98.3173 cv
56.927 98.3173 56.4426 98.801 56.4426 99.3988 cv
56.4426 99.9952 56.927 100.48 57.5241 100.48 cv
58.1212 100.48 58.6056 99.9952 58.6056 99.3988 cv
f
58.6056 99.3989 mo
58.6056 98.801 58.1212 98.3173 57.5241 98.3173 cv
56.927 98.3173 56.4426 98.801 56.4426 99.3989 cv
56.4426 99.9952 56.927 100.48 57.5241 100.48 cv
58.1212 100.48 58.6056 99.9952 58.6056 99.3989 cv
@
62.6271 105.887 mo
62.6271 105.291 62.1427 104.806 61.5455 104.806 cv
60.9484 104.806 60.464 105.291 60.464 105.887 cv
60.464 106.484 60.9484 106.969 61.5455 106.969 cv
62.1427 106.969 62.6271 106.484 62.6271 105.887 cv
f
62.6271 105.887 mo
62.6271 105.291 62.1427 104.806 61.5455 104.806 cv
60.9484 104.806 60.464 105.291 60.464 105.887 cv
60.464 106.484 60.9484 106.969 61.5455 106.969 cv
62.1427 106.969 62.6271 106.484 62.6271 105.887 cv
@
66.6492 112.469 mo
66.6492 111.871 66.1641 111.387 65.567 111.387 cv
64.9698 111.387 64.4855 111.871 64.4855 112.469 cv
64.4855 113.065 64.9698 113.55 65.567 113.55 cv
66.1641 113.55 66.6492 113.065 66.6492 112.469 cv
f
66.6492 112.469 mo
66.6492 111.871 66.1641 111.387 65.567 111.387 cv
64.9698 111.387 64.4854 111.871 64.4854 112.469 cv
64.4854 113.065 64.9698 113.55 65.567 113.55 cv
66.1641 113.55 66.6492 113.065 66.6492 112.469 cv
@
70.8527 113.016 mo
70.8527 112.419 70.3683 111.935 69.7712 111.935 cv
69.1741 111.935 68.6904 112.419 68.6904 113.016 cv
68.6904 113.614 69.1741 114.098 69.7712 114.098 cv
70.3683 114.098 70.8527 113.614 70.8527 113.016 cv
f
70.8527 113.016 mo
70.8527 112.419 70.3683 111.935 69.7712 111.935 cv
69.1741 111.935 68.6904 112.419 68.6904 113.016 cv
68.6904 113.614 69.1741 114.098 69.7712 114.098 cv
70.3683 114.098 70.8527 113.614 70.8527 113.016 cv
@
74.8742 113.565 mo
74.8742 112.968 74.3898 112.483 73.7926 112.483 cv
73.1963 112.483 72.7111 112.968 72.7111 113.565 cv
72.7111 114.162 73.1963 114.646 73.7926 114.646 cv
74.3898 114.646 74.8742 114.162 74.8742 113.565 cv
f
74.8742 113.565 mo
74.8742 112.968 74.3898 112.483 73.7926 112.483 cv
73.1963 112.483 72.7111 112.968 72.7111 113.565 cv
72.7111 114.162 73.1963 114.646 73.7926 114.646 cv
74.3898 114.646 74.8742 114.162 74.8742 113.565 cv
@
78.8956 116.672 mo
78.8956 116.076 78.4112 115.591 77.8141 115.591 cv
77.217 115.591 76.7326 116.076 76.7326 116.672 cv
76.7326 117.269 77.217 117.754 77.8141 117.754 cv
78.4112 117.754 78.8956 117.269 78.8956 116.672 cv
f
78.8956 116.672 mo
78.8956 116.076 78.4112 115.59 77.8141 115.59 cv
77.2169 115.59 76.7325 116.076 76.7325 116.672 cv
76.7325 117.269 77.2169 117.754 77.8141 117.754 cv
78.4112 117.754 78.8956 117.269 78.8956 116.672 cv
@
82.9171 117.952 mo
82.9171 117.355 82.4319 116.87 81.8355 116.87 cv
81.2384 116.87 80.754 117.355 80.754 117.952 cv
80.754 118.549 81.2384 119.034 81.8355 119.034 cv
82.4319 119.034 82.9171 118.549 82.9171 117.952 cv
f
82.917 117.952 mo
82.917 117.355 82.4319 116.87 81.8355 116.87 cv
81.2384 116.87 80.754 117.355 80.754 117.952 cv
80.754 118.549 81.2384 119.034 81.8355 119.034 cv
82.4319 119.034 82.917 118.549 82.917 117.952 cv
@
87.1213 117.312 mo
87.1213 116.715 86.6369 116.23 86.0397 116.23 cv
85.4434 116.23 84.9582 116.715 84.9582 117.312 cv
84.9582 117.909 85.4434 118.393 86.0397 118.393 cv
86.6369 118.393 87.1213 117.909 87.1213 117.312 cv
f
87.1213 117.312 mo
87.1213 116.715 86.6369 116.23 86.0397 116.23 cv
85.4434 116.23 84.9582 116.715 84.9582 117.312 cv
84.9582 117.909 85.4434 118.393 86.0397 118.393 cv
86.6369 118.393 87.1213 117.909 87.1213 117.312 cv
@
91.1427 118.501 mo
91.1427 117.903 90.6583 117.419 90.0612 117.419 cv
89.4641 117.419 88.9797 117.903 88.9797 118.501 cv
88.9797 119.097 89.4641 119.582 90.0612 119.582 cv
90.6583 119.582 91.1427 119.097 91.1427 118.501 cv
f
91.1427 118.501 mo
91.1427 117.903 90.6583 117.419 90.0612 117.419 cv
89.4641 117.419 88.9797 117.903 88.9797 118.501 cv
88.9797 119.097 89.4641 119.582 90.0612 119.582 cv
90.6583 119.582 91.1427 119.097 91.1427 118.501 cv
@
95.1641 126.178 mo
95.1641 125.58 94.6798 125.096 94.0826 125.096 cv
93.4855 125.096 93.0011 125.58 93.0011 126.178 cv
93.0011 126.774 93.4855 127.259 94.0826 127.259 cv
94.6798 127.259 95.1641 126.774 95.1641 126.178 cv
f
95.1641 126.178 mo
95.1641 125.58 94.6797 125.096 94.0826 125.096 cv
93.4855 125.096 93.0011 125.58 93.0011 126.178 cv
93.0011 126.774 93.4855 127.259 94.0826 127.259 cv
94.6797 127.259 95.1641 126.774 95.1641 126.178 cv
@
99.1856 119.871 mo
99.1856 119.274 98.7012 118.789 98.1041 118.789 cv
97.507 118.789 97.0226 119.274 97.0226 119.871 cv
97.0226 120.469 97.507 120.952 98.1041 120.952 cv
98.7012 120.952 99.1856 120.469 99.1856 119.871 cv
f
99.1856 119.871 mo
99.1856 119.274 98.7012 118.789 98.1041 118.789 cv
97.5069 118.789 97.0225 119.274 97.0225 119.871 cv
97.0225 120.469 97.5069 120.952 98.1041 120.952 cv
98.7012 120.952 99.1856 120.469 99.1856 119.871 cv
@
103.39 123.07 mo
103.39 122.473 102.905 121.989 102.308 121.989 cv
101.711 121.989 101.227 122.473 101.227 123.07 cv
101.227 123.667 101.711 124.152 102.308 124.152 cv
102.905 124.152 103.39 123.667 103.39 123.07 cv
f
103.39 123.07 mo
103.39 122.473 102.905 121.989 102.308 121.989 cv
101.711 121.989 101.227 122.473 101.227 123.07 cv
101.227 123.667 101.711 124.152 102.308 124.152 cv
102.905 124.152 103.39 123.667 103.39 123.07 cv
@
107.411 121.059 mo
107.411 120.463 106.927 119.978 106.33 119.978 cv
105.733 119.978 105.249 120.463 105.249 121.059 cv
105.249 121.656 105.733 122.141 106.33 122.141 cv
106.927 122.141 107.411 121.656 107.411 121.059 cv
f
107.411 121.059 mo
107.411 120.463 106.927 119.978 106.33 119.978 cv
105.733 119.978 105.249 120.463 105.249 121.059 cv
105.249 121.656 105.733 122.141 106.33 122.141 cv
106.927 122.141 107.411 121.656 107.411 121.059 cv
@
111.433 122.887 mo
111.433 122.29 110.948 121.805 110.351 121.805 cv
109.755 121.805 109.27 122.29 109.27 122.887 cv
109.27 123.485 109.755 123.969 110.351 123.969 cv
110.948 123.969 111.433 123.485 111.433 122.887 cv
f
111.433 122.887 mo
111.433 122.29 110.948 121.805 110.351 121.805 cv
109.755 121.805 109.27 122.29 109.27 122.887 cv
109.27 123.485 109.755 123.968 110.351 123.968 cv
110.948 123.968 111.433 123.485 111.433 122.887 cv
@
115.454 128.919 mo
115.454 128.322 114.97 127.837 114.373 127.837 cv
113.775 127.837 113.291 128.322 113.291 128.919 cv
113.291 129.516 113.775 130.001 114.373 130.001 cv
114.97 130.001 115.454 129.516 115.454 128.919 cv
f
115.454 128.919 mo
115.454 128.322 114.97 127.838 114.373 127.838 cv
113.775 127.838 113.291 128.322 113.291 128.919 cv
113.291 129.516 113.775 130.001 114.373 130.001 cv
114.97 130.001 115.454 129.516 115.454 128.919 cv
@
119.658 129.194 mo
119.658 128.596 119.174 128.112 118.578 128.112 cv
117.98 128.112 117.496 128.596 117.496 129.194 cv
117.496 129.79 117.98 130.276 118.578 130.276 cv
119.174 130.276 119.658 129.79 119.658 129.194 cv
f
119.658 129.194 mo
119.658 128.596 119.174 128.113 118.578 128.113 cv
117.98 128.113 117.496 128.596 117.496 129.194 cv
117.496 129.79 117.98 130.276 118.578 130.276 cv
119.174 130.276 119.658 129.79 119.658 129.194 cv
@
123.68 125.994 mo
123.68 125.397 123.195 124.914 122.598 124.914 cv
122.002 124.914 121.517 125.397 121.517 125.994 cv
121.517 126.592 122.002 127.076 122.598 127.076 cv
123.195 127.076 123.68 126.592 123.68 125.994 cv
f
123.68 125.994 mo
123.68 125.397 123.195 124.914 122.598 124.914 cv
122.002 124.914 121.517 125.397 121.517 125.994 cv
121.517 126.592 122.002 127.076 122.598 127.076 cv
123.195 127.076 123.68 126.592 123.68 125.994 cv
@
127.701 126.36 mo
127.701 125.764 127.217 125.278 126.62 125.278 cv
126.023 125.278 125.538 125.764 125.538 126.36 cv
125.538 126.957 126.023 127.442 126.62 127.442 cv
127.217 127.442 127.701 126.957 127.701 126.36 cv
f
127.701 126.36 mo
127.701 125.764 127.217 125.279 126.62 125.279 cv
126.023 125.279 125.538 125.764 125.538 126.36 cv
125.538 126.957 126.023 127.442 126.62 127.442 cv
127.217 127.442 127.701 126.957 127.701 126.36 cv
@
131.723 124.258 mo
131.723 123.661 131.238 123.176 130.641 123.176 cv
130.044 123.176 129.56 123.661 129.56 124.258 cv
129.56 124.855 130.044 125.339 130.641 125.339 cv
131.238 125.339 131.723 124.855 131.723 124.258 cv
f
131.723 124.258 mo
131.723 123.662 131.238 123.176 130.641 123.176 cv
130.044 123.176 129.56 123.662 129.56 124.258 cv
129.56 124.855 130.044 125.339 130.641 125.339 cv
131.238 125.339 131.723 124.855 131.723 124.258 cv
@
135.927 125.355 mo
135.927 124.758 135.443 124.274 134.845 124.274 cv
134.249 124.274 133.764 124.758 133.764 125.355 cv
133.764 125.952 134.249 126.437 134.845 126.437 cv
135.443 126.437 135.927 125.952 135.927 125.355 cv
f
135.927 125.355 mo
135.927 124.758 135.442 124.274 134.845 124.274 cv
134.249 124.274 133.764 124.758 133.764 125.355 cv
133.764 125.952 134.249 126.437 134.845 126.437 cv
135.442 126.437 135.927 125.952 135.927 125.355 cv
@
139.948 128.463 mo
139.948 127.865 139.464 127.381 138.867 127.381 cv
138.27 127.381 137.785 127.865 137.785 128.463 cv
137.785 129.059 138.27 129.544 138.867 129.544 cv
139.464 129.544 139.948 129.059 139.948 128.463 cv
f
139.948 128.463 mo
139.948 127.865 139.464 127.381 138.867 127.381 cv
138.27 127.381 137.785 127.865 137.785 128.463 cv
137.785 129.059 138.27 129.544 138.867 129.544 cv
139.464 129.544 139.948 129.059 139.948 128.463 cv
@
143.97 126.634 mo
143.97 126.037 143.486 125.553 142.888 125.553 cv
142.292 125.553 141.807 126.037 141.807 126.634 cv
141.807 127.231 142.292 127.716 142.888 127.716 cv
143.486 127.716 143.97 127.231 143.97 126.634 cv
f
143.97 126.634 mo
143.97 126.037 143.486 125.553 142.888 125.553 cv
142.292 125.553 141.807 126.037 141.807 126.634 cv
141.807 127.231 142.292 127.716 142.888 127.716 cv
143.486 127.716 143.97 127.231 143.97 126.634 cv
@
147.992 132.393 mo
147.992 131.796 147.508 131.311 146.911 131.311 cv
146.313 131.311 145.829 131.796 145.829 132.393 cv
145.829 132.989 146.313 133.474 146.911 133.474 cv
147.508 133.474 147.992 132.989 147.992 132.393 cv
f
147.992 132.393 mo
147.992 131.796 147.508 131.311 146.91 131.311 cv
146.313 131.311 145.829 131.796 145.829 132.393 cv
145.829 132.989 146.313 133.474 146.91 133.474 cv
147.508 133.474 147.992 132.989 147.992 132.393 cv
@
152.195 124.167 mo
152.195 123.57 151.711 123.085 151.114 123.085 cv
150.518 123.085 150.032 123.57 150.032 124.167 cv
150.032 124.764 150.518 125.248 151.114 125.248 cv
151.711 125.248 152.195 124.764 152.195 124.167 cv
f
152.195 124.167 mo
152.195 123.57 151.711 123.085 151.114 123.085 cv
150.518 123.085 150.032 123.57 150.032 124.167 cv
150.032 124.764 150.518 125.248 151.114 125.248 cv
151.711 125.248 152.195 124.764 152.195 124.167 cv
@
34.2028 70.0598 mo
34.2028 69.4627 33.7184 68.9783 33.1213 68.9783 cv
32.5242 68.9783 32.039 69.4627 32.039 70.0598 cv
32.039 70.657 32.5242 71.1414 33.1213 71.1414 cv
33.7184 71.1414 34.2028 70.657 34.2028 70.0598 cv
0 .988 1 0 cmyk
f
34.2028 70.0599 mo
34.2028 69.4628 33.7184 68.9784 33.1213 68.9784 cv
32.5241 68.9784 32.039 69.4628 32.039 70.0599 cv
32.039 70.657 32.5241 71.1413 33.1213 71.1413 cv
33.7184 71.1413 34.2028 70.657 34.2028 70.0599 cv
@
38.3156 87.608 mo
38.3156 87.0108 37.8312 86.5264 37.2341 86.5264 cv
36.6377 86.5264 36.1526 87.0108 36.1526 87.608 cv
36.1526 88.2051 36.6377 88.6895 37.2341 88.6895 cv
37.8312 88.6895 38.3156 88.2051 38.3156 87.608 cv
f
38.3156 87.608 mo
38.3156 87.0108 37.8312 86.5265 37.2341 86.5265 cv
36.6377 86.5265 36.1526 87.0108 36.1526 87.608 cv
36.1526 88.2051 36.6377 88.6895 37.2341 88.6895 cv
37.8312 88.6895 38.3156 88.2051 38.3156 87.608 cv
@
42.3371 93.1831 mo
42.3371 92.586 41.8527 92.1016 41.2556 92.1016 cv
40.6584 92.1016 40.174 92.586 40.174 93.1831 cv
40.174 93.7803 40.6584 94.2646 41.2556 94.2646 cv
41.8527 94.2646 42.3371 93.7803 42.3371 93.1831 cv
f
42.3371 93.1831 mo
42.3371 92.5861 41.8527 92.1017 41.2555 92.1017 cv
40.6584 92.1017 40.174 92.5861 40.174 93.1831 cv
40.174 93.7803 40.6584 94.2647 41.2555 94.2647 cv
41.8527 94.2647 42.3371 93.7803 42.3371 93.1831 cv
@
46.3585 103.511 mo
46.3585 102.915 45.8733 102.429 45.277 102.429 cv
44.6799 102.429 44.1955 102.915 44.1955 103.511 cv
44.1955 104.108 44.6799 104.593 45.277 104.593 cv
45.8733 104.593 46.3585 104.108 46.3585 103.511 cv
f
46.3585 103.511 mo
46.3585 102.915 45.8733 102.429 45.277 102.429 cv
44.6799 102.429 44.1955 102.915 44.1955 103.511 cv
44.1955 104.108 44.6799 104.593 45.277 104.593 cv
45.8733 104.593 46.3585 104.108 46.3585 103.511 cv
@
50.3792 103.511 mo
50.3792 102.915 49.8955 102.429 49.2984 102.429 cv
48.7013 102.429 48.2169 102.915 48.2169 103.511 cv
48.2169 104.108 48.7013 104.593 49.2984 104.593 cv
49.8955 104.593 50.3792 104.108 50.3792 103.511 cv
f
50.3792 103.511 mo
50.3792 102.915 49.8955 102.429 49.2984 102.429 cv
48.7013 102.429 48.2169 102.915 48.2169 103.511 cv
48.2169 104.108 48.7013 104.593 49.2984 104.593 cv
49.8955 104.593 50.3792 104.108 50.3792 103.511 cv
@
54.5842 107.532 mo
54.5842 106.936 54.0998 106.451 53.5027 106.451 cv
52.9055 106.451 52.4211 106.936 52.4211 107.532 cv
52.4211 108.129 52.9055 108.614 53.5027 108.614 cv
54.0998 108.614 54.5842 108.129 54.5842 107.532 cv
f
54.5842 107.532 mo
54.5842 106.936 54.0998 106.451 53.5026 106.451 cv
52.9055 106.451 52.4211 106.936 52.4211 107.532 cv
52.4211 108.129 52.9055 108.614 53.5026 108.614 cv
54.0998 108.614 54.5842 108.129 54.5842 107.532 cv
@
58.6056 108.446 mo
58.6056 107.849 58.1212 107.365 57.5241 107.365 cv
56.927 107.365 56.4426 107.849 56.4426 108.446 cv
56.4426 109.044 56.927 109.528 57.5241 109.528 cv
58.1212 109.528 58.6056 109.044 58.6056 108.446 cv
f
58.6056 108.446 mo
58.6056 107.849 58.1212 107.365 57.5241 107.365 cv
56.927 107.365 56.4426 107.849 56.4426 108.446 cv
56.4426 109.044 56.927 109.528 57.5241 109.528 cv
58.1212 109.528 58.6056 109.044 58.6056 108.446 cv
@
62.6271 111.006 mo
62.6271 110.409 62.1427 109.925 61.5455 109.925 cv
60.9484 109.925 60.464 110.409 60.464 111.006 cv
60.464 111.603 60.9484 112.088 61.5455 112.088 cv
62.1427 112.088 62.6271 111.603 62.6271 111.006 cv
f
62.6271 111.006 mo
62.6271 110.409 62.1427 109.925 61.5455 109.925 cv
60.9484 109.925 60.464 110.409 60.464 111.006 cv
60.464 111.603 60.9484 112.088 61.5455 112.088 cv
62.1427 112.088 62.6271 111.603 62.6271 111.006 cv
@
66.6492 109.909 mo
66.6492 109.311 66.1641 108.827 65.567 108.827 cv
64.9698 108.827 64.4855 109.311 64.4855 109.909 cv
64.4855 110.506 64.9698 110.99 65.567 110.99 cv
66.1641 110.99 66.6492 110.506 66.6492 109.909 cv
f
66.6492 109.909 mo
66.6492 109.312 66.1641 108.827 65.567 108.827 cv
64.9698 108.827 64.4854 109.312 64.4854 109.909 cv
64.4854 110.506 64.9698 110.99 65.567 110.99 cv
66.1641 110.99 66.6492 110.506 66.6492 109.909 cv
@
70.8527 112.651 mo
70.8527 112.054 70.3683 111.569 69.7712 111.569 cv
69.1741 111.569 68.6904 112.054 68.6904 112.651 cv
68.6904 113.248 69.1741 113.733 69.7712 113.733 cv
70.3683 113.733 70.8527 113.248 70.8527 112.651 cv
f
70.8527 112.65 mo
70.8527 112.054 70.3683 111.569 69.7712 111.569 cv
69.1741 111.569 68.6904 112.054 68.6904 112.65 cv
68.6904 113.248 69.1741 113.733 69.7712 113.733 cv
70.3683 113.733 70.8527 113.248 70.8527 112.65 cv
@
74.8742 113.2 mo
74.8742 112.602 74.3898 112.118 73.7926 112.118 cv
73.1963 112.118 72.7111 112.602 72.7111 113.2 cv
72.7111 113.796 73.1963 114.281 73.7926 114.281 cv
74.3898 114.281 74.8742 113.796 74.8742 113.2 cv
f
74.8742 113.2 mo
74.8742 112.602 74.3898 112.118 73.7926 112.118 cv
73.1963 112.118 72.7111 112.602 72.7111 113.2 cv
72.7111 113.796 73.1963 114.281 73.7926 114.281 cv
74.3898 114.281 74.8742 113.796 74.8742 113.2 cv
@
78.8956 117.22 mo
78.8956 116.624 78.4112 116.139 77.8141 116.139 cv
77.217 116.139 76.7326 116.624 76.7326 117.22 cv
76.7326 117.818 77.217 118.303 77.8141 118.303 cv
78.4112 118.303 78.8956 117.818 78.8956 117.22 cv
f
78.8956 117.22 mo
78.8956 116.624 78.4112 116.139 77.8141 116.139 cv
77.2169 116.139 76.7325 116.624 76.7325 117.22 cv
76.7325 117.818 77.2169 118.303 77.8141 118.303 cv
78.4112 118.303 78.8956 117.818 78.8956 117.22 cv
@
82.9171 111.188 mo
82.9171 110.592 82.4319 110.107 81.8355 110.107 cv
81.2384 110.107 80.754 110.592 80.754 111.188 cv
80.754 111.785 81.2384 112.27 81.8355 112.27 cv
82.4319 112.27 82.9171 111.785 82.9171 111.188 cv
f
82.917 111.188 mo
82.917 110.592 82.4319 110.107 81.8355 110.107 cv
81.2384 110.107 80.754 110.592 80.754 111.188 cv
80.754 111.785 81.2384 112.27 81.8355 112.27 cv
82.4319 112.27 82.917 111.785 82.917 111.188 cv
@
87.1213 119.505 mo
87.1213 118.909 86.6369 118.424 86.0397 118.424 cv
85.4434 118.424 84.9582 118.909 84.9582 119.505 cv
84.9582 120.102 85.4434 120.587 86.0397 120.587 cv
86.6369 120.587 87.1213 120.102 87.1213 119.505 cv
f
87.1213 119.505 mo
87.1213 118.909 86.6369 118.424 86.0397 118.424 cv
85.4434 118.424 84.9582 118.909 84.9582 119.505 cv
84.9582 120.102 85.4434 120.588 86.0397 120.588 cv
86.6369 120.588 87.1213 120.102 87.1213 119.505 cv
@
91.1427 117.77 mo
91.1427 117.172 90.6583 116.688 90.0612 116.688 cv
89.4641 116.688 88.9797 117.172 88.9797 117.77 cv
88.9797 118.366 89.4641 118.851 90.0612 118.851 cv
90.6583 118.851 91.1427 118.366 91.1427 117.77 cv
f
91.1427 117.77 mo
91.1427 117.172 90.6583 116.688 90.0612 116.688 cv
89.4641 116.688 88.9797 117.172 88.9797 117.77 cv
88.9797 118.366 89.4641 118.851 90.0612 118.851 cv
90.6583 118.851 91.1427 118.366 91.1427 117.77 cv
@
95.1641 127.091 mo
95.1641 126.495 94.6798 126.01 94.0826 126.01 cv
93.4855 126.01 93.0011 126.495 93.0011 127.091 cv
93.0011 127.688 93.4855 128.173 94.0826 128.173 cv
94.6798 128.173 95.1641 127.688 95.1641 127.091 cv
f
95.1641 127.091 mo
95.1641 126.495 94.6797 126.01 94.0826 126.01 cv
93.4855 126.01 93.0011 126.495 93.0011 127.091 cv
93.0011 127.688 93.4855 128.173 94.0826 128.173 cv
94.6797 128.173 95.1641 127.688 95.1641 127.091 cv
@
99.1856 123.984 mo
99.1856 123.387 98.7012 122.902 98.1041 122.902 cv
97.507 122.902 97.0226 123.387 97.0226 123.984 cv
97.0226 124.581 97.507 125.066 98.1041 125.066 cv
98.7012 125.066 99.1856 124.581 99.1856 123.984 cv
f
99.1856 123.984 mo
99.1856 123.387 98.7012 122.902 98.1041 122.902 cv
97.5069 122.902 97.0225 123.387 97.0225 123.984 cv
97.0225 124.581 97.5069 125.066 98.1041 125.066 cv
98.7012 125.066 99.1856 124.581 99.1856 123.984 cv
@
103.39 122.431 mo
103.39 121.834 102.905 121.349 102.308 121.349 cv
101.711 121.349 101.227 121.834 101.227 122.431 cv
101.227 123.027 101.711 123.512 102.308 123.512 cv
102.905 123.512 103.39 123.027 103.39 122.431 cv
f
103.39 122.431 mo
103.39 121.834 102.905 121.349 102.308 121.349 cv
101.711 121.349 101.227 121.834 101.227 122.431 cv
101.227 123.027 101.711 123.512 102.308 123.512 cv
102.905 123.512 103.39 123.027 103.39 122.431 cv
@
107.411 124.167 mo
107.411 123.57 106.927 123.085 106.33 123.085 cv
105.733 123.085 105.249 123.57 105.249 124.167 cv
105.249 124.764 105.733 125.248 106.33 125.248 cv
106.927 125.248 107.411 124.764 107.411 124.167 cv
f
107.411 124.167 mo
107.411 123.57 106.927 123.085 106.33 123.085 cv
105.733 123.085 105.249 123.57 105.249 124.167 cv
105.249 124.764 105.733 125.248 106.33 125.248 cv
106.927 125.248 107.411 124.764 107.411 124.167 cv
@
111.433 121.79 mo
111.433 121.194 110.948 120.709 110.351 120.709 cv
109.755 120.709 109.27 121.194 109.27 121.79 cv
109.27 122.387 109.755 122.872 110.351 122.872 cv
110.948 122.872 111.433 122.387 111.433 121.79 cv
f
111.433 121.79 mo
111.433 121.194 110.948 120.709 110.351 120.709 cv
109.755 120.709 109.27 121.194 109.27 121.79 cv
109.27 122.387 109.755 122.873 110.351 122.873 cv
110.948 122.873 111.433 122.387 111.433 121.79 cv
@
115.454 118.317 mo
115.454 117.72 114.97 117.236 114.373 117.236 cv
113.775 117.236 113.291 117.72 113.291 118.317 cv
113.291 118.915 113.775 119.399 114.373 119.399 cv
114.97 119.399 115.454 118.915 115.454 118.317 cv
f
115.454 118.317 mo
115.454 117.72 114.97 117.236 114.373 117.236 cv
113.775 117.236 113.291 117.72 113.291 118.317 cv
113.291 118.915 113.775 119.399 114.373 119.399 cv
114.97 119.399 115.454 118.915 115.454 118.317 cv
@
119.658 130.199 mo
119.658 129.602 119.174 129.117 118.578 129.117 cv
117.98 129.117 117.496 129.602 117.496 130.199 cv
117.496 130.796 117.98 131.28 118.578 131.28 cv
119.174 131.28 119.658 130.796 119.658 130.199 cv
f
119.658 130.199 mo
119.658 129.602 119.174 129.117 118.578 129.117 cv
117.98 129.117 117.496 129.602 117.496 130.199 cv
117.496 130.796 117.98 131.28 118.578 131.28 cv
119.174 131.28 119.658 130.796 119.658 130.199 cv
@
123.68 129.925 mo
123.68 129.327 123.195 128.844 122.598 128.844 cv
122.002 128.844 121.517 129.327 121.517 129.925 cv
121.517 130.522 122.002 131.007 122.598 131.007 cv
123.195 131.007 123.68 130.522 123.68 129.925 cv
f
123.68 129.925 mo
123.68 129.327 123.195 128.844 122.598 128.844 cv
122.002 128.844 121.517 129.327 121.517 129.925 cv
121.517 130.522 122.002 131.007 122.598 131.007 cv
123.195 131.007 123.68 130.522 123.68 129.925 cv
@
127.701 123.984 mo
127.701 123.387 127.217 122.902 126.62 122.902 cv
126.023 122.902 125.538 123.387 125.538 123.984 cv
125.538 124.581 126.023 125.066 126.62 125.066 cv
127.217 125.066 127.701 124.581 127.701 123.984 cv
f
127.701 123.984 mo
127.701 123.387 127.217 122.902 126.62 122.902 cv
126.023 122.902 125.538 123.387 125.538 123.984 cv
125.538 124.581 126.023 125.066 126.62 125.066 cv
127.217 125.066 127.701 124.581 127.701 123.984 cv
@
131.723 125.994 mo
131.723 125.397 131.238 124.914 130.641 124.914 cv
130.044 124.914 129.56 125.397 129.56 125.994 cv
129.56 126.592 130.044 127.076 130.641 127.076 cv
131.238 127.076 131.723 126.592 131.723 125.994 cv
f
131.723 125.994 mo
131.723 125.397 131.238 124.914 130.641 124.914 cv
130.044 124.914 129.56 125.397 129.56 125.994 cv
129.56 126.592 130.044 127.076 130.641 127.076 cv
131.238 127.076 131.723 126.592 131.723 125.994 cv
@
135.927 129.285 mo
135.927 128.688 135.443 128.204 134.845 128.204 cv
134.249 128.204 133.764 128.688 133.764 129.285 cv
133.764 129.882 134.249 130.367 134.845 130.367 cv
135.443 130.367 135.927 129.882 135.927 129.285 cv
f
135.927 129.285 mo
135.927 128.688 135.442 128.204 134.845 128.204 cv
134.249 128.204 133.764 128.688 133.764 129.285 cv
133.764 129.882 134.249 130.367 134.845 130.367 cv
135.442 130.367 135.927 129.882 135.927 129.285 cv
@
139.948 128.554 mo
139.948 127.957 139.464 127.472 138.867 127.472 cv
138.27 127.472 137.785 127.957 137.785 128.554 cv
137.785 129.151 138.27 129.636 138.867 129.636 cv
139.464 129.636 139.948 129.151 139.948 128.554 cv
f
139.948 128.554 mo
139.948 127.957 139.464 127.472 138.867 127.472 cv
138.27 127.472 137.785 127.957 137.785 128.554 cv
137.785 129.151 138.27 129.636 138.867 129.636 cv
139.464 129.636 139.948 129.151 139.948 128.554 cv
@
143.97 123.07 mo
143.97 122.473 143.486 121.989 142.888 121.989 cv
142.292 121.989 141.807 122.473 141.807 123.07 cv
141.807 123.667 142.292 124.152 142.888 124.152 cv
143.486 124.152 143.97 123.667 143.97 123.07 cv
f
143.97 123.07 mo
143.97 122.473 143.486 121.989 142.888 121.989 cv
142.292 121.989 141.807 122.473 141.807 123.07 cv
141.807 123.667 142.292 124.152 142.888 124.152 cv
143.486 124.152 143.97 123.667 143.97 123.07 cv
@
147.992 125.812 mo
147.992 125.215 147.508 124.73 146.911 124.73 cv
146.313 124.73 145.829 125.215 145.829 125.812 cv
145.829 126.409 146.313 126.893 146.911 126.893 cv
147.508 126.893 147.992 126.409 147.992 125.812 cv
f
147.992 125.812 mo
147.992 125.215 147.508 124.73 146.91 124.73 cv
146.313 124.73 145.829 125.215 145.829 125.812 cv
145.829 126.409 146.313 126.893 146.91 126.893 cv
147.508 126.893 147.992 126.409 147.992 125.812 cv
@
152.195 124.898 mo
152.195 124.301 151.711 123.816 151.114 123.816 cv
150.518 123.816 150.032 124.301 150.032 124.898 cv
150.032 125.495 150.518 125.979 151.114 125.979 cv
151.711 125.979 152.195 125.495 152.195 124.898 cv
f
152.195 124.898 mo
152.195 124.301 151.711 123.816 151.114 123.816 cv
150.518 123.816 150.032 124.301 150.032 124.898 cv
150.032 125.495 150.518 125.979 151.114 125.979 cv
151.711 125.979 152.195 125.495 152.195 124.898 cv
@
34.2028 34.0497 mo
34.2028 33.4533 33.7184 32.9681 33.1213 32.9681 cv
32.5242 32.9681 32.039 33.4533 32.039 34.0497 cv
32.039 34.6468 32.5242 35.1312 33.1213 35.1312 cv
33.7184 35.1312 34.2028 34.6468 34.2028 34.0497 cv
.836 .211 1 .082 cmyk
f
34.2028 34.0497 mo
34.2028 33.4534 33.7184 32.9681 33.1213 32.9681 cv
32.5241 32.9681 32.039 33.4534 32.039 34.0497 cv
32.039 34.6469 32.5241 35.1313 33.1213 35.1313 cv
33.7184 35.1313 34.2028 34.6469 34.2028 34.0497 cv
@
38.3156 46.1148 mo
38.3156 45.5169 37.8312 45.0325 37.2341 45.0325 cv
36.6377 45.0325 36.1526 45.5169 36.1526 46.1148 cv
36.1526 46.7112 36.6377 47.1963 37.2341 47.1963 cv
37.8312 47.1963 38.3156 46.7112 38.3156 46.1148 cv
f
38.3156 46.1148 mo
38.3156 45.5169 37.8312 45.0325 37.2341 45.0325 cv
36.6377 45.0325 36.1526 45.5169 36.1526 46.1148 cv
36.1526 46.7112 36.6377 47.1963 37.2341 47.1963 cv
37.8312 47.1963 38.3156 46.7112 38.3156 46.1148 cv
@
42.3371 47.5771 mo
42.3371 46.9792 41.8527 46.4956 41.2556 46.4956 cv
40.6584 46.4956 40.174 46.9792 40.174 47.5771 cv
40.174 48.1735 40.6584 48.6579 41.2556 48.6579 cv
41.8527 48.6579 42.3371 48.1735 42.3371 47.5771 cv
f
42.3371 47.5771 mo
42.3371 46.9792 41.8527 46.4956 41.2555 46.4956 cv
40.6584 46.4956 40.174 46.9792 40.174 47.5771 cv
40.174 48.1735 40.6584 48.6579 41.2555 48.6579 cv
41.8527 48.6579 42.3371 48.1735 42.3371 47.5771 cv
@
46.3585 55.1622 mo
46.3585 54.5651 45.8733 54.0815 45.277 54.0815 cv
44.6799 54.0815 44.1955 54.5651 44.1955 55.1622 cv
44.1955 55.7594 44.6799 56.2437 45.277 56.2437 cv
45.8733 56.2437 46.3585 55.7594 46.3585 55.1622 cv
f
46.3585 55.1623 mo
46.3585 54.5652 45.8733 54.0815 45.277 54.0815 cv
44.6799 54.0815 44.1955 54.5652 44.1955 55.1623 cv
44.1955 55.7594 44.6799 56.2437 45.277 56.2437 cv
45.8733 56.2437 46.3585 55.7594 46.3585 55.1623 cv
@
50.3792 65.6728 mo
50.3792 65.0757 49.8955 64.5913 49.2984 64.5913 cv
48.7013 64.5913 48.2169 65.0757 48.2169 65.6728 cv
48.2169 66.27 48.7013 66.7544 49.2984 66.7544 cv
49.8955 66.7544 50.3792 66.27 50.3792 65.6728 cv
f
50.3792 65.6729 mo
50.3792 65.0757 49.8955 64.5914 49.2984 64.5914 cv
48.7013 64.5914 48.2169 65.0757 48.2169 65.6729 cv
48.2169 66.27 48.7013 66.7544 49.2984 66.7544 cv
49.8955 66.7544 50.3792 66.27 50.3792 65.6729 cv
@
54.5842 68.2327 mo
54.5842 67.6348 54.0998 67.1504 53.5027 67.1504 cv
52.9055 67.1504 52.4211 67.6348 52.4211 68.2327 cv
52.4211 68.8291 52.9055 69.3142 53.5027 69.3142 cv
54.0998 69.3142 54.5842 68.8291 54.5842 68.2327 cv
f
54.5842 68.2327 mo
54.5842 67.6348 54.0998 67.1505 53.5026 67.1505 cv
52.9055 67.1505 52.4211 67.6348 52.4211 68.2327 cv
52.4211 68.8291 52.9055 69.3143 53.5026 69.3143 cv
54.0998 69.3143 54.5842 68.8291 54.5842 68.2327 cv
@
58.6056 81.0274 mo
58.6056 80.4303 58.1212 79.9459 57.5241 79.9459 cv
56.927 79.9459 56.4426 80.4303 56.4426 81.0274 cv
56.4426 81.6246 56.927 82.1089 57.5241 82.1089 cv
58.1212 82.1089 58.6056 81.6246 58.6056 81.0274 cv
f
58.6056 81.0274 mo
58.6056 80.4303 58.1212 79.9458 57.5241 79.9458 cv
56.927 79.9458 56.4426 80.4303 56.4426 81.0274 cv
56.4426 81.6246 56.927 82.109 57.5241 82.109 cv
58.1212 82.109 58.6056 81.6246 58.6056 81.0274 cv
@
62.6271 73.5337 mo
62.6271 72.9358 62.1427 72.4514 61.5455 72.4514 cv
60.9484 72.4514 60.464 72.9358 60.464 73.5337 cv
60.464 74.1301 60.9484 74.6152 61.5455 74.6152 cv
62.1427 74.6152 62.6271 74.1301 62.6271 73.5337 cv
f
62.6271 73.5337 mo
62.6271 72.9359 62.1427 72.4514 61.5455 72.4514 cv
60.9484 72.4514 60.464 72.9359 60.464 73.5337 cv
60.464 74.1301 60.9484 74.6152 61.5455 74.6152 cv
62.1427 74.6152 62.6271 74.1301 62.6271 73.5337 cv
@
66.6492 88.5219 mo
66.6492 87.9248 66.1641 87.4404 65.567 87.4404 cv
64.9698 87.4404 64.4855 87.9248 64.4855 88.5219 cv
64.4855 89.119 64.9698 89.6035 65.567 89.6035 cv
66.1641 89.6035 66.6492 89.119 66.6492 88.5219 cv
f
66.6492 88.522 mo
66.6492 87.9248 66.1641 87.4405 65.567 87.4405 cv
64.9698 87.4405 64.4854 87.9248 64.4854 88.522 cv
64.4854 89.1191 64.9698 89.6035 65.567 89.6035 cv
66.1641 89.6035 66.6492 89.1191 66.6492 88.522 cv
@
70.8527 89.6187 mo
70.8527 89.0215 70.3683 88.5371 69.7712 88.5371 cv
69.1741 88.5371 68.6904 89.0215 68.6904 89.6187 cv
68.6904 90.2158 69.1741 90.7002 69.7712 90.7002 cv
70.3683 90.7002 70.8527 90.2158 70.8527 89.6187 cv
f
70.8527 89.6187 mo
70.8527 89.0216 70.3683 88.5372 69.7712 88.5372 cv
69.1741 88.5372 68.6904 89.0216 68.6904 89.6187 cv
68.6904 90.2159 69.1741 90.7002 69.7712 90.7002 cv
70.3683 90.7002 70.8527 90.2159 70.8527 89.6187 cv
@
74.8742 92.5441 mo
74.8742 91.9462 74.3898 91.4626 73.7926 91.4626 cv
73.1963 91.4626 72.7111 91.9462 72.7111 92.5441 cv
72.7111 93.1405 73.1963 93.6248 73.7926 93.6248 cv
74.3898 93.6248 74.8742 93.1405 74.8742 92.5441 cv
f
74.8742 92.5442 mo
74.8742 91.9463 74.3898 91.4626 73.7926 91.4626 cv
73.1963 91.4626 72.7111 91.9463 72.7111 92.5442 cv
72.7111 93.1405 73.1963 93.6249 73.7926 93.6249 cv
74.3898 93.6249 74.8742 93.1405 74.8742 92.5442 cv
@
78.8956 97.1139 mo
78.8956 96.5161 78.4112 96.0324 77.8141 96.0324 cv
77.217 96.0324 76.7326 96.5161 76.7326 97.1139 cv
76.7326 97.7103 77.217 98.1947 77.8141 98.1947 cv
78.4112 98.1947 78.8956 97.7103 78.8956 97.1139 cv
f
78.8956 97.114 mo
78.8956 96.5161 78.4112 96.0324 77.8141 96.0324 cv
77.2169 96.0324 76.7325 96.5161 76.7325 97.114 cv
76.7325 97.7103 77.2169 98.1948 77.8141 98.1948 cv
78.4112 98.1948 78.8956 97.7103 78.8956 97.114 cv
@
82.9171 95.7422 mo
82.9171 95.1458 82.4319 94.6607 81.8355 94.6607 cv
81.2384 94.6607 80.754 95.1458 80.754 95.7422 cv
80.754 96.3394 81.2384 96.8237 81.8355 96.8237 cv
82.4319 96.8237 82.9171 96.3394 82.9171 95.7422 cv
f
82.917 95.7422 mo
82.917 95.1459 82.4319 94.6606 81.8355 94.6606 cv
81.2384 94.6606 80.754 95.1459 80.754 95.7422 cv
80.754 96.3394 81.2384 96.8238 81.8355 96.8238 cv
82.4319 96.8238 82.917 96.3394 82.917 95.7422 cv
@
87.1213 98.2099 mo
87.1213 97.6128 86.6369 97.1284 86.0397 97.1284 cv
85.4434 97.1284 84.9582 97.6128 84.9582 98.2099 cv
84.9582 98.8071 85.4434 99.2914 86.0397 99.2914 cv
86.6369 99.2914 87.1213 98.8071 87.1213 98.2099 cv
f
87.1213 98.21 mo
87.1213 97.6128 86.6369 97.1284 86.0397 97.1284 cv
85.4434 97.1284 84.9582 97.6128 84.9582 98.21 cv
84.9582 98.8071 85.4434 99.2915 86.0397 99.2915 cv
86.6369 99.2915 87.1213 98.8071 87.1213 98.21 cv
@
91.1427 95.3766 mo
91.1427 94.7795 90.6583 94.2951 90.0612 94.2951 cv
89.4641 94.2951 88.9797 94.7795 88.9797 95.3766 cv
88.9797 95.9738 89.4641 96.4582 90.0612 96.4582 cv
90.6583 96.4582 91.1427 95.9738 91.1427 95.3766 cv
f
91.1427 95.3767 mo
91.1427 94.7796 90.6583 94.2952 90.0612 94.2952 cv
89.4641 94.2952 88.9797 94.7796 88.9797 95.3767 cv
88.9797 95.9738 89.4641 96.4582 90.0612 96.4582 cv
90.6583 96.4582 91.1427 95.9738 91.1427 95.3767 cv
@
95.1641 98.9411 mo
95.1641 98.3447 94.6798 97.8596 94.0826 97.8596 cv
93.4855 97.8596 93.0011 98.3447 93.0011 98.9411 cv
93.0011 99.5382 93.4855 100.023 94.0826 100.023 cv
94.6798 100.023 95.1641 99.5382 95.1641 98.9411 cv
f
95.1641 98.941 mo
95.1641 98.3448 94.6797 97.8596 94.0826 97.8596 cv
93.4855 97.8596 93.0011 98.3448 93.0011 98.941 cv
93.0011 99.5383 93.4855 100.023 94.0826 100.023 cv
94.6797 100.023 95.1641 99.5383 95.1641 98.941 cv
@
99.1856 98.5755 mo
99.1856 97.9784 98.7012 97.4947 98.1041 97.4947 cv
97.507 97.4947 97.0226 97.9784 97.0226 98.5755 cv
97.0226 99.1734 97.507 99.657 98.1041 99.657 cv
98.7012 99.657 99.1856 99.1734 99.1856 98.5755 cv
f
99.1856 98.5756 mo
99.1856 97.9785 98.7012 97.4948 98.1041 97.4948 cv
97.5069 97.4948 97.0225 97.9785 97.0225 98.5756 cv
97.0225 99.1734 97.5069 99.657 98.1041 99.657 cv
98.7012 99.657 99.1856 99.1734 99.1856 98.5756 cv
@
103.39 96.7476 mo
103.39 96.1504 102.905 95.666 102.308 95.666 cv
101.711 95.666 101.227 96.1504 101.227 96.7476 cv
101.227 97.3447 101.711 97.8291 102.308 97.8291 cv
102.905 97.8291 103.39 97.3447 103.39 96.7476 cv
f
103.39 96.7476 mo
103.39 96.1504 102.905 95.6661 102.308 95.6661 cv
101.711 95.6661 101.227 96.1504 101.227 96.7476 cv
101.227 97.3447 101.711 97.8291 102.308 97.8291 cv
102.905 97.8291 103.39 97.3447 103.39 96.7476 cv
@
107.411 100.038 mo
107.411 99.4407 106.927 98.9563 106.33 98.9563 cv
105.733 98.9563 105.249 99.4407 105.249 100.038 cv
105.249 100.636 105.733 101.119 106.33 101.119 cv
106.927 101.119 107.411 100.636 107.411 100.038 cv
f
107.411 100.038 mo
107.411 99.4408 106.927 98.9564 106.33 98.9564 cv
105.733 98.9564 105.249 99.4408 105.249 100.038 cv
105.249 100.636 105.733 101.119 106.33 101.119 cv
106.927 101.119 107.411 100.636 107.411 100.038 cv
@
111.433 101.135 mo
111.433 100.538 110.948 100.053 110.351 100.053 cv
109.755 100.053 109.27 100.538 109.27 101.135 cv
109.27 101.732 109.755 102.217 110.351 102.217 cv
110.948 102.217 111.433 101.732 111.433 101.135 cv
f
111.433 101.135 mo
111.433 100.538 110.948 100.053 110.351 100.053 cv
109.755 100.053 109.27 100.538 109.27 101.135 cv
109.27 101.732 109.755 102.217 110.351 102.217 cv
110.948 102.217 111.433 101.732 111.433 101.135 cv
@
115.454 95.2852 mo
115.454 94.6881 114.97 94.2037 114.373 94.2037 cv
113.775 94.2037 113.291 94.6881 113.291 95.2852 cv
113.291 95.8824 113.775 96.3668 114.373 96.3668 cv
114.97 96.3668 115.454 95.8824 115.454 95.2852 cv
f
115.454 95.2853 mo
115.454 94.6882 114.97 94.2037 114.373 94.2037 cv
113.775 94.2037 113.291 94.6882 113.291 95.2853 cv
113.291 95.8824 113.775 96.3668 114.373 96.3668 cv
114.97 96.3668 115.454 95.8824 115.454 95.2853 cv
@
119.658 103.511 mo
119.658 102.915 119.174 102.429 118.578 102.429 cv
117.98 102.429 117.496 102.915 117.496 103.511 cv
117.496 104.108 117.98 104.593 118.578 104.593 cv
119.174 104.593 119.658 104.108 119.658 103.511 cv
f
119.658 103.511 mo
119.658 102.915 119.174 102.429 118.578 102.429 cv
117.98 102.429 117.496 102.915 117.496 103.511 cv
117.496 104.108 117.98 104.593 118.578 104.593 cv
119.174 104.593 119.658 104.108 119.658 103.511 cv
@
123.68 100.678 mo
123.68 100.081 123.195 99.5961 122.598 99.5961 cv
122.002 99.5961 121.517 100.081 121.517 100.678 cv
121.517 101.275 122.002 101.759 122.598 101.759 cv
123.195 101.759 123.68 101.275 123.68 100.678 cv
f
123.68 100.678 mo
123.68 100.081 123.195 99.5961 122.598 99.5961 cv
122.002 99.5961 121.517 100.081 121.517 100.678 cv
121.517 101.275 122.002 101.759 122.598 101.759 cv
123.195 101.759 123.68 101.275 123.68 100.678 cv
@
127.701 103.329 mo
127.701 102.731 127.217 102.247 126.62 102.247 cv
126.023 102.247 125.538 102.731 125.538 103.329 cv
125.538 103.925 126.023 104.41 126.62 104.41 cv
127.217 104.41 127.701 103.925 127.701 103.329 cv
f
127.701 103.329 mo
127.701 102.731 127.217 102.247 126.62 102.247 cv
126.023 102.247 125.538 102.731 125.538 103.329 cv
125.538 103.925 126.023 104.41 126.62 104.41 cv
127.217 104.41 127.701 103.925 127.701 103.329 cv
@
131.723 102.049 mo
131.723 101.452 131.238 100.967 130.641 100.967 cv
130.044 100.967 129.56 101.452 129.56 102.049 cv
129.56 102.646 130.044 103.13 130.641 103.13 cv
131.238 103.13 131.723 102.646 131.723 102.049 cv
f
131.723 102.049 mo
131.723 101.452 131.238 100.967 130.641 100.967 cv
130.044 100.967 129.56 101.452 129.56 102.049 cv
129.56 102.646 130.044 103.13 130.641 103.13 cv
131.238 103.13 131.723 102.646 131.723 102.049 cv
@
135.927 98.6677 mo
135.927 98.0698 135.443 97.5854 134.845 97.5854 cv
134.249 97.5854 133.764 98.0698 133.764 98.6677 cv
133.764 99.264 134.249 99.7484 134.845 99.7484 cv
135.443 99.7484 135.927 99.264 135.927 98.6677 cv
f
135.927 98.6677 mo
135.927 98.0698 135.442 97.5854 134.845 97.5854 cv
134.249 97.5854 133.764 98.0698 133.764 98.6677 cv
133.764 99.2641 134.249 99.7484 134.845 99.7484 cv
135.442 99.7484 135.927 99.2641 135.927 98.6677 cv
@
139.948 99.4902 mo
139.948 98.8923 139.464 98.4087 138.867 98.4087 cv
138.27 98.4087 137.785 98.8923 137.785 99.4902 cv
137.785 100.087 138.27 100.572 138.867 100.572 cv
139.464 100.572 139.948 100.087 139.948 99.4902 cv
f
139.948 99.4903 mo
139.948 98.8924 139.464 98.4087 138.867 98.4087 cv
138.27 98.4087 137.785 98.8924 137.785 99.4903 cv
137.785 100.087 138.27 100.572 138.867 100.572 cv
139.464 100.572 139.948 100.087 139.948 99.4903 cv
@
143.97 107.441 mo
143.97 106.845 143.486 106.359 142.888 106.359 cv
142.292 106.359 141.807 106.845 141.807 107.441 cv
141.807 108.038 142.292 108.522 142.888 108.522 cv
143.486 108.522 143.97 108.038 143.97 107.441 cv
f
143.97 107.441 mo
143.97 106.845 143.486 106.359 142.888 106.359 cv
142.292 106.359 141.807 106.845 141.807 107.441 cv
141.807 108.038 142.292 108.523 142.888 108.523 cv
143.486 108.523 143.97 108.038 143.97 107.441 cv
@
147.992 107.532 mo
147.992 106.936 147.508 106.451 146.911 106.451 cv
146.313 106.451 145.829 106.936 145.829 107.532 cv
145.829 108.129 146.313 108.614 146.911 108.614 cv
147.508 108.614 147.992 108.129 147.992 107.532 cv
f
147.992 107.532 mo
147.992 106.936 147.508 106.451 146.91 106.451 cv
146.313 106.451 145.829 106.936 145.829 107.532 cv
145.829 108.129 146.313 108.614 146.91 108.614 cv
147.508 108.614 147.992 108.129 147.992 107.532 cv
@
152.195 107.899 mo
152.195 107.301 151.711 106.817 151.114 106.817 cv
150.518 106.817 150.032 107.301 150.032 107.899 cv
150.032 108.495 150.518 108.98 151.114 108.98 cv
151.711 108.98 152.195 108.495 152.195 107.899 cv
f
152.195 107.899 mo
152.195 107.301 151.711 106.817 151.114 106.817 cv
150.518 106.817 150.032 107.301 150.032 107.899 cv
150.032 108.495 150.518 108.98 151.114 108.98 cv
151.711 108.98 152.195 108.495 152.195 107.899 cv
@
.807334 lw
0 lc
30.6688 162.941 mo
30.6688 17.507 li
.746 .676 .668 .898 cmyk
@
GEFRQA+Helvetica*1 [6.85472 0 0 -6.85472 0 0 ]msf15.7404 164.646 mo(0.0)[3.81191 1.9063 0 ]xsh15.7404 122.81 mo(0.5)[3.81191 1.9063 0 ]xsh15.7404 80.9614 mo(1.0)[3.81191 1.9063 0 ]xsh15.7404 39.1311 mo(1.5)[3.81191 1.9063 0 ]xsh151.045 166.178 mo
151.045 162.941 li
130.71 166.178 mo
130.71 162.941 li
110.374 166.178 mo
110.374 162.941 li
90.0383 166.178 mo
90.0383 162.941 li
69.7103 166.178 mo
69.7103 162.941 li
49.3746 166.178 mo
49.3746 162.941 li
30.6688 162.941 mo
153.483 162.941 li
27.4318 36.6698 mo
30.6688 36.6698 li
27.4318 78.5064 mo
30.6688 78.5064 li
27.4318 120.351 mo
30.6688 120.351 li
27.4318 162.187 mo
30.6688 162.187 li
@
%ADOBeginSubsetFont: IAAAAA+Helvetica AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.systemdict beginGEFRQA+Helvetica dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/c <1C60D8A8C9B7A73DB9BB4BD7623FA1F3C03F832EDB3EBDEEADF30D53894CA8D0E43AB471E7BA022BFFD675D506AE0402072D4B89708C39F4DE4224D2E08E345C99AE382D5A27CCF2E9E7F36B9FF185D5B1582E55EEA79434D321A3126C806AF846740E1C2FF9A41681247A023D851231C058548F93E1F768FE103B973ACF15C379D13F> |-systemdict /gcheck known {setglobal} if end {end} ifendGEFRQA+Helvetica /Encoding getdup 99 /c putpop%ADOEndSubsetFont
/GEFRQA+Helvetica*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen /period /slash /zero /one /two /three /four /five /six 10{/.notdef}rp /A /B /C /D 4{/.notdef}rp /I 8{/.notdef}rp /R /S /T 12{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]GEFRQA+Helvetica nfGEFRQA+Helvetica*1 [6.85472 0 0 -6.85472 0 0 ]msf47.4673 173.262 mo(51015202530)[18.433 3.8119 16.5274 3.79135 16.5274 3.81191 16.5274 3.80505 16.5274 3.81192 0 ]xsh74.9397 180.92 mo(Tap Stimuli)[3.35534 3.81123 3.81123 1.90561 4.57215 1.90562 1.52175 5.70993 3.81123 1.46622 0 ]xshGEFRQA+Helvetica*1 [0 -6.85472 -6.85472 0 0 0 ]msf12.9913 126.969 mo(Reversal Distance \(mm\))[-4.9498 -3.5994 -3.25668 -3.81192 -2.28323 -3.42807 -3.81189 -1.52246 -1.90631 -4.9498 -1.52243 -3.42801 -1.90634 -3.81189 -3.81189 -3.42807 -3.81195 -1.90625 -2.28329 -5.7106 -5.7106 0 ]yshgrestore
grestore
gsave
0 540 mo
197 540 li
197 0 li
0 0 li
0 540 li
clp
96.75 15.25 mo
178.984 15.25 li
178.984 58.5 li
96.75 58.5 li
cp
ef
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: LAAAAA+Arial-ItalicMT Initial
ct_T42Dict begin
-0.516 -0.324 1.355 0.996
 256 array 0 1 255 {1 index exch /.notdef put} for  /LAAAAA+Arial-ItalicMT
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000005606670
676d000000000000061c000005ce676c796600000000000013a800001022
686561640000000000000bec00000036686865610000000000000c240000
0024686d74780000000000000c48000000486c6f63610000000000000c90
000000266d6178700000000000000cb8000000206e616d65000000000000
0cd800000028707265700000000000000d00000006a66764697200000000
000000000000000005ba001905ba001905a6001a042600180000ffe70000
ffe80000ffe7fe69ffee05ba0019fe6fffe202e2000000b5000000b50000
00000000000000bc00bf008c00b300a600a600b10010010400640079008b
008b00c100ea008a00a2009101b40073007a00a400a200bb01bd0270005a
00800017007000c300300103ffd000ac007d010d0006001200c900cd0056
0091ff8f0113000b00190043007200b903c803d7ffee0146016e0002001b
0044005200b603ee00d80104023d05180573ff2d0005000900c600cd024c
ffe70011001500370049004e005c00a600a700b500c500db01280543ffdf
00210040005300700079008e00a300ca018f0265027502a403c80555ff9a
ffd7ffee00050008002600460069007000730077009a00c100ef010a0113
01c101e50318049cfef2fef9ffa4000000270034004100450075008000c4
00cb00d900e500f801550166022b0254037004050467ff16ffb40002001d
0032004a004a004d00550060007c007f008c009d00b102a3038cfec4fef7
000100030003002d00370037003a0056005a00a400cd00da011101190125
012701480153016901a001fb02070239028102a402f70305032803280336
03a303b503dd03df03f10448047804e6060bff28ff4bff68ff78ff9fffbf
ffe10012001f0028004c005a005c005e00610070007700810083008800b1
009c009c009d009f00a500b600b800b900ba00d300df00e100f200f7010e
0132013b013c0166016c017801ae01b501b701cf01d2025d026102a202cd
0323035a03a303a4040004440450047304d2fe00fe38fe8cfeb1feceff0e
ffb2ffc7ffecfffd0005001f002100250026002d00580065008100850091
009900a500ab00af00b000b000ba00db00dc00e900f80109010901100114
011701240129012d012f013601500151015a0167017401790182018e0190
0199019c01b001b301b701be01c501da01e801f001f201fb02000200020b
020f021f0222022c022d022e024e02670287029002ac02b502bc02bc02d0
02d402d802db02e502f102f9031103140314032203260348034a035c036f
03780379037e03ab03b503cb03e004040405040f0428042c048404a504af
04cf04eb04f9050b058e0593059805e505e506000610063d065006680695
06b806d9070307510766077e077f078207b60800082308ac00b200bf00b1
00af000000000000000000000000025c00a100d301be00de01a6031402ab
015002a70196010e0318006b039b01d1054b0089023c02b0014d021603f3
01760176001503a901f400f400b6020402d8012b04a701a000bc01bd028c
026b0278040f015704a904fd017404d2040302e400a602ee000000000614
04a7000002760000016d013e00000267006d009e021400cb02a400850071
00c2009e0609029000b9008f00260248003501490091009902ef00eb008e
0011013f006a007900fd01a3057402a1017a03e8020c005601fd02df013b
057400660610008101b3024e03cb01e400cd02bc0132014b016802390162
00fd00e601a201e60255004d028300a3046705d401dd012b014e05680070
000004e003490366021302bb0000000000000000000000000000000000af
00b4000300cd004c03c8005c0192007200cd022b0049026f009d03bd01e9
00b4017c046703680099027802040183028102ac00b30348040b004200b4
03b400be01a803d6012b00af0478016e0193ff45fd5d00f506a604ae03b1
0536041cffcafedc01a501d0ffba02f10037ffca0355fe67019c04190055
007c00e50072006d000b00ab012b009c00db01a60008012b00250056008e
00a500150010010900cb00460017004c005e01f200b80083001101360128
004e0222006b0241072006140000072700aaff370037006e002901da04a8
007500ba404154403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a29
2827262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b
0a090807060504030201002c4523466020b02660b004262348482d2c4523
46236120b02661b004262348482d2c45234660b0206120b04660b0042623
48482d2c4523462361b0206020b02661b02061b004262348482d2c452346
60b0406120b06660b004262348482d2c4523462361b0406020b02661b040
61b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a51
582320b08d44235920b0ed51582320b04d44235920b0042651582320b00d
44235921212d2c20204518684420b001602045b04676688a4560442d2c01
b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01
b0172370b10217453ab10200080d2d2c45b01a234445b01923442d2c2045
b00325456164b050515845441b2121592d2cb00143632362b0002342b00f
2b2d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b000
8b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112b
b0172344b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112b
b0172344b0177ae41b038a45186920b01723448a8a8720b0a05158b0112b
b0172344b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040
618c482d2c01182f2d2c20b0032545b019234445b01a23444565234520b0
0325606a20b009234223688a6a606120b01a8ab000527921b21a1a40b9ff
e0001a45208a54582321b03f1b235961441cb114008a5279b31940201945
208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f432343
0b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b
2d2cb11011432343650b2d2c4b525845441b2121592d2c0120b003252349
b04060b0206320b000525823b002253823b002256538008a63381b212121
212159012d2c4bb06451584569b00943608a103a1b212121592d2c01b005
251023208af500b0016023edec2d2c01b005251023208af500b0016123ed
ec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b00161
0110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a
2d2c352d2c76b8023623701020b802364520b0005058b00161593a2f182d
2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb2
00402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b
59b002602d2c0c6423648bb84000626023212d2cb4000100000015b00826
b00826b00826b008260f10161345683ab001162d2cb4000100000015b008
26b00826b00826b008260f1016134568653ab001162d2c4b53234b515a58
20458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b51
5a58381b2121592d2c4b5458381b2121592d2cb0134358031b02592d2cb0
134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580c
b00425b00425060c6423646164b807085158b00425b00425012046b01060
482046b0106048590a21211b2121592d2cb012435c580cb00425b0042506
0c6423646164b807085158b00425b00425012046b8fff060482046b8fff0
6048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53
234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121
592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d
2c462346608a8a462320468a608a61b8ff8062232010238ab902a502a58a
70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb102
0042b123018851b1400188535a58b910000020885458b202010243604259
b12401885158b920000040885458b202020243604259b12401885458b202
2002436042004b014b5258b2020802436042591bb940000080885458b202
040243604259b94000008063b80100885458b202080243604259b9400001
0063b80200885458b2021002436042595959592d00000001000000050f5c
ff785e1e5f0f3cf50819080000000000a372c2bf00000000c59b6256fbdd
fd670adf07fb00020009000100000000000000010000073efe4e00430aaa
fbddfa520adf002100070000000000000000000000000012060001000239
000002aa00ad02aaff9302aa005f047300910473012f0473007804730070
0473005d0239003104000073047300350400004606aa0043047300640239
0073040000000000003a003a007500b800d6014901a8022e02ba036903ba
042d050905d806be072e079e0811000000010000001200f2003c005a0005
00020010002f005500000281024d00040004000000010012000100000000
0006001500004e41414e4e432b417269616c2d4974616c69634d5400b154
30bb02aa0001004002a8b2393340b802a8b310153240b802a8b2073340b8
02a9b30c12327f411102a600af02a600bf02a600ef02a60004003002a600
4f02a6005f02a60003004002a6b28f3340b802a6b25f3340b802a6b34e51
3280b802a6b34c4d3240b802a6b340483240b802a6b30a0d3240b802a6b3
093a3240b802a6b330333280b802a4b345783240b802a4b3323a3280b802
a4b32a313240b802a4b32425327f411002a4000100ef02a40001000f02a4
002f02a4003f02a4007f02a40004004002a4b3151d3280b802a4b3091432
40b802a3b31a1b320fbf02a3007f02a300ef02a30003004002a3400a0914
32124f064f0702ef413701eb0001009f01eb0001007f01eb0001005f01eb
0001003f01eb0001002f01eb0001000f01eb0001007f01ea000100ef01ea
000100bf01ea000100af01ea0001002f01ea0001003f01ea0001004f01ea
0001006f01ea0001007f01ea000101ed01ed01ec01ec01eb01eb01ea01ea
4012002c01001f01102c01101f01402c01401f01b90109010bb2341f91b8
010b4037341f2e20431f3220431f3320471f2c20431f1f20431f7b2a481f
2d2a481f212a441f370100010100090102000800171700000012110840b8
01acb7fe870dfd870d0009b8013fb22a4c1f4109013a00ba0401001f0136
001f019a001f0104b22a721fbe01010020019a001f0100002002abb21ffb
2db80156b21ffa1fb80801b21ff91fb8020140131ff81fe41ff71fbb1ff5
1f4a1fc92aab1fb92db8019ab21fb81fb80401b21fa02ab802ab400f1f8b
1f521f7b2ae41f781f6c1f6e20b80401b21f6c21b80401400b1f632aab1f
5a2a5a1f5820b802abb21f4e20b80156b21f471fb8019ab61f452aab1f44
2ab80101b61f401f891f332db80401b21f3221b80401b61f311f721f2e1f
b8019ab21f2c1fb80401b21f291fb80801b21f281fb80801b61f271f6c1f
2221b8040140451f550d090d093790dc0790a80790a607907e0790410790
3b07903607903507903007902f07902b07902507901d071408120810080e
080c080a080808060804080208000814b8ffe0402b000001001406100000
010006040000010004100000010010020000010002000000010000020108
02004a00b013034b024b5342014bb0c063004b6220b0f65323b8010a515a
b005234201b0124b004b544218b0382b4bb807ff52b0372b4bb007505b58
b101018e59b0382bb00288b801005458b80119b101018e851bb0124358b9
00010119858d1bb9000101ff858d59590016763f183f123e113946443e11
3946443e113946443e113946443e11394660443e11394660442b2b2b2b2b
2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b4b5079b9001f0158b3
071f3d072b2b4b5379b900900158b307903d072b2b181db0964b5358b0aa
1d59b0324b5358b0ff1d594bb09353205c58b901ae01ac4544b901ad01ac
45445958b9032c01ae455258b901ae032c4459594bb8019a53205c58b900
3f01ae4544b901ae01ae45445958b908d6003f455258b9003f08d6445959
4bb8040153205c58b9002301ae4544b9002001ae45445958b91620002345
5258b9002316204459594bb8040153205c58b9001e01ad4544b9002a01ad
45445958b917e0001e455258b9001e17e04459594bb8040153205c58b1ba
234544b1232345445958b9162000ba455258b900ba16204459594bb03c53
205c58b11f1f4544b1211f45445958b90102001f455258b9001f01024459
594bb04653205c58b11f1f4544b12d1f45445958b9012e001f455258b900
1f012e4459594bb8030153205c58b11f1f4544b11f1f45445958b90d2000
1f455258b9001f0d204459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b45695342014b
5058b108004259435c58b1080042591610703eb0124358b90d193ea51bba
00d203eb000b2b59b00a2342b00b2342003f3f182b103c012f060cb00623
42b0072342b0124358b93b21187e1bba040001a8000b2b59b00c2342b00d
2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b0
124358b9187e3b211bba01a80400000b2b59b0102342b0112342002b2b2b
2b2b2b2b2b2b2b2b74747575757500184569444569444569444569447373
737373737373757373737373737374004bb02a534bb03f515a58b1070745
b040604459004bb030534bb03f515a58b10b0b45b8ffc0604459004bb02e
534bb03c515a58b1030345b040604459004bb02e534bb03c515a58b10909
45b8ffc0604459435c58b64f2c014f1f01372b7474592b732b2b2b737374
2b2b2b2b2b2b2b2b2b2b2b2b74732b2b2b2b742b000000>
[4131 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 1 <> LAAAAA+Arial-ItalicMT AddT42Char 
1 116 2 <000100adfe51034e05d3000e0036400f9d0ead0e02071000120c4e0208f8
07b801f5b3020ef800b801f4b502190f6d7a182b4e10f44df4ed10f4ed10
ed003f3f3130015d010211341237363733060002151013014a9d7f8256bd
8d75fefb7673fe510158016bf201a1cc88d87dfe3afe4addfeb6fe9e>LAAAAA+Arial-ItalicMT AddT42Char 
1 234 3 <0001ff93fe51023405d3000e00464011690a01930ea000a00e030e100812
08f807b801f5b3020ef800b801f4400c0c4e0f021f022f0203021a10b801
53b148182b4e10f65d4dedf4ed10f4fd003f3f3130015d5d011211140207
06072336001235100301969e7f8257bc8d740106757305d3fea8fe96f3fe
60cd88d87e01c601b5de014a0161>LAAAAA+Arial-ItalicMT AddT42Char 
1 368 4 <0001005f01b802ad026d000300204010017b0002af039a0501af00190476
42182b4e10f44de410f6e4002fed3130133721075f2602282501b8b5b500
>LAAAAA+Arial-ItalicMT AddT42Char 
1 428 5 <00020091ffe7048605c00011002400704015571477078607030711011818
0d113419180d113423b8ffe8b30d113420b8ffe8402f0d11348910842102
260b79107421033f183321651469196723051e20060516200f0d123f0019
251b3f091a267955182b4e10f64ded4e10f44ded003fed3fed3130015d5d
5d2b2b2b2b00715d1334123e023332161514070207062322023714171633
3237361235342623220607060706916f88928d56a8e14e5ca47ea1a5e3af
2d3d7869567c7d7963487d39513c3301e1ba0180e6823dfaecf3eefee68d
6b0103c9874c695f860205a49e8c4a5a7ffdd800>LAAAAA+Arial-ItalicMT AddT42Char 
1 658 6 <0001012f000003d605c0000b0088401e4b027d0102590101390a4801490a
5402580a050a0b0bba00011400000104b801fb400e030a2809050b28000c
0a0a090b0bb80100400a00090101095000010000b80259b50d0901100017
ba014a012a00182b2b2b3c012b7a10f101182f5d2b3c012f2b7a10f10118
2f2b3c012f003f2b3c003f2b3c002fed87052e2b7d10c43130015d00715d
21130605373624373637330101ede896fef02287010742282469fecd0453
7647a436ae412839fa40>LAAAAA+Arial-ItalicMT AddT42Char 
1 848 7 <000100780000047f05c0002100a0b74e0f4e1c691a030eb8ffcc404d0e11
340c200e1134270f241a251c3903360f3912401d421e59026d0b6813661a
601b601c631d621e7b027b038a028a03931ba506b803171f20001d1b1110
0503061c1a0604041f0d201405201fb80100b621000c20f62310ba010000
1101c7400b0019220a3f181a2389ae182b4e10f64ded4e10f44df4ed10e6
003f3cfd3c3fed1117391739011112393130015d2b2b005d333e02373637
363736353426232206072736363332161615140706050606072107781c63
a4ea8e344b22178f68679a21b11afbbb7dcb666840fec886832102902383
b19fbb71364e4b333c658d8f9e1ac3e168bc64928754f76a883ca600>LAAAAA+Arial-ItalicMT AddT42Char 
1 1116 8 <00010070ffe7047505c0002a0099400e2f270114200f113409200e113416
b8ffccb30e113403b8ffcc40170e1134371732274502461704220a19180d
03150f014a00b801554011280c4a0f200a0a2815201c050420280d01b801
00400c00192b073f259d1f2f190118ba0100001901c9b7123f1f1a2c89ae
182b4e10f64dfdf4ed5d10f4ed4e10f44ded003fed3fed12392fede410fd
e41112173912393130015d2b2b2b2b005d13371616333236353426232207
371633323635342623220607273636333216151406071616151400232226
70b014896f86c3927b0e2c1f1a189ba78963619b16b22cfaabb4df797956
55fed9cdc7f50180169a85c07c6c8d049704976e658a8d8124b5c6da9f74
ad3933905dc5fedfdf00>LAAAAA+Arial-ItalicMT AddT42Char 
1 1396 9 <0002005d0000045705ba000a000d011d403d050c01a70ca70db70cc60cf4
0c05040c4a0c022f073f078205840c9b0dad0dbb0dcb0d08010208000c06
0d070a050902080a050b0d07000c0c0d0c000db801ff4016030414030304
0c0c0d050a0aba000c1400000c030d0cb8010b4009052804040d073f0208
ba01ce000201cdb40a28000c07b80200b380080108b801d9b2090404b802
04400a0905050a090909090a0ab80100400a00090c0c09006f000100b802
5ab20f0903b80200400b0f020102190e0c10001789b9012a00182b2b2b3c
014e10f45d4de42b7a10f05d01182f2b3c012f2b7a10f101182f2b3c012f
2b103c012f2b7ae201182f10f45de4003f2b3c00e6e410fd3c3f2b3ced00
113987052e2b87087dc487052e182b087d10c40f0f0f0f3130015d71005d
71211321370133033307230303130102644ffdaa26033594c3ce21ce4f45
80fdde0176b30391fc5ca0fe8a02160264fd9c00>LAAAAA+Arial-ItalicMT AddT42Char 
1 1746 10 <00020031fed8021904260003000d00654018250b350b020b0a0d07080c09
030a040300450201060a6a0bbb028200040007029a400e06060545040a07
af064505024501b8025eb705af04190e3a73182b4e10f44df4f4ed10fde4
003ffd3c10ed10f6ed3f3cfd3c111217390112390010c93130015d013733
070137330706060737363701222bcc2bfe812bce25228f611177260359cd
cdfca7cdb3a1960b4f21b800>LAAAAA+Arial-ItalicMT AddT42Char 
1 1908 11 <00010073ffe80416043e001b008c400a39036914671b97060418b8ffe040
55101134390a8b11025c1b69107c09791099080506141614290943015802
5808060f240e530b012430006000900003000004121f0b07191f040b0058
200130010201f00e162007261c0f58000e100e020e4b1d384b182b4e10f6
5d4ded4e10f44ded10f45ded003fed3fed12392f5de410fde43130015d5d
5d2b005d0117060623222635341224333216150726262322060215141633
32360321b544fba0add78a0101a5abc8b201735e6da05b785858a1018313
c7c1e0c9ae0150afc19f0c65728afee782888886>LAAAAA+Arial-ItalicMT AddT42Char 
1 2138 12 <00020035fe570484043e00220033011db90026ffe0b310113431b8ffe0b3
10113432b8ffe0403f0e113404311431020418390955266526803505252b
303502251225153f003c1f041616152c17170a0a19280d28181919230a17
140a0a170124000010000200b8028e40330d2f1f140718281706281f0d0a
061f1d0f181809191958090a0a1709161609177f17011f172f178017cf17
045f170100170117b80225b40923201000b801cf401c02208f210121c510
263f0a01000a010a342817100a170a340a265f182b2b103c2b2b3c2b10c0
5d7101e6f65dede510fd2b7af25d5d717201192f2b7ac001182f2b7a10d0
01182f2b7af101182f2b7ac001192f00183fed3fed3f2b3c003fed10f65d
e4870e2e2b057d10c42b11123939870e10c408c43130005d01715d5d2b2b
2b17170616171633323736373706232226353412363332173733030e0223
222626353413141716163332361235342623220e023ab7022225314ea448
2f28128d9fa1d9abec7dd17124a6d62372cb8580b95be7151e6f4459b06d
916b427c6b3760113e3e11165539bf568fedd9b3012c99c6aefbffa9bd68
427f521902536d374d517d010677839b4791ca00>LAAAAA+Arial-ItalicMT AddT42Char 
1 2578 13 <000100460000046e05ba000b0164b9000afff040290b1034200540055b04
6a048b0498049a05070904010f032303a10ae50af50a05690984039706cd
0304b10602435458402809100c11340a0903080404000100040608000a08
0d00070d0b030a02020b02100b58011000000d0c01111239102b3cfd2b3c
11121739111239111239003f3c3f3f111217392b1b40500606070909080a
0a050303040b02040605030408020b0b2300011400000103040302043305
0a1405050a0908090a0823070614070706090807060403060d0c06040b02
2801000504060b280807000a09b801b8402b0a04632f0501058c3f0d4f0d
5f0d030d02100b5872010101102f003f004f005f000400560c011000568c
182b2f2b3c014e10f45d2b3c5d014dfd2b3c014e105df65d4ded10e6003f
3c3c2b3c003f3c3f2b3c001112390111121739872e2b087d10c405872e18
2b087d10c405872e182b7d10c4001112390111123907083c0710083c083c
593130005d7101715d2b330133030133010123030703460133b4be0210ef
fe3b0112c6d4dc4a05bafc7301f9fe74fd660221befe9d00>LAAAAA+Arial-ItalicMT AddT42Char 
1 2992 14 <0001004300000680043e002a0149403d4611012c40090a349f2cbb23bf2c
cf17c923e7020699179923ae16ae22af2cbb1706450e5608550e5712660e
7f2c0609012208220e3508330e4608062cb8ffc0404f0d103403292a0202
2a2a23000114012010397401010000011d1e1e231f201420201039742001
1f1f200f12122313141414201039741401131314251f06191f0c0c060702
2801062a1f1e1328000a2cb801d2400d140f0912581410001310130213b8
016b400d1f1d101e582010001f101f021fb8016b401f0002102a5801102f
003f004f005f000400562b01100020101f141013563e182b2f2b3c012f2b
3c012f2b3c014e10f45d2b3c014dfd2b3c0110f45d2b3c01fd2b3c0110f4
5d2b3c01fd2bc40110e4003f2b3c3c3c3c003f2b3c003f3c10ed10ed0587
2e5d2b2b0e7d10c405872e185d2b2b0e7d10c405872e185d2b2b7d10c407
0e3c3c3130012b5d5d5d5d2b5d3313330736363332161736363332161514
070323133635342623220606070323133635342623220606070343deb525
659f5d63851551b3638585178fb59213423c51a85d236cb5961041344da9
6a22690426af7156695e64637e723171fd5402be5625343c629fa5fdfd02
cd491f344062afa2fe0a>LAAAAA+Arial-ItalicMT AddT42Char 
1 3452 15 <00020064ffe80452043e000e00200078b90011ffe040530e11341b200e11
34270901602270220206051b15141e0359145a15561e561f6f15601f0643
0501741076147b1a7a1eb403051c1f0407121f0b0b0f2000402d2f340026
211920000710077007030773222665182b4e10f65d4ded4e10f42b4ded00
3fed3fed3130005d71015d5d715d2b2b1310373633321615140204232226
2637141633323e02373635342623220e0264b797f5c0eb94feef977ccb6b
b5906f3a726245151f916e558c713501930137cca8f0ccb7fec5a86ac291
969b2f607b47635b909f519ccf00>LAAAAA+Arial-ItalicMT AddT42Char 
1 3676 16 <00010073ffee029205a8001a0088402a4a0f660f760f870f980e9913a709
b01cc01ce8130a0001010300190f00120b2c110c06191f030b0ff011b801
feb2107412ba01fe0013021bb31458090cb8021bb20d740bbc021b000a02
1b0009ffc0400b242c34000910098f090309b8028fb31b38b3182b10f65d
2bf4e4f4e410fdf4e4f4e4e4003fed3f3cfd3c3f1139123910c93130015d
25070623222726353437132337331337033307230306151416333201eb1e
413d6c40301a818f1d8f37cf51b21eb17b17252a3c939411352845237e02
698c01057dfe7e8cfdb570162022>LAAAAA+Arial-ItalicMT AddT42Char 
1 3900 17 <00010000fe51047d04260014009840532016300b400c4016870a05090c0b
0d1609170a2a0b380d060808090d0e0e0700011500130108030f10103307
0e1407070e0d0e0a0710030d080f0e0e0a0a0906080a0320130f0f58100e
01100e010e0a580901ba029200150103b18c182b10e42fed2f5d72ed003f
ed3f3f3c103c103c123911393901111239870e2e2b057d10c40011123912
3901111239871004c4083c313001715d1137163332373637370333131617
013301060623220b383537222c343ab1b250181101dbbdfd5b6298633ffe
66aa1019215b680429fde79f9f0357fb4db07200>LAAAAA+Arial-ItalicMT AddT42Char 
1 0 0 <0002010000000500050000030007004ab10201bb012e000600070237b200
0504b8012eb403000a0704b8012eb5010019080605bb012e000200030143
b3095bbe182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c3130
211121112521112101000400fc2003c0fc400500fb002004c000>LAAAAA+Arial-ItalicMT AddT42Char 
LAAAAA+Arial-ItalicMT /CharStrings get begin
/space 1 def
/parenleft 2 def
/parenright 3 def
/hyphen 4 def
/zero 5 def
/one 6 def
/two 7 def
/three 8 def
/four 9 def
/semicolon 10 def
/c 11 def
/g 12 def
/k 13 def
/m 14 def
/o 15 def
/t 16 def
/y 17 def
end
LAAAAA+Arial-ItalicMT /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 59 /semicolon put
dup 99 /c put
dup 103 /g put
dup 107 /k put
dup 109 /m put
dup 111 /o put
dup 116 /t put
dup 121 /y put
pop
end
%ADOEndSubsetFont
/GEFRQC+Arial-ItalicMT /LAAAAA+Arial-ItalicMT findfont ct_VMDictPut/GEFRQC+Arial-ItalicMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two /three /four 6{/.notdef}rp /semicolon 39{/.notdef}rp /c 3{/.notdef}rp /g 3{/.notdef}rp /k /.notdef /m /.notdef /o 4{/.notdef}rp /t 4{/.notdef}rp /y 134{/.notdef}rp]GEFRQC+Arial-ItalicMT nfGEFRQC+Arial-ItalicMT*1 [8 0 0 -8 0 0 ]msf101.95 33.7508 mo(cmk-1)sh123.727 33.7508 mo(\(oy21\) )[2.66394 4.44959 4 4.4496 4.4496 2.66394 0 ]xsh%ADOBeginSubsetFont: MAAAAA+ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /MAAAAA+ArialMT
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000006546670
676d00000000000007100000066e676c79660000000000001a2000000f7c
686561640000000000000d8000000036686865610000000000000db80000
0024686d74780000000000000ddc0000002c6c6f63610000000000000e08
000000186d6178700000000000000e20000000206e616d65000000000000
0e4000000020707265700000000000000e6000000bbe6764697200000000
000000000000000005ba001905ba001a05a70019042600180000ffe70000
ffe80000ffe7fe69ffe805ba0019fe69ffe802ea000000b8000000b80000
000000a800ad016900ad00bf00c201f0001800af00b900b400c800170044
009c007c009400870006005a00c80089005200520005004400940119ffb4
002f00a1000300a100cd00170057007e00ba00160118ffe9007f008503d3
00870085000d002200410050006f008d014cff75005c00df04830037004c
006e00700180ff58ff8eff92ffa400a500b903c8fffd000b001a00630063
00cdffee05d8ffdc002d005c0095009900df019209b500400057008000b9
039d0072009a035d0401ff67fffa00030021007700cd0004004d00cd01c0
022b004c006500e70118017c034305d8ffa3ffb0ffc40003001c005d0068
009a00ba013501470221055cff4dffcd0016002d00780080009900b200b6
00b600b800bd00da010c05f0ffa4fff00019002c0049007f00b400ce01c0
03fefd81fe3f000000050018002900390049006f00be00c700d0012301c1
026f050c05320540057affd4001400310055005700a700b400e601f7027e
027e027f03c60446ff42000e0085009100bf00c200c500e1011a012f014f
01560229026f029e03720008002c00310031006400690089009800c700de
012b01b6020c02cf03a304ab04fb061dfee0ff0e00060026009b009d00c1
010d011801200173018201d601e30243025f029b02e2039404a904d20761
001c005e006d008d00ab00f7011201380151015b0168017c018701910199
01cd01d001e802410254026b02ef0368037103bd04420442045304730483
0586058b06e8fe58fec4fed1fef7ff32ff860051007c008100910095009e
00b400b900cf00d900d900df00e20105010b010e010e012001210155017b
017b017e018d01a201a801a901b401d001d001e201e901f201f501fb0200
02000206021b0221022202220223027202770294029c02cf02cf02d002ec
02f903170322032b0335033c0359036f037103870390039003b503e1041a
04cf04ff053205320596059f05a805ab05c205f0060c0782080008ccfca3
fd2afddefe00fe88fe96feb2feb4ffe100150019001a001c001f003c0051
00610061006a0078009600a500af00d3010c0118011a012a013e014c0151
015f016a0171017801820184019a01a501a801a901ae01bc01cd01d701ef
0200020d021c02210222022e02350242024f024f025e0265027102900292
02b402d602fa0307030b030f0315032a0347035d036503740379039603b0
03cc03dd03e203f603fc03fc03ff040a041f04220426042b0447045f0475
049e04e704e7055c05cb05e5060a066d068606b806f10736073e07500751
075d078f07b607d4086000b600c300b500b7000000000000000000000000
01e00381034503b5008e0233041902ce02ce002d005f0064034d023f0000
02a80188027d01b402240578063b023b014e00f00426029402c6029f02f6
023b034d014b0153006a0231000000000000061404aa0000003c04c300ed
04bc026502ce03b50078060c017e02ef060c00b201000239000001c50330
042b03cb00da03df010704a100db040a011701ed02a70350010b01bd043e
05580021039c00ae0371017d00b5024500000afb088c012b014e01aa0087
0054013201f803ff0003024e00b4003703e30083006b02d800ed00770088
009701640467008e0033017c00e700a6029e0329056e062a061501c90269
048a021301b4000204a9000002390124010305140084015d039a06ef02d9
007500cf040a00de03ac04bc02cf02ae034d04f005520168006d007d0086
0071ff810079055804d2016700030156002504e00094007c033204210094
007f0072005c002f00b6001800ba00b80041034d00720018001f004c016a
01550099009a009a009800b200040078006900140057006e00ce00b40654
02b80067050e016500e7000004cbfe52005affa60099ff67006eff92002d
ffd40087ff7c00b800a800e5008f00a80185fe7b0070001e00d900de014c
054602cf0546ff2d028a02d90253029600b7000000000000000000000000
00000125011800ea00ea00ae0000003e05bb008a04d70053003fff8cffd5
00150028002200990062004a00e4006d00ee00e5004803c00033fe4e02b1
ff460370007905df0051ffa7ff1f010a0068ff6c004f00bc00a507050061
072b00ed04b001d200b6007b00650252ff740365fe690094008f005c0040
00860075008900894043555441403f3e3d3c3b3a3938373534333231302f
2e2d2c2b2a292827262524232221201f1e1d1c1b1a191817161514131211
100f0e0d0c0b0a090807060504030201002c4523466020b02660b0042623
48482d2c452346236120b02661b004262348482d2c45234660b0206120b0
4660b004262348482d2c4523462361b0206020b02661b02061b004262348
482d2c45234660b0406120b06660b004262348482d2c4523462361b04060
20b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd44
2320b8015a51582320b08d44235920b0ed51582320b04d44235920b09051
582320b00d44235921212d2c20204518684420b001602045b04676688a45
60442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0172370
b101173e01b0172370b10217453ab10200080d2d2c45b01a234445b01923
442d2c2045b00325456164b050515845441b2121592d2cb00143632362b0
002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a2d2c2069
b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b00361592d
2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2cb0124358
8745b0112bb0172344b0177ae41b038a45186920b01723448a8a8720b0a0
5158b0112bb0172344b0177ae41b21b0177ae45959182d2c2d2cb0022546
608a46b040618c482d2c4b53205c58b002855958b00185592d2c20b00325
45b019234445b01a23444565234520b00325606a20b009234223688a6a60
6120b01a8ab000527921b21a1a40b9ffe0001a45208a54582321b03f1b23
5961441cb114008a5279b31940201945208a54582321b03f1b235961442d
2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c
0d432343650b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b52
5845441b2121592d2c0120b003252349b04060b0206320b000525823b002
253823b002256538008a63381b212121212159012d2c4bb06451584569b0
0943608a103a1b212121592d2c01b005251023208af500b0016023edec2d
2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c
20b001600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a
2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b8022323701020b8
02234520b0005058b00161593a2f182d2c21210c6423648bb84000622d2c
21b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0c051
580c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb84000
626023212d2cb4000100000015b00826b00826b00826b008260f10161345
683ab001162d2cb4000100000015b00826b00826b00826b008260f101613
4568653ab001162d2c4b53234b515a5820458a60441b2121592d2c4b5458
20458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458381b
2121592d2cb0134358031b02592d2cb0134358021b03592d2c4b54b01243
5c5a58381b2121592d2cb012435c580cb00425b00425060c6423646164b8
07085158b00425b00425012046b01060482046b0106048590a21211b2121
592d2cb012435c580cb00425b00425060c6423646164b807085158b00425
b00425012046b8fff060482046b8fff06048590a21211b2121592d2c4b53
234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b2121592d2c
4b53234b515ab012435c5a58381b2121592d2c0c8a034b54b00426024b54
5a8a8a0ab012435c5a58381b2121592d2c4b5258b00425b0042549b00425
b00425496120b0005458212043b0005558b00325b00325b8ffc038b8ffc0
38591bb04054582043b0005458b00225b8ffc038591b2043b0005458b003
25b00325b8ffc038b8ffc0381bb00325b8ffc03859595959212121212d2c
462346608a8a462320468a608a61b8ff8062232010238ab902c202c28a70
456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb10200
42b123018851b1400188535a58b910000020885458b202010243604259b1
2401885158b920000040885458b2020202436042b12401885458b2022002
436042004b014b5258b2020802436042591bb940000080885458b2020402
43604259b94000008063b80100885458b202080243604259b94000010063
b80200885458b202100243604259b94000020063b80400885458b2024002
43604259595959592d2cb0024354584b53234b515a58381b2121591b2121
2121592d00000001000000050f5c93baa7385f0f3cf5081b080000000000
a2e3272a00000000c59b6257faaffd671000080c00000009000100000000
000000010000073efe4e00431000faaffa7a100000010000000000000000
000000000000000b060001000239000002aa0041047300460473004b01c7
008801c70083047300870239002405c70006040000210000001500150038
011201f1026b02e903cb045d069207be00010000000b00f2003c009d0007
00020010002f0056000004ac041d00050002000000010012000100000000
0006000e00004459425355442b417269616c4d54b900540328b326181fd0
bc032900e0032900020329b22b1d1fb90327031db23b1f40b80323b31215
320f412d03200001002f0320000100200320006f032000af032000bf0320
0004005f031e00010010031e007f031e0080031e00af031e00bf031e00d0
031e00060000031e0010031e0020031e006f031e009f031e00e0031e0006
031d031cb2201f1041270319007f03190002000f031700ef031700ff0317
0003001f0317002f0317004f0317005f0317008f0317009f03170006000f
0317005f0317006f0317007f031700bf031700f00317000600400317b292
3340b80317b28b3340b80317b36a6c3240b80317b2613340b80317b35c5d
3240b80317b357593240b80317b34d513240b80317b344493240b80317b2
3a3340b80317b331343240b80317b32e423240b80317b3272c3240b80317
b312253280b80317b30a0d32c04116031600d00316000200700316000102
c4000f0101001f00a0031500b0031500020306000f0101001f00400312b3
2426329fbf03040001030203010064001fffc00301b20d1132410a02ff02
ef0012001f02ee02ed0064001fffc002edb30e11329f414a02e200af02e2
00bf02e2000302e202e202e102e1007f02e00001001002e0003f02e0009f
02e000bf02e000cf02e000ef02e0000602e002e002df02df02de02de000f
02dd002f02dd003f02dd005f02dd009f02dd00bf02dd00ef02dd000702dd
02dd001002dc0001000002dc0001001002dc003f02dc000202dc02dc0010
02db000102db02db000f02da000102da02daffc002d3b2373932b9ffc002
d3b22b2f32b9ffc002d3b21f2532b9ffc002d3b2171b32b9ffc002d3b212
1632b802d2b2f9291fb90326031cb23b1f40bb0322003e00330322b22531
1fb80318b23c691fb802e3b3202b1fa0413002d400b002d40002000002d4
001002d4002002d4005002d4006002d4007002d40006006002d6007002d6
008002d6009002d600a002d600b002d60006000002d6001002d6002002ca
002002cc002002d6003002d6004002d6005002d6000802d0b2202b1fb802
cfb226421f411602ce02c70017001f02cd02c80017001f02cc02c6001700
1f02cb02c50017001f02c902c5001e001f02ca02c6b21e1f00410b02c600
0002c7001002c6001002c7002f02c5000502c1b324121fff411102bf0001
001f02bf002f02bf003f02bf004f02bf005f02bf008f02bf000602bf0222
b2641f12410b02bb00ca0800001f02b200e90800001f02a600a20800406a
1f4026434932402043493240263a3d3240203a3d329f209f260240269699
32402096993240268e923240208e92324026848c324020848c3240267a81
3240207a813240266c763240206c76324026646a324020646a3240265a5f
3240205a5f3240264f543240204f5432b8029eb724271f374f6b0120410f
0277003002770040027700500277000402770277027700f90400001f029b
b22a2a1fb8029a402b292a1f80ba0180bc0180520180a201806501807e01
808101803c01805e01802b01801c01801e0180400180bb01380001008001
40b40180400180bb013800010080013940180180ca0180ad018073018026
018025018024018020013740b80221b2493340b80221b2453340b80221b3
41423240b80221b33d3e320f410f0221003f0221007f0221000300bf0221
00cf022100ff0221000300400221b320223240b80221b3191e3240b80222
b32a3f3240b80221b32e3a326f414802c3007f02c3008f02c300df02c300
04002f02c3006002c300cf02c30003000f02c3003f02c3005f02c300c002
c300ef02c300ff02c3000600df02220001008f02220001000f0222002f02
22003f0222005f0222007f022200ef0222000600bf022100ef0221000200
6f0221007f022100af02210003002f0221003f0221004f0221000302c302
c30222022202210221401d101c102b1048038f1c010f1e014f1eff1e0237
00161600000012110811b8010db6f70df8f70d00094109028e028f001d00
1f0290028f001d001f028fb2f91d1fb80198b226bb1f41150197001e0401
001f013900260125001f013800730401001f0135001c0801001f0134001c
02ab001f0132b21c561fb8010fb2262c1fba010e001e0401b61ff91ce41f
e91cb80201b61fe81cbb1fd720b80401b21fd51cb802abb61fd41c891fc9
2fb80801b21fbc26b80101b21fba20b80201b61fb91c381fadcab80401b2
1f8126b8019ab21f7e26b8019ab61f7d1c471f6b1cb80401b21f6526b801
9ab21f5e73b80401400f1f52265a1f481c891f441c621f4073b80801b61f
3f1c5e1f3c26b8019ab21f351cb80401b61f301cbb1f2b1cb80401b61f2a
1c561f291cb80101b21f231eb80401b21f5537b80168402c07960758074f
07360732072c0721071f071d071b071408120810080e080c080a08080806
0804080208000814b8ffe0402b0000010014061000000100060400000100
0410000001001002000001000200000001000002010802004a00b013034b
024b5342014bb0c063004b6220b0f65323b8010a515ab005234201b0124b
004b5442b0382b4bb807ff52b0372b4bb007505b58b101018e59b0382bb0
0288b801005458b801ffb101018e851bb0124358b900010111858d1bb900
010128858d5959001816763f183f123e113946443e113946443e11394644
3e113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b
2b2b2b2b2b2b2b2b2b2b182b1db0964b5358b0aa1d59b0324b5358b0ff1d
594bb09353205c58b901f201f04544b901f101f045445958b9033e01f245
5258b901f2033e4459594bb8015653205c58b9002001f14544b9002601f1
45445958b9081e0020455258b90020081e4459594bb8019a53205c58b900
2501f24544b9002401f245445958b909090025455258b900250909445959
4bb8040153205c58b173244544b1242445445958b917200073455258b900
7317204459594bb8040153205c58b1ca254544b1252545445958b9168000
ca455258b900ca16804459594bb03e53205c58b11c1c4544b11e1c454459
58b9011a001c455258b9001c011a4459594bb05653205c58b11c1c4544b1
2f1c45445958b90189001c455258b9001c01894459594bb8030153205c58
b11c1c4544b11c1c45445958b90de0001c455258b9001c0de04459592b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b65422b2b01b33b59635c4565234560234565602345
60b08b766818b080622020b163594565234520b003266062636820b00326
6165b059236544b063234420b13b5c4565234520b003266062636820b003
266165b05c236544b03b2344b1005c455458b15c406544b23b403b452361
4459b347503437456523456023456560234560b089766818b080622020b1
34504565234520b003266062636820b003266165b050236544b034234420
b147374565234520b003266062636820b003266165b037236544b0472344
b10037455458b137406544b24740474523614459004b5342014b5058b108
004259435c58b108004259b3020b0a124358601b2159421610703eb01243
58b93b21187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d
412d411bba04000400000b2b59b00e2342b00f2342b0124358b9187e3b21
1bba01a80400000b2b59b0102342b0112342002b74757375001845694445
69444569447373737374757374752b2b2b2b74752b2b2b2b2b7373737373
73737373737373737373737373737373737373732b2b2b45b04061447374
00004bb02a534bb03f515a58b1070745b040604459004bb03a534bb03f51
5a58b10b0b45b8ffc0604459004bb02e534bb03a515a58b1030345b04060
4459004bb02e534bb03c515a58b1090945b8ffc06044592b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b752b2b2b2b2b2b2b435c58b9008002bbb30140
1e017400735903b01e4b5402b0124b545ab012435c5a58ba009f02220001
007359002b7473012b01732b2b2b2b2b2b2b2b737373732b2b2b2b2b002b
2b2b2b2b2b00456944734569447345694473747545694473456944456944
4569447374456944456944732b2b2b2b2b732b002b732b74752b2b2b2b2b
2b2b2b2b2b2b2b2b2b737475732b7374757374752b2b2b742b2b000000>
[3965 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 1 <> MAAAAA+ArialMT AddT42Char 
1 42 2 <0001004101b8026a026d0003002c401970027003024d014d020201230002
1a05700001001904708d182b4e10e45d10e6002f4ded31300071015d1335
211541022901b8b5b500>MAAAAA+ArialMT AddT42Char 
1 112 3 <00020046ffe803df05ba0011001d015540a40a02040d250d340d440d0535
14351c5702540a5214531c6702640565096314601cc01fd405d513dd19e5
13e514ef17eb19e51de01fff1f161f1f2b1a3c163c1a4b1a701f901f072e
02240d2e163a02350d4b02450d4614491c570a560d670de506e716fa01f4
0e100115030e0b100f001b1c0b0711000a151c030b1833010025110f2510
10d011011011401160118011041f400b0b02551f400d0d02551112101002
5511b8fff440110f0f025511060e0e025511180d0d025511b8fff2400b0b
0b0655110e1010065511b8ffeeb40c0c065511b8fff840420d0d06551174
1224bf07cf07df07ff07041f073f074f0703071e0b0b025507180c0c0255
071e0d0d0255070c0b0b0655070c0d0d0655071a0c0c065507191e345018
2b4e10f42b2b2b2b2b2b5d714dedfd2b2b2b2b2b2b2b2b2b2b5d713c10ed
10fd3ce4003fed3f3c3fed3f3c11391112393130005d01715d0071213506
232226263534123633321617113311011416333236353426232206033865
c47fd5756ad48360962fb3fd20ac7576a5a87b78a1869e8cfba39f01038a
5141020efa460212cccac1c6daccc400>MAAAAA+ArialMT AddT42Char 
1 548 4 <0002004bffe8041e043e0015001d015340171f001c150255035d055d0955
0b65036b056f09650b0815b8ffe4b40d0d065511b8ffe440520d0d06551d
1c0d0d06552712d905fa14f61a0431123a19311c41124d1a411c51125c19
521c61126d1a611c78067815f602f618100016010f0d1717501660167016
03161c0f9010a010021010041b1c0a0700ba02aa0001ffc0b41010025501
b8ffc04010101006551001010195131c040b17400db8ffdcb40d0d02550d
b8ffeeb40d0d06550db8ffeab40c0c06550db8ffc04009272a34b00d010d
1a1fb8ffc0b32526341fb8ffc040411e2334301f011f163310240740242a
341f073f074f070307200b0b025507180c0c0255071c0d0d0255070e0b0b
0655071c0c0c065507160d0d065507191e3437182b4e10f42b2b2b2b2b2b
5d2b4dfde44e10712b2bf6712b2b2b2b4ded003fedfd5d2b2be43fed1239
2f5d3cfd713c011112393912393130015d005d2b2b2b0171720117060623
22001110003332001114072116163332360121262726232206035eba2cee
b9e9feef0114dcd5010e01fce80ab285638cfdda02510c3856897ca90156
17a3b4011f0103010c0128fedefef91020afba680195864368a6>MAAAAA+ArialMT AddT42Char 
1 994 5 <000200880000013c05ba0003000700cd405e09360b0b02554f099009a009
b009c009df09f0090700091f09700980099f09b009c009df09e009ff090a
1f09010001070402030906037e0100060506040a0607250500049f04a004
b004c004e00406c004f0040200042004d004e0040404b8fff8b410100255
04b8fffa40170e0e025504040c0c0255040a0b0b025504140b0b065504b8
ffeab41010065504b8fffeb40d0d065504b8fffc400a0c0c0655044e0847
50182b10f62b2b2b2b2b2b2b2b5d71723cfd3c003f3f3c3fed0111123939
111239393130015d72712b133533150311331188b4b4b404ebcfcffb1504
26fbda00>MAAAAA+ArialMT AddT42Char 
1 1238 6 <000100830000013705ba000300e3b605360b0b025505b8ffc0b337383405
b8ffc0b334353405b8ffc0b330313405b8ffc0b322253405b8ffc0402515
17340f051f059f05df05044f05df05f005031f0570058005ff0504010000
0a0203250100b8ffc0b337383400b8ffc040153335349f0001c000f00002
00002000d000e0000400b8fff8b41010025500b8fffa401d0e0e02550004
0c0c0255000a0b0b025500140b0b065500081010065500b8fffeb40d0d06
5500b8ffffb40c0c065500b8fffc400a0c0c0655004e044750182b10f62b
2b2b2b2b2b2b2b2b5d71722b2b3cfd3c003f3f3130015d71722b2b2b2b2b
2b3311331183b405bafa4600>MAAAAA+ArialMT AddT42Char 
1 1490 7 <00020087fe690421043e0012001e0162408e0c102d103d104b10043f20b0
20021f20290c231d3215321d421d70209020083a173a1b4a174a1b59085b
0c5c175c1b6a086b0c69106d176b1bc020d314dd18dd1ad31ee414e41ee0
20ff201623042b102b1535043a1046044a105a10e50beb1dfe100b110e03
161c1c06070106161c0e0b000e1924d00a01100a400a600a800a0420400b
0b025520400d0d02550ab8ffe6400b0f0f02550a180d0d02550ab8fffab4
0c0c02550ab8ffeeb40b0b06550ab8fff4b40f0f06550ab8ffe840230c0c
06550a74011333023312250000c001019001a001b001f001041f013f014f
010301b8fffc401d0e0e025501100d0d025501100c0c025501100b0b0255
010c0b0b065501b8fff6b41010065501b8fffc40160f0f0655010c0c0c06
5501120d0d065501191f473718012b4e10f42b2b2b2b2b2b2b2b2b5d7172
3c4d10fdf4e410fd2b2b2b2b2b2b2b2b5d71ed003f3fed3f3fed11391239
3130005d015d717200711311331536363332161615140206232226271103
141633323635342623220687a43a926888d06a75df7b5a8f2e11a67678ab
a77473b1fe6905bd8a51518cff98a3fefb8b4c3afdfb03a4cdc4cbd5cbca
d700>MAAAAA+ArialMT AddT42Char 
1 1942 8 <00010024fff2022a0599001700d8b9000affc0b323263409b8ffc0404123
263480190100010c0d0a0103001610092b0f0a06161c030b0f1022002201
0d12250c01ff070845094560077007800790070400072007a007b007c007
d0070607b8ffeeb41010025507b8fff4b40f0f025507b8fff2b40e0e0255
07b8fff8b40d0d025507b8fff8b40c0c025507b8fffab41010065507b8ff
f0400b0f0f065507060c0c065507b8ffe8b40d0d065507ba026a00180136
b166182b10f62b2b2b2b2b2b2b2b2b5d71f4e410ed3cfd3c10e4f43c003f
ed3f3cfd3c1139123911333310c93130015d2b2b25170623222626351123
353311371133152311141616333202101a4c3c626c2c8484b3b5b5132b28
1ea19f103e65a202638c01076cfe8d8cfd934d2c1a00>MAAAAA+ArialMT AddT42Char 
1 2234 9 <00010006000005b704260012041db10202435458b90012fff440110d0d02
5507060d0d025500060d0d02550ab8ffd4b40c0d025504b8ffe8400b0c0d
025511200c0d02550ab8ffc0b40e10025504b8ffc0402f0e10025511400e
100255040a110301000c06070601060f0a000a0d0c060c0c02550c110102
040a04110a0c0c025511b8fff8b40d0d0255112f2b2bcdcd10d6cd10d42b
cd003f3f3f3f3f111217393130002b2b2b2b2b2b012b2b2b1b40160f1401
2a04290a024a115b118e110311200d0d06550ab8ffe0b40d0d065504b8ff
e0b40d0d065511b8fff040091f2134101c1d273409b8fff040b71f243404
060c0913061b09191205040004060b090b0e08121000130314071c081b0b
1d0e240025072a082b0e340035073a083b0e4403470640074d084b0b430f
47114a125b0f52126b076408671279067a077408b906ba0fb612f506fb09
280b112800280d270e280f27122f1438003712770886089803970ca701a8
02a80ba60cb500b606ba0ec804d606d909e804e80fe712f406fa091c0b06
0d0d06550c060d0d065510060d0d06550e060d0d06550f060d0d065512b1
0602435458401b0a0e0f0412001108070825070f250e122500000e07030d
010c250db8ffd640370b0b06550d0225012a0b0b0655010d011413060a0b
11260a2b115404520a5c116c117c118a110a110a040300010f0a000a0c06
07060106003f3f3f3f3f111217395d01111239392f2bf42f2bf411121739
10e410e410e41112391112391112391b40140305050206070705090a0a08
0b0c0c0a1011110fb8ff4bb305001220b8ff4940660a0f0e20c311070820
071112122b0507140505070e0a0c0c250d0e140d0d0e08110f0f2b0a0814
0a0a080005020225010014010100000201071204080f110c0e0d0a110a04
03120d0c0c0808070702020106120f0f0e0e000a14f6100d01600d700d80
0d030db801a7400a204f0a016f0a7f0a020ab8025540094f11016f117f11
0211b80255400b1005016005700580050305b801a7b501f613f666182b4e
10f4194df45d5d18fd5d71fd5d711a19fd5d5d18e6003f3c103c103c3f3c
103c103c103c103c1217390111123939123939113939123939874d2e2b87
7dc4872e182b877dc4872e182b877dc4872e182b877dc42b2b2b870e10c4
070e103c070e103c870e10c4870e10c44bb01f5358b40d200c2002bcffe0
0001ffe0000effd0b400300f2012b8ffe0013838383838383838594bb034
5358b90008ffd0b10730013838594bb021534bb033515a58b90008ffe0b1
0720013838594bb012534bb01e515a58b9000effd0b60f200d200c2008b8
ffd0b2073012b8ffe0b2003802baffe00001ffe001383838383838383838
38594bb012534bb017515a58b90011ffe0b30a2004200038383859593130
01435c58b9000effd4b61239002c123900b8ffd4b113392b2b2b592b2b2b
2b2b5d71722b2b2b002b2b2b715d015d5921013313173637133313173713
330123032703014bfebbbaa93f0433a9b99f353db6affeb4bba929d70426
fd9be411ca026efd98cbcd0266fbda027cb5fccf>MAAAAA+ArialMT AddT42Char 
1 3364 10 <00010021fe5103ee0426001a01f7b10202435458401d0a140f030b031c19
0f12060b061340120f200b400c200f180f0f02550f192f2b1add1a18cd1a
1910dd1a18cd003f3f3fed12173931301bb30f1c010fb8ffde406d1c3928
14560faf0a03400d400f020f202830341020283034070c0912160d181227
0b270c270d360c360d350e99110b28122813481659125913591569126913
69157906760d79117a147a15850d8a118c128c138914980aa80bbc10bb11
ba14ea0ae714f50dfd10f914ff1c1e12b106024354584016130b1c1b040f
440f840f030f190b031c190f12060b06003f3f3fed1112395d0111123939
1b40370f0f0c101112120a00031914131325120a1412120a0f0c0f110c25
0b0a140b0b0a1312120c0c0b06031c190f001c101c022f1cbf1c021cb802
3fb50f1340124014b80254400b3f124012025f12bf120212b80142b60f01
2200451b0ab8025440120f200b4040200c300c4f0c03500cff0c020cb801
42b32f0f010fb8023fb41b207c66182b1a1910fd71f45d711a18ed1a1910
ed1810f4e41910e45d71ed1a1810ed1910e45d7100183fed3f3c103c103c
87052e2b087d10c487052e182b0e7d10c400111239870e103c3c08c44bb0
0e534bb018515a58bb000cffe8000bffe80138385959313001435c58b900
14ffdeb637390a2237390eb8ffe8b51539112215392b2b2b2b595d712b2b
00715d2b015d591327163332363736373637013313161736371333010607
060623227f143b2c3c48171126050bfe6dc2dd2b221f2be3b4fe6c412430
7c5634fe67a91028241b6b0f1d0428fd9975817c76026bfbc8af42595300
>MAAAAA+ArialMT AddT42Char 
1 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>MAAAAA+ArialMT AddT42Char 
MAAAAA+ArialMT /CharStrings get begin
/space 1 def
/hyphen 2 def
/d 3 def
/e 4 def
/i 5 def
/l 6 def
/p 7 def
/t 8 def
/w 9 def
/y 10 def
end
MAAAAA+ArialMT /Encoding get
dup 32 /space put
dup 45 /hyphen put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 112 /p put
dup 116 /t put
dup 119 /w put
dup 121 /y put
pop
end
%ADOEndSubsetFont
/GEFRQD+ArialMT /MAAAAA+ArialMT findfont ct_VMDictPut/GEFRQD+ArialMT*1 [32{/.notdef}rp /space 12{/.notdef}rp /hyphen 54{/.notdef}rp /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l 3{/.notdef}rp /p 3{/.notdef}rp /t 2{/.notdef}rp /w /.notdef /y 134{/.notdef}rp]GEFRQD+ArialMT nfGEFRQD+ArialMT*1 [8 0 0 -8 0 0 ]msf101.95 22.2687 mo(wild-type )[5.7776 1.7776 1.7776 4.44959 2.66394 2.2224 4 4.44959 4.4496 0 ]xshGEFRQC+Arial-ItalicMT*1 [8 0 0 -8 0 0 ]msf101.95 44.2508 mo(ogt-1\(ok430\) )[4.44959 4.4496 2.2224 2.66394 4.4496 2.66394 4.4496 3.99999 4.4496 4.4496 4.44958 2.66394 0 ]xsh101.95 54.9218 mo(cmk-1)sh123.727 54.9218 mo(\(oy21\);ogt-1\(ok430\) )[2.66394 4.44959 4 4.4496 4.4496 2.66394 2.2224 4.4496 4.4496 2.2224 2.66394 4.4496 2.66394 4.4496 4 4.4496 4.4496 4.4496 2.66394 0 ]xshgrestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
] del_res
/GEFRQB+Helvetica-Oblique*1 uf/GEFRQB+Helvetica-Oblique uf/JAAAAA+Helvetica-Oblique uf/GEFRQC+Arial-ItalicMT*1 uf/GEFRQC+Arial-ItalicMT uf/LAAAAA+Arial-ItalicMT uf/GEFRQD+ArialMT*1 uf/GEFRQD+ArialMT uf/MAAAAA+ArialMT uf/GEFRQA+Helvetica*1 uf/GEFRQA+Helvetica uf/IAAAAA+Helvetica ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
